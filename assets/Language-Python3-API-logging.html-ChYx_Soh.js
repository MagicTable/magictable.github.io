import{_ as a,c as s,a as e,o as t}from"./app-D67BBu3k.js";const l={};function o(i,n){return t(),s("div",null,n[0]||(n[0]=[e(`<p><strong>文章摘要：</strong> Python的logging库是一个强大的日志记录工具，它可以帮助你记录应用程序的日志信息，以便于调试、监控和记录应用程序的运行情况。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><ul><li>Python的logging库是一个强大的日志记录工具，它可以帮助你记录应用程序的日志信息，以便于调试、监控和记录应用程序的运行情况。</li><li>logging库提供了多种日志处理器，如控制台处理器、文件处理器等，可以根据需要选择使用。</li><li>使用logging库可以方便地设置日志级别、格式化日志消息、处理日志异常等。</li></ul><p>基本概念</p><ul><li>Logger：日志记录器，提供应用程序可以直接使用的接口。</li><li>Handler：处理器，将logger创建的日志记录发送到合适的目的地。</li><li>Formatter：格式化器，指定日志显示的格式。</li><li>Level：日志级别，定义了日志的严重程度，常见的日志级别有：DEBUG（调试）、INFO（信息）、WARNING（警告）、ERROR（错误）、CRITICAL（关键）。</li></ul><h2 id="实用方案" tabindex="-1"><a class="header-anchor" href="#实用方案"><span>实用方案</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># 配置基础日志</span></span>
<span class="line">logger<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> logging</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">test_log</span><span class="token punctuation">(</span>logger_name<span class="token punctuation">,</span> log_file_path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 创建一个logger，日志记录器</span></span>
<span class="line">    logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>logger_name<span class="token punctuation">)</span></span>
<span class="line">    logger<span class="token punctuation">.</span>setLever<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 创建一个handler，格式化器</span></span>
<span class="line">    fh <span class="token operator">=</span> loggging<span class="token punctuation">.</span>FileHandler<span class="token punctuation">(</span>log_file_path<span class="token punctuation">)</span></span>
<span class="line">    fh<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span></span>
<span class="line">    formatter <span class="token operator">=</span> logging<span class="token punctuation">.</span>Formatter<span class="token punctuation">(</span></span>
<span class="line">        datefmt <span class="token operator">=</span> <span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        fmt <span class="token operator">=</span> <span class="token string">&quot;%(filename)s&quot;</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    fh<span class="token punctuation">.</span>setFormatter<span class="token punctuation">(</span>formatter<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 给logger（日志记录器）添加handler（格式化器）</span></span>
<span class="line">    logger<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>fh<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> logger</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const c=a(l,[["render",o]]),r=JSON.parse('{"path":"/software/Language-Python3-API-logging.html","title":"Language - Python 3 - API - logging","lang":"zh-CN","frontmatter":{"title":"Language - Python 3 - API - logging","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2023-08-10T00:00:00.000Z","tag":["进度-已停滞","查询手册"],"description":"文章摘要： Python的logging库是一个强大的日志记录工具，它可以帮助你记录应用程序的日志信息，以便于调试、监控和记录应用程序的运行情况。 简介 Python的logging库是一个强大的日志记录工具，它可以帮助你记录应用程序的日志信息，以便于调试、监控和记录应用程序的运行情况。 logging库提供了多种日志处理器，如控制台处理器、文件处理器...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - Python 3 - API - logging\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-Python3-API-logging.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - Python 3 - API - logging"}],["meta",{"property":"og:description","content":"文章摘要： Python的logging库是一个强大的日志记录工具，它可以帮助你记录应用程序的日志信息，以便于调试、监控和记录应用程序的运行情况。 简介 Python的logging库是一个强大的日志记录工具，它可以帮助你记录应用程序的日志信息，以便于调试、监控和记录应用程序的运行情况。 logging库提供了多种日志处理器，如控制台处理器、文件处理器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"查询手册"}],["meta",{"property":"article:tag","content":"进度-已停滞"}],["meta",{"property":"article:published_time","content":"2023-08-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-Python3-API-logging.md","excerpt":"<p><strong>文章摘要：</strong> Python的logging库是一个强大的日志记录工具，它可以帮助你记录应用程序的日志信息，以便于调试、监控和记录应用程序的运行情况。</p>\\n"}');export{c as comp,r as data};
