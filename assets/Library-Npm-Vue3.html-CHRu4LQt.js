import{_ as n,c as a,a as e,o as t}from"./app-D67BBu3k.js";const p={};function l(c,s){return t(),a("div",null,s[0]||(s[0]=[e(`<p><strong>文章摘要：</strong> Vue 是一款用于构建用户界面的 JavaScript 框架，偏向组合式API的总结。</p><blockquote><p>前置依赖：操作系统、node.js、npm</p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><blockquote><ul><li>渐进式的JavaScript框架。</li><li>基于标准 HTML、CSS 和 JavaScript 构建。</li><li>提供了一套声明式的、组件化的编程模型。</li></ul></blockquote><blockquote><ul><li><strong>声明式渲染</strong>：Vue 基于标准 HTML 拓展了一套模板语法，使得我们可以声明式地描述最终输出的 HTML 和 JavaScript 状态之间的关系。</li><li><strong>响应性</strong>：Vue 会自动跟踪 JavaScript 状态并在其发生变化时响应式地更新 DOM。</li><li>Vue 的单文件组件 （即 *.vue 文件）是一种特殊的文件格式，将Vue组件的模块、逻辑和样式封装在单个文件中。</li></ul></blockquote><p>适用场景</p><blockquote><ul><li>无需构建步骤，渐进式增强静态的 HTML</li><li>在任何页面中作为 Web Components 嵌入</li><li>单页应用 (SPA)</li><li>全栈 / 服务端渲染 (SSR)</li><li>Jamstack / 静态站点生成 (SSG)</li><li>开发桌面端、移动端、WebGL，甚至是命令行终端中的界面</li></ul></blockquote><h2 id="项目搭建" tabindex="-1"><a class="header-anchor" href="#项目搭建"><span>项目搭建</span></a></h2><blockquote><ul><li>请看Vue官方文档，此处只总结使用规范和项目总结。</li></ul></blockquote><ol><li><p>安装nodejs、npm</p></li><li><p>创建vue项目</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># vue脚手架命令行工具</span></span>
<span class="line"><span class="token comment"># 网络获取项目模板</span></span>
<span class="line"><span class="token function">npm</span> create vue@latest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 切换到项目目录下</span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>project<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装依赖，下载下来的项目并不包含依赖扩展，需要根据配置文件中的信息下载所需依赖扩展</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>运行vue项目</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 运行项目</span></span>
<span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>打包部署</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="api-风格" tabindex="-1"><a class="header-anchor" href="#api-风格"><span>API 风格</span></a></h2><h3 id="选项式-api-options-api" tabindex="-1"><a class="header-anchor" href="#选项式-api-options-api"><span>选项式 API（Options API）</span></a></h3><p>案例展示</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="组合式-api-composition-api" tabindex="-1"><a class="header-anchor" href="#组合式-api-composition-api"><span>组合式 API (Composition API)</span></a></h3><p>案例展示</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>组合式 API 案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>数字：{{count}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--设置script标签的type属性为module--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token comment">/*导入所需的文件*/</span></span>
<span class="line">    <span class="token keyword">import</span> <span class="token punctuation">{</span>createApp<span class="token punctuation">,</span> ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./vue.esm-browser.js&quot;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* 根组件，createApp本质是一个组件 */</span></span>
<span class="line">    <span class="token function">createApp</span><span class="token punctuation">(</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 设置响应式数据和方法等</span></span>
<span class="line">        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">/*定义数据*/</span></span>
<span class="line">            <span class="token keyword">const</span> count<span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">/*返回数据*/</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">                count<span class="token punctuation">,</span>  <span class="token comment">// 返回数值</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// 挂载实例</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建vue实例" tabindex="-1"><a class="header-anchor" href="#创建vue实例"><span>创建vue实例</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="单文件组件格式" tabindex="-1"><a class="header-anchor" href="#单文件组件格式"><span>单文件组件格式</span></a></h2><blockquote><ul><li>使用一种类似 HTML 格式的文件来书写 Vue 组件，它被称为单文件组件 (也被称为 *.vue 文件，英文 Single-File Components，缩写为 SFC)。</li><li>单文件组件会将一个组件的逻辑 (JavaScript)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里。</li></ul></blockquote><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code class="language-vue"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Count is: {{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"><span class="token selector">button</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="单组件相关" tabindex="-1"><a class="header-anchor" href="#单组件相关"><span>单组件相关</span></a></h2><h3 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式"><span>表达式</span></a></h3><p>插值表达式</p><blockquote><ul><li><code>{{ }}</code>：里面允许“数值”和“表达式”，不能是“编程语句”。</li><li>定义、判断、转换</li></ul></blockquote><h3 id="响应式数据-引用类型数据" tabindex="-1"><a class="header-anchor" href="#响应式数据-引用类型数据"><span>响应式数据（引用类型数据）</span></a></h3><blockquote><ul><li>响应式数据，代表Vue能做到实时数据监听和更新。</li></ul></blockquote><blockquote><ul><li><code>ref(&lt;数据&gt;)</code>：定义“浅层”的响应式对象数据。</li><li><code>reactive(&lt;数据&gt;)</code>：定义“深层”的响应式对象数据。</li><li><code>toRef(&lt;响应式对象数据&gt;, &lt;对象中的某个变量名&gt;)</code>：赋值给一个新变量名，同时保持响应数据同步。</li></ul></blockquote><h3 id="计算属性-计算得到结果并保持" tabindex="-1"><a class="header-anchor" href="#计算属性-计算得到结果并保持"><span>计算属性（计算得到结果并保持）</span></a></h3><blockquote><ul><li><code>computed()</code>：该方法提供计算，缓存计算结果，带有响应式数据追踪。</li></ul></blockquote><h3 id="侦听器-数据变化" tabindex="-1"><a class="header-anchor" href="#侦听器-数据变化"><span>侦听器（数据变化）</span></a></h3><blockquote><ul><li>侦听一个或多个响应式数据源。</li><li><code>watch()</code>：在数据源变化时才会执行回调函数。</li><li><code>watchEffect()</code>：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行。</li></ul></blockquote><h3 id="指令-内置方法" tabindex="-1"><a class="header-anchor" href="#指令-内置方法"><span>指令（内置方法）</span></a></h3><blockquote><ul><li>Vue特有且针对HTML渲染行为的预定义属性。</li><li>v-text、v-html、v-show、v-if、v-else、v-else-if、v-for、v-on、v-bind、v-model、v-slot、v-pre、v-once、v-memo、v-cloak</li></ul></blockquote><h3 id="v-on的事件修饰符" tabindex="-1"><a class="header-anchor" href="#v-on的事件修饰符"><span><code>v-on</code>的事件修饰符</span></a></h3><blockquote><ul><li><strong>点击事件修饰符</strong>：<code>stop</code>、<code>prevent</code>、<code>self</code>、<code>capture</code>、<code>once</code>、<code>passive</code>、<code>keyup</code>单击、<code>keydown</code>按下</li><li><strong>鼠标按键修饰符</strong>：<code>left</code>、<code>right</code>、<code>middle</code></li><li><strong>按键修饰符</strong>：<code>space</code>空格、<code>enter</code>回车、<code>tab</code>Tab、<code>shift</code>上档、<code>ctrl</code>、<code>alt</code>、<code>&lt;小写的26个字母&gt;</code></li><li><strong>输入框修饰符</strong>：<code>lazy</code>、<code>number</code>、<code>trin</code></li></ul></blockquote><p>案例</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token comment">&lt;!--提示：写在HTML的标签中，作为属性存在--&gt;</span></span>
<span class="line"><span class="token comment">&lt;!--按键监听--&gt;</span></span>
<span class="line">v-on:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>参数</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>值</span><span class="token punctuation">&gt;</span></span> = &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>执行内容</span><span class="token punctuation">&gt;</span></span>&quot;</span>
<span class="line">v-on:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>参数</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>值</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>值</span><span class="token punctuation">&gt;</span></span> = &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>执行内容</span><span class="token punctuation">&gt;</span></span>&quot;</span>
<span class="line">v-on:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>参数</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>值</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>值</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>值</span><span class="token punctuation">&gt;</span></span> = &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>执行内容</span><span class="token punctuation">&gt;</span></span>&quot;</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>&lt;执行方法&gt;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态资源" tabindex="-1"><a class="header-anchor" href="#静态资源"><span>静态资源</span></a></h3><p>图片引用、样式绑定、外部样式表、sass、bootstrap、tailwindCss、动态样式</p><h2 id="多组件相关" tabindex="-1"><a class="header-anchor" href="#多组件相关"><span>多组件相关</span></a></h2><h3 id="引用与注册" tabindex="-1"><a class="header-anchor" href="#引用与注册"><span>引用与注册</span></a></h3><p>全局注册</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> user <span class="token keyword">from</span> <span class="token string">&#39;./user.vue&#39;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>局部注册</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">import</span> user <span class="token keyword">from</span> <span class="token string">&#39;./user.vue&#39;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>user<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>user<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="传递数据" tabindex="-1"><a class="header-anchor" href="#传递数据"><span>传递数据</span></a></h3><h4 id="父传子-浅层" tabindex="-1"><a class="header-anchor" href="#父传子-浅层"><span>父传子（浅层）</span></a></h4><blockquote><ul><li><code>defineProps()</code></li><li>定义数据：<code>变量名: {type: &lt;数据类型&gt;, required: &lt;是否必须&gt;, default: &lt;默认值&gt;}</code></li></ul></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">变量名</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">,</span> </span>
<span class="line">        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token operator">&lt;</span>是否必须<span class="token operator">&gt;</span><span class="token punctuation">,</span> </span>
<span class="line">        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token operator">&lt;</span>默认值<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="子传父-浅层" tabindex="-1"><a class="header-anchor" href="#子传父-浅层"><span>子传父（浅层）</span></a></h4><blockquote><ul><li><code>defineEmits()</code></li><li>定义数据</li></ul></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> emits <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;&lt;变量名&gt;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 为变量赋值</span></span>
<span class="line"><span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;变量名&gt;&quot;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>数据<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="依赖注入-深层父传子" tabindex="-1"><a class="header-anchor" href="#依赖注入-深层父传子"><span>依赖注入（深层父传子）</span></a></h4><blockquote><ul><li>定义全局变量且不允许子级修改。</li><li>只允许“父级”向“子级”方向传值或更新值。</li><li></li></ul></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>provide inject<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 父级定义</span></span>
<span class="line"><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;变量&gt;&quot;</span><span class="token punctuation">,</span> 数据<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 子级使用</span></span>
<span class="line"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;变量&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="状态管理-深层子传父" tabindex="-1"><a class="header-anchor" href="#状态管理-深层子传父"><span>状态管理（深层子传父）</span></a></h4><blockquote><ul><li>当多个组件没有关系，但使用共同的变量数据，且需要修改共同的变量数据。</li><li>==待完善==</li></ul></blockquote><h3 id="插槽-小功能" tabindex="-1"><a class="header-anchor" href="#插槽-小功能"><span>插槽（小功能）</span></a></h3><blockquote><ul><li>在当前组件的html位置预留HTML空位的行为，在被第三方引入时插入具体内容。</li></ul></blockquote><p>单一插槽</p><blockquote><ul><li><code>&lt;slot&gt;&lt;/slot&gt;</code>：仅预留一个插槽位置</li><li>具体使用时，直接传入内容即可。</li></ul></blockquote><p>具名插槽</p><blockquote><ul><li><code>&lt;slot name=名称&gt;&lt;/slot&gt;</code>：为插槽指定一个<code>name</code>属性。</li><li>具体使用时需要写在<code>&lt;template #插槽名称&gt;&lt;/template&gt;</code>中，并设置<code>#&lt;插槽名&gt;</code>。</li></ul></blockquote><p>条件插槽</p><blockquote><ul><li>具体实现类似，用于相同的元素循环生成，并提供外部传入元素。</li></ul></blockquote><h3 id="生命周期-监听器" tabindex="-1"><a class="header-anchor" href="#生命周期-监听器"><span>生命周期（监听器）</span></a></h3><blockquote><ul><li>监听组件一系列时间段时的方法。</li></ul></blockquote><blockquote><ul><li><code>onMounted()</code>：注册一个回调函数，在组件挂载完成后执行。</li><li><code>onUpdated()</code>：注册一个回调函数，在组件因为响应式状态变更而更新其 DOM 树之后调用。</li><li><code>onUnmounted()</code>：注册一个回调函数，在组件实例被卸载之后调用。</li><li><code>onBeforeMount()</code>：注册一个钩子，在组件被挂载之前被调用。</li><li><code>onBeforeUpdate()</code>：注册一个钩子，在组件即将因为响应式状态变更而更新其 DOM 树之前调用。</li><li><code>onBeforeUnmount()</code>：注册一个钩子，在组件实例被卸载之前调用。</li><li><code>onErrorCaptured()</code>：注册一个钩子，在捕获了后代组件传递的错误时调用。</li><li><code>onRenderTracked()</code>：注册一个调试钩子，当组件渲染过程中追踪到响应式依赖时调用。</li><li><code>onRenderTriggered()</code>：注册一个调试钩子，当响应式依赖的变更触发了组件渲染时调用。</li><li><code>onActivated()</code>：注册一个回调函数，若组件实例是 <code>&lt;KeepAlive&gt;</code> 缓存树的一部分，当组件被插入到 DOM 中时调用。</li><li><code>onDeactivated()</code>：注册一个回调函数，若组件实例是 <code>&lt;KeepAlive&gt;</code> 缓存树的一部分，当组件从 DOM 中被移除时调用。</li><li><code>onServerPrefetch()</code>：注册一个异步函数，在组件实例在服务器上被渲染之前调用。</li></ul></blockquote><h3 id="动态组件" tabindex="-1"><a class="header-anchor" href="#动态组件"><span>动态组件</span></a></h3><blockquote><ul><li>选择性的选择组件</li><li><code>&lt;component v-bind:is=&quot;&lt;布尔变量&gt; ? &lt;组件1&gt; : &lt;组件2&gt;&quot; /&gt;</code></li></ul></blockquote><h3 id="内置组件" tabindex="-1"><a class="header-anchor" href="#内置组件"><span>内置组件</span></a></h3><blockquote><ul><li><code>&lt;Transition&gt;</code>：（过度动画效果）为单个元素或组件提供动画过渡效果。</li><li><code>&lt;TransitionGroup&gt;</code>：为列表中的多个元素或组件提供过渡效果。</li><li><code>&lt;KeepAlive&gt;</code>：（缓存组件状态）组件包裹的组件将总是被缓存、切换会时保留组件当时的操作状态。</li><li><code>&lt;Teleport&gt;</code>：将其插槽内容渲染到 DOM 中的另一个位置。</li></ul></blockquote><h2 id="动画" tabindex="-1"><a class="header-anchor" href="#动画"><span>动画</span></a></h2><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code class="language-vue"><span class="line">// 组件刚开始离开</span>
<span class="line">.v-leave-active {</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">// 组件离开结束</span>
<span class="line">.v-leave-to {</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">// 组件刚开始进入</span>
<span class="line">.v-enter-active {</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">// 组件进入完成</span>
<span class="line">.v-enter-to {</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">// 正在进入和离开</span>
<span class="line">.v-leave-active, .v-enter-active {</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目打包部署方案" tabindex="-1"><a class="header-anchor" href="#项目打包部署方案"><span>项目打包部署方案</span></a></h2><p>配置文件名<code>vue-config.js</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 项目部署的基本路径</span></span>
<span class="line"><span class="token literal-property property">publicPath</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;./&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 项目打包的根目录</span></span>
<span class="line"><span class="token literal-property property">outputDir</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 项目打包的静态资源存放目录</span></span>
<span class="line"><span class="token literal-property property">assetsDir</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token comment">// 项目打包的index.html输出路径，默认“index.html”</span></span>
<span class="line"><span class="token literal-property property">indexPath</span><span class="token operator">:</span> <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token comment">// 项目打包是否生成js的source map 调试包，默认 true，生产部署设置为false</span></span>
<span class="line"><span class="token literal-property property">productionSourceMap</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="博主提示" tabindex="-1"><a class="header-anchor" href="#博主提示"><span>博主提示</span></a></h2><blockquote><p>推荐详细教程请前往Vue官网查看文档：</p><ul><li><a href="https://cn.vuejs.org/guide/introduction.html" target="_blank" rel="noopener noreferrer">官方教学文档</a></li><li><a href="https://cn.vuejs.org/api/" target="_blank" rel="noopener noreferrer">官方API文档</a></li><li>vue3项目目录结构和文件说明：<a href="https://www.bilibili.com/video/BV1QN4y1k76o/?p=5&amp;spm_id_from=pageDriver&amp;vd_source=262edcbbd8e80915a7dff074a0e165a1" target="_blank" rel="noopener noreferrer">b站教程</a></li></ul></blockquote><p>第三方网站教程：<a href="https://www.cnblogs.com/xiaobaicai12138/p/18110179" target="_blank" rel="noopener noreferrer">vite创建爱女vue3项目</a></p>`,87)]))}const i=n(p,[["render",l]]),u=JSON.parse('{"path":"/software/Library-Npm-Vue3.html","title":"Library - Npm - Vue 3","lang":"zh-CN","frontmatter":{"title":"Library - Npm - Vue 3","author":"魔术桌","cover":"","category":["软件程序/类库"],"date":"2024-07-22T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： Vue 是一款用于构建用户界面的 JavaScript 框架，偏向组合式API的总结。 前置依赖：操作系统、node.js、npm 简介 渐进式的JavaScript框架。 基于标准 HTML、CSS 和 JavaScript 构建。 提供了一套声明式的、组件化的编程模型。 声明式渲染：Vue 基于标准 HTML 拓展了一套模板语法，使得我...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Library - Npm - Vue 3\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Library-Npm-Vue3.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Library - Npm - Vue 3"}],["meta",{"property":"og:description","content":"文章摘要： Vue 是一款用于构建用户界面的 JavaScript 框架，偏向组合式API的总结。 前置依赖：操作系统、node.js、npm 简介 渐进式的JavaScript框架。 基于标准 HTML、CSS 和 JavaScript 构建。 提供了一套声明式的、组件化的编程模型。 声明式渲染：Vue 基于标准 HTML 拓展了一套模板语法，使得我..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Library-Npm-Vue3.md","excerpt":"<p><strong>文章摘要：</strong> Vue 是一款用于构建用户界面的 JavaScript 框架，偏向组合式API的总结。</p>\\n"}');export{i as comp,u as data};
