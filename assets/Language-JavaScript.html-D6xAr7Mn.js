import{_ as i,c as o,b as s,a as t,d as n,e as p,w as l,r as c,o as r}from"./app-D67BBu3k.js";const u={},d={class:"hint-container info"};function v(m,a){const e=c("RouteLink");return r(),o("div",null,[a[8]||(a[8]=s("p",null,[s("strong",null,"文章摘要："),n(" JavaScript是编程语言，网页标准三大组成部分之一的JavaScript，用来实现网页的动态效果和用户交互功能。")],-1)),a[9]||(a[9]=s("ul",null,[s("li",null,"JavaScript 是一种轻量级、解释型编程语言，通常在用户的浏览器中运行，而不需要在服务器上预先编译。")],-1)),s("div",d,[a[2]||(a[2]=s("p",{class:"hint-container-title"},"相关信息",-1)),a[3]||(a[3]=s("p",null,"外部相关文章",-1)),a[4]||(a[4]=s("ul",null,[s("li",null,[s("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web",target:"_blank",rel:"noopener noreferrer"},"Mmdn web docs"),n("，前端知识查询网站。")])],-1)),a[5]||(a[5]=s("p",null,"内部相关文章",-1)),s("ul",null,[s("li",null,[a[1]||(a[1]=n("API查询手册：")),p(e,{to:"/software/Language-JavaScript-API.html"},{default:l(()=>a[0]||(a[0]=[n("Language-JavaScript-API")])),_:1,__:[0]})])])]),a[10]||(a[10]=t(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><ul><li>JavaScript（简称“JS”）</li><li>JavaScript 是一种轻量级、解释型编程语言，通常在用户的浏览器中运行，而不需要在服务器上预先编译。</li><li>可以在网页中嵌入，用来实现网页的动态效果和用户交互功能。</li></ul><p><strong>特点</strong></p><ol><li><strong>脚本语言</strong>：JavaScript 主要在客户端（用户的浏览器）中执行，减轻了服务器的负担。</li><li><strong>事件驱动</strong>：JavaScript 可以在响应特定事件时执行，例如用户点击按钮、页面加载完成等。</li><li><strong>跨平台</strong>：JavaScript 依赖于浏览器的支持，因此可以在任何支持 JavaScript 的浏览器上运行，无论用户的操作系统是什么。</li><li><strong>面向对象</strong>：JavaScript 支持面向对象编程，允许开发者定义对象和类，实现数据封装、继承和多态等特性。</li><li><strong>功能丰富</strong>：JavaScript 提供了大量的内置对象和方法，可以操作DOM（文档对象模型），处理日期和时间，实现动画效果等。</li></ol><h2 id="引入方式" tabindex="-1"><a class="header-anchor" href="#引入方式"><span>引入方式</span></a></h2><p>HTML中内部编写JS</p><ul><li>JavaScript代码必须位于HTML文件中的<code>&lt;script&gt;&lt;/script&gt;</code>标签之间。</li><li>在HTML文档中，可以在任意位置，放置任意数量的<code>&lt;script&gt;&lt;/script&gt;</code>标签。</li><li>一般会把脚本置于<code>&lt;body&gt;&lt;/body&gt;</code>标签的底部，可以<strong>改善显示速度</strong>。</li></ul><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"> <span class="token comment">/*JavaScript代码*/</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HTML的外部引入JS</p><ul><li>JS脚本可放置在外部文件中。</li><li>JavaScript文件的扩展名是<code>.js</code></li><li>通过在HTML文档中写入以下内容来引入JS脚本。</li></ul><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./JavaScript.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在外部文件中放置脚本有如下优势：</p><ul><li>分离了 HTML 和代码。</li><li>使 HTML 和 JavaScript 更易于阅读和维护。</li><li>已缓存的 JavaScript 文件可加速页面加载。</li></ul><h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法"><span>基础语法</span></a></h2><ul><li>区分大小写。</li><li>每行结尾的分号可有可无。</li></ul><p><strong>命名规范</strong></p><ul><li>支持大小写字母、数字、<code>_</code>下划线、<code>$</code>美元符号。</li><li>数字不能开头。</li><li>建议使用驼峰命名法，即多个单词之间每个单词首字母大写。</li><li>不能与关键字重名。</li></ul><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h3><ul><li>JavaScript 不会执行注释。</li><li>我们可以添加注释来对 JavaScript 进行解释，或者提高代码的可读性。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 单行注释</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/*</span>
<span class="line"> 多行注释</span>
<span class="line"></span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 多行文本注释</span>
<span class="line"> * </span>
<span class="line"> */</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h3><ul><li>JavaScript是一门弱类型语言，变量可以存放不同类型的值。</li><li>JavaScript中使用<code>var</code>关键字来声明变量。</li><li>JavaScript的变量类型能在创建时自动识别数据类型。</li></ul><p>关键字：<code>let</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="常量" tabindex="-1"><a class="header-anchor" href="#常量"><span>常量</span></a></h3><ul><li>只能初始化一个值，后续不能再次修改。</li></ul><p>关键字：<code>const</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="作用域" tabindex="-1"><a class="header-anchor" href="#作用域"><span>作用域</span></a></h3><ul><li>通过<code>{}</code>来确定一个变量或对象的作用范围。</li></ul><h3 id="导入模块" tabindex="-1"><a class="header-anchor" href="#导入模块"><span>导入模块</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 导入一个变量或对象</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>login<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./admin&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 导入模块的所有导出成员到一个对象上。</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> admin <span class="token keyword">from</span> <span class="token string">&quot;./admin&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 只导入模块的默认导出成员。</span></span>
<span class="line"><span class="token keyword">import</span> admin <span class="token keyword">from</span> <span class="token string">&quot;./admin&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h2>`,33)),s("p",null,[a[7]||(a[7]=n("详细总结：")),p(e,{to:"/software/Language-JavaScript-%E5%85%B3%E9%94%AE%E5%AD%97.html"},{default:l(()=>a[6]||(a[6]=[n("JavaScript关键字")])),_:1,__:[6]})]),a[11]||(a[11]=t(`<h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h2><ul><li><strong>值类型(基本类型)</strong>：数字(Number)、字符串（String）、布尔（Boolean）、空（Null）、未定义（Undefined）、Symbol。</li><li><strong>引用数据类型（对象类型）</strong>：数组(Array)、对象(Object)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。</li></ul><h2 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h2><table><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">符号</th></tr></thead><tbody><tr><td style="text-align:left;">算术和位运算符</td><td style="text-align:left;">=、+、-、*、/</td></tr><tr><td style="text-align:left;">赋值运算符</td><td style="text-align:left;">=、+=、-=、*=、/=、%=、++、--</td></tr><tr><td style="text-align:left;">比较运算符</td><td style="text-align:left;">==、!=、&lt;、&gt;、&lt;=、&gt;=、===</td></tr><tr><td style="text-align:left;">逻辑运算符</td><td style="text-align:left;">&amp;&amp;、||、!</td></tr><tr><td style="text-align:left;">三元运算符</td><td style="text-align:left;">条件表达式 ? true_value:false_value</td></tr></tbody></table><ul><li>提示：在比较两个值时<code>==</code>两个等号会进行类型转换，<code>===</code>三个等号不会进行类型转换。</li></ul><h2 id="流程控制语句" tabindex="-1"><a class="header-anchor" href="#流程控制语句"><span>流程控制语句</span></a></h2><h3 id="选择语句" tabindex="-1"><a class="header-anchor" href="#选择语句"><span>选择语句</span></a></h3><ul><li>关键字：<code>if</code>、<code>else if</code>、<code>else</code></li><li>关键字：<code>switch</code>、<code>case</code>、<code>default</code></li></ul><h3 id="循环语句" tabindex="-1"><a class="header-anchor" href="#循环语句"><span>循环语句</span></a></h3><ul><li>关键字：<code>for</code></li><li>关键字：<code>while</code></li></ul><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h2><ul><li>函数（方法）是被设计为执行特定任务的代码块。</li></ul><h3 id="函数的定义" tabindex="-1"><a class="header-anchor" href="#函数的定义"><span>函数的定义</span></a></h3><ul><li>JavaScript的函数通过<code>function</code>关键字进行定义。</li><li>函数定义的参数，不需要指定具体的数据类型，因为JavaScript是若类型语言。</li><li>返回值不需要指定具体的数据类型，只需要直接使用<code>return</code>关键字进行返回即可。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 第一种定义函数的方法</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">&lt;</span>参数<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>参数<span class="token operator">&gt;</span><span class="token operator">...</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 代码块</span></span>
<span class="line">    reutrn <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">返回值</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 第二种定义函数的方法</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token operator">&lt;</span>变量<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">&lt;</span>参数<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>参数<span class="token operator">&gt;</span><span class="token operator">...</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 代码块</span></span>
<span class="line">    reutrn <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">返回值</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数的调用" tabindex="-1"><a class="header-anchor" href="#函数的调用"><span>函数的调用</span></a></h3><ul><li>格式：<code>函数名称(参数列表)</code></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="对象" tabindex="-1"><a class="header-anchor" href="#对象"><span>对象</span></a></h2><h3 id="正则-regexp" tabindex="-1"><a class="header-anchor" href="#正则-regexp"><span>正则（RegExp）</span></a></h3><p>==待完善==</p><h3 id="日期-date" tabindex="-1"><a class="header-anchor" href="#日期-date"><span>日期（Date）</span></a></h3><p>==待完善==</p><h3 id="字符串-string" tabindex="-1"><a class="header-anchor" href="#字符串-string"><span>字符串（String）</span></a></h3><p><strong>定义</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 方案一</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token operator">&lt;</span>变量名<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;字符串数据&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 方案二</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token operator">&lt;</span>变量名<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&quot;字符串数据&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组-array" tabindex="-1"><a class="header-anchor" href="#数组-array"><span>数组(Array)</span></a></h3><ul><li><code>[]</code>代表数组。</li></ul><p><strong>定义</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 方案一</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token operator">&lt;</span>变量名<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>元素<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>元素<span class="token operator">&gt;</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 方案二</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token operator">&lt;</span>变量名<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>元素<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>元素<span class="token operator">&gt;</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>访问</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>数组<span class="token operator">&gt;</span><span class="token punctuation">[</span>索引<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>修改</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>数组<span class="token operator">&gt;</span><span class="token punctuation">[</span>索引<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>值<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="对象-object" tabindex="-1"><a class="header-anchor" href="#对象-object"><span>对象（Object）</span></a></h3><ul><li>可以说 &quot;JavaScript 对象是变量的容器&quot;。</li><li>但是，我们通常认为 &quot;JavaScript 对象是键值对的容器&quot;。</li><li>键值对通常写法为 <code>name : value</code> (键与值以冒号分割)。</li><li>键值对在 JavaScript 对象通常称为 <strong>对象属性</strong>。</li><li>JavaScript 对象是属性变量的容器。</li></ul><p><strong>定义</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> <span class="token operator">&lt;</span>对象名<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">&lt;</span>属性名<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token operator">&lt;</span>属性值<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">    <span class="token operator">&lt;</span>属性名<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token operator">&lt;</span>属性值<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">&lt;</span>函数名<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">形参列表</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>调用</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>对象名<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>属性值<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span>对象名<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>函数名<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json对象" tabindex="-1"><a class="header-anchor" href="#json对象"><span>JSON对象</span></a></h3><ul><li>JavaScript Object Notation，JavaScript对象标记法。</li><li>JSON就是通过JavaScript对象标记法编写的文本。</li></ul><p>提示：“键”必须是字符串类型。</p><p><strong>定义</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> <span class="token operator">&lt;</span>变量名<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;: &quot;小明&quot;, &quot;age&quot;: 18, &quot;爱好&quot;: [&quot;吃饭&quot;, &quot;睡觉&quot;, &quot;打游戏&quot;]}&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="bom浏览器模型" tabindex="-1"><a class="header-anchor" href="#bom浏览器模型"><span>BOM浏览器模型</span></a></h2><ul><li>Browser Object Model，浏览器对象模型。</li><li>允许JavaScript与浏览器对话，JavaScript将浏览器的各个组成部分封装为对象。</li></ul><p><strong>组成部分</strong></p><ul><li>Windows：浏览器窗口对象</li><li>Navigator：浏览器对象</li><li>Screen：屏幕对象</li><li>History：历史记录对象</li><li>Location：地址栏对象</li></ul><h3 id="windows浏览器窗口对象" tabindex="-1"><a class="header-anchor" href="#windows浏览器窗口对象"><span>Windows浏览器窗口对象</span></a></h3><ul><li>浏览器窗口对象</li></ul><p><strong>案例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 弹出警示框</span></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hallo wored&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 显示带有一段消息以及确认按钮和取消按钮的对话框</span></span>
<span class="line"><span class="token keyword">var</span> flag <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 按照指定的周期（毫秒）来调用函数或计算表达式</span></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;每隔2秒钟，执行函数操作。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="navigator浏览器对象" tabindex="-1"><a class="header-anchor" href="#navigator浏览器对象"><span>Navigator浏览器对象</span></a></h3><p>==待完善==</p><h3 id="screen屏幕对象" tabindex="-1"><a class="header-anchor" href="#screen屏幕对象"><span>Screen屏幕对象</span></a></h3><p>==待完善==</p><h3 id="history历史记录对象" tabindex="-1"><a class="header-anchor" href="#history历史记录对象"><span>History历史记录对象</span></a></h3><p>==待完善==</p><h3 id="location地址栏对象" tabindex="-1"><a class="header-anchor" href="#location地址栏对象"><span>Location地址栏对象</span></a></h3><p>==待完善==</p><h2 id="dom文档对象模型" tabindex="-1"><a class="header-anchor" href="#dom文档对象模型"><span>DOM文档对象模型</span></a></h2><ul><li>Document Object Model，文档对象模型。</li><li>将标记语言的各个组成模块封装为对应的对象。</li><li>JavaScript通过DOM文档对象模型对HTML进行操作：改变HTML元素的内容，改变HTML元素的样式（CSS），对HTML DOM事件做出反应，添加和删除HTML元素。</li></ul><p>DOM是W3C（万维网联盟）的标准，定义了访问HTML和XML文档的标准。</p><ol><li>Core DOM - 所有文档类型的标准模型</li></ol><ul><li><code>Document</code>：整个文档对象</li><li><code>Element</code>：元素对象</li><li><code>Attribute</code>：属性对象</li><li><code>Text</code>：文本对象</li><li><code>Comment</code>：注释对象</li></ul><ol start="2"><li><p>XML DOM - XML文档的标准模型</p></li><li><p>HTML DOM - HTML文档的标准模型</p></li></ol><ul><li><code>image</code>：<code>&lt;img /&gt;</code></li><li><code>Button</code>：<code>&lt;import type=&quot;button&quot; /&gt;</code></li></ul><h3 id="获取元素对象的方法" tabindex="-1"><a class="header-anchor" href="#获取元素对象的方法"><span>获取元素对象的方法</span></a></h3><p><strong>格式</strong></p><ul><li><code>&lt;标签元素&gt;.&lt;属性&gt;</code></li><li><code>&lt;标签元素&gt;.getAttribute(&quot;属性名&quot;);</code></li></ul><p><strong>案例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 根据id属性值获取，返回单个元素对象</span></span>
<span class="line"><span class="token keyword">var</span> h1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 根据标签名称获取，返回元素对象数组</span></span>
<span class="line"><span class="token keyword">var</span> divs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 根据name属性值获取，返回元素对象数组</span></span>
<span class="line"><span class="token keyword">var</span> hobbys <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">&#39;hobby&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 根据class属性值获取，返回元素对象数组</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token keyword">class</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;head-box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改元素对象的方法" tabindex="-1"><a class="header-anchor" href="#修改元素对象的方法"><span>修改元素对象的方法</span></a></h3><p><strong>格式</strong></p><ul><li><code>&lt;标签元素&gt;.&lt;属性&gt; = &lt;新值&gt;</code></li><li><code>&lt;标签元素&gt;.setAttribute(&quot;属性名&quot;, &quot;属性值&quot;);</code></li></ul><p><strong>案例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 将获取到的当前元素的value属性改为新值。</span></span>
<span class="line">id<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;新值&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件监听" tabindex="-1"><a class="header-anchor" href="#事件监听"><span>事件监听</span></a></h2><ul><li>JavaScript可以在事件被侦测到时执行对应的代码。</li><li>常见事件：鼠标点击、元素失去焦点、元素获得焦点、某个页面或图像被完成加载、当表单提交时出发该事件、某个键盘的键被按下、鼠标被移到某个元素上、鼠标从某个元素上移开。</li></ul><h2 id="事件绑定" tabindex="-1"><a class="header-anchor" href="#事件绑定"><span>事件绑定</span></a></h2><ul><li>事件监听可以理解为比较特殊的修改元素属性值的操作。</li></ul><p><strong>通过HTML标签中的事件属性进行绑定</strong></p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token comment">&lt;!--当鼠标点击该按钮时，执行一个名字叫test的函数--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>按钮<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 执行名字叫test的函数</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;执行&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>通过DOM元素属性绑定</strong></p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token comment">&lt;!--点击鼠标点击该按钮--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>按钮<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 为一个id标签属性为button的元素修改onclick属性</span></span>
<span class="line"><span class="token comment">// 监听鼠标点击</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;执行&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,88))])}const g=i(u,[["render",v]]),h=JSON.parse('{"path":"/software/Language-JavaScript.html","title":"Language - JavaScript","lang":"zh-CN","frontmatter":{"title":"Language - JavaScript","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2024-05-23T00:00:00.000Z","tag":["进度-已停滞","知识总结"],"description":"文章摘要： JavaScript是编程语言，网页标准三大组成部分之一的JavaScript，用来实现网页的动态效果和用户交互功能。 JavaScript 是一种轻量级、解释型编程语言，通常在用户的浏览器中运行，而不需要在服务器上预先编译。 相关信息 外部相关文章 Mmdn web docs，前端知识查询网站。 内部相关文章 API查询手册： 简介 Ja...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - JavaScript\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-JavaScript.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - JavaScript"}],["meta",{"property":"og:description","content":"文章摘要： JavaScript是编程语言，网页标准三大组成部分之一的JavaScript，用来实现网页的动态效果和用户交互功能。 JavaScript 是一种轻量级、解释型编程语言，通常在用户的浏览器中运行，而不需要在服务器上预先编译。 相关信息 外部相关文章 Mmdn web docs，前端知识查询网站。 内部相关文章 API查询手册： 简介 Ja..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已停滞"}],["meta",{"property":"article:published_time","content":"2024-05-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-JavaScript.md","excerpt":"<p><strong>文章摘要：</strong> JavaScript是编程语言，网页标准三大组成部分之一的JavaScript，用来实现网页的动态效果和用户交互功能。</p>\\n<ul>\\n<li>JavaScript 是一种轻量级、解释型编程语言，通常在用户的浏览器中运行，而不需要在服务器上预先编译。</li>\\n</ul>\\n"}');export{g as comp,h as data};
