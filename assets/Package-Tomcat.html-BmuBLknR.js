import{_ as i,c,a as p,b as s,d as n,e as t,w as l,r as o,o as r}from"./app-D67BBu3k.js";const d={};function u(m,a){const e=o("RouteLink");return r(),c("div",null,[a[6]||(a[6]=p('<p><strong>文章摘要：</strong> Tomcat 服务器是一个免费的开放源代码的轻量级应用服务器。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>在 Tomcat 安装目录下有<code>/conf</code>的文件夹，用于存储配置，可对其中的文件进行配置达到不同的效果。</li><li>静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源。静态资源可以直接被浏览器解析。</li><li>动态资源：每个用户访问相同资源后，得到的结果可能不一样，称为动态资源。动态资源被访问后，需要先转换为静态资源，再返回给浏览器，通过浏览器进行解析。</li></ul></div><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>Tomcat 是由 Apache Software Foundation 开发的一个开源的 Java Servlet、JSP 容器。</li><li>用于提供一个纯 Java 的 HTTP web 服务器环境，用于运行 Java 代码。</li></ul><p>主要功能</p><ul><li><strong>Servlet 容器</strong>：Tomcat 是一个 Servlet 容器，负责管理和运行 Java Servlet，处理客户端请求。</li><li><strong>JSP 支持</strong>：支持 Java Server Pages (JSP)，将 JSP 文件转换为 Servlet，然后执行。</li><li><strong>Websocket 支持</strong>：支持 Websocket 协议，实现服务器与客户端之间的全双工通信。</li><li><strong>负载均衡</strong>：通过配置可以实现简单的负载均衡，分发请求到不同的服务器。</li><li><strong>安全性</strong>：提供基于角色的访问控制和 SSL 加密等安全特性。</li><li><strong>可配置性</strong>：通过配置文件可以灵活地配置服务器行为，如连接器、会话管理、数据源等。</li></ul><p>注意事项</p><ul><li><strong>内存配置</strong>：合理配置 JVM 内存参数，避免内存泄漏和性能问题。</li><li><strong>安全性</strong>：定期更新 Tomcat 和 Java 以修复安全漏洞。</li><li><strong>日志管理</strong>：配置合适的日志级别和日志文件管理，以便于问题追踪和系统监控。</li><li><strong>并发处理</strong>：根据应用需求调整线程池配置，以优化并发处理能力。</li><li><strong>版本兼容性</strong>：确保应用与 Tomcat 版本兼容，避免因版本差异导致的问题。</li></ul><p>适用场景</p><ul><li><strong>Java Web 应用</strong>：适用于部署 Java Web 应用程序，特别是使用 Servlet 和 JSP 技术的应用。</li><li><strong>中小型项目</strong>：对于中小型项目和初创企业，Tomcat 是一个轻量级且易于管理的解决方案。</li><li><strong>开发和测试环境</strong>：由于其易用性和可配置性，Tomcat 常被用作开发者的本地开发环境和测试服务器。</li><li><strong>企业级应用</strong>：虽然 Tomcat 主要用于中小型应用，但通过适当的配置和优化，也可以用于企业级应用。</li></ul><h2 id="安装与卸载" tabindex="-1"><a class="header-anchor" href="#安装与卸载"><span>安装与卸载</span></a></h2>',12)),s("p",null,[a[1]||(a[1]=n("详细总结：")),t(e,{to:"/software/Package-Tomcat-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD.html"},{default:l(()=>a[0]||(a[0]=[n("Package-Tomcat-安装与卸载")])),_:1,__:[0]})]),a[7]||(a[7]=s("h2",{id:"终端命令",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#终端命令"},[s("span",null,"终端命令")])],-1)),s("p",null,[a[3]||(a[3]=n("详细总结：")),t(e,{to:"/software/Package-Tomcat-%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4.html"},{default:l(()=>a[2]||(a[2]=[n("Package-Tomcat-终端命令")])),_:1,__:[2]})]),a[8]||(a[8]=s("h2",{id:"配置文件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#配置文件"},[s("span",null,"配置文件")])],-1)),s("p",null,[a[5]||(a[5]=n("详细总结：")),t(e,{to:"/software/Package-Tomcat-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"},{default:l(()=>a[4]||(a[4]=[n("Package-Tomcat-配置文件")])),_:1,__:[4]})]),a[9]||(a[9]=p(`<h2 id="热门推荐" tabindex="-1"><a class="header-anchor" href="#热门推荐"><span>热门推荐</span></a></h2><p>详细总结：<a href=""></a></p><h2 id="问题总结" tabindex="-1"><a class="header-anchor" href="#问题总结"><span>问题总结</span></a></h2><p>详细总结：<a href=""></a></p><h2 id="部署与配置-idea" tabindex="-1"><a class="header-anchor" href="#部署与配置-idea"><span>部署与配置（IDEA）</span></a></h2><ol><li>将Tomcat添加到IDEA中。</li></ol><ul><li><p>点击菜单栏打开“<code>设置</code>”窗口：<code>文件 -&gt; 设置</code></p></li><li><p>切换到“<code>构建、执行、部署 -&gt; 应用程序服务器</code>”页面，点击“+”添加“<code>Web</code>框架模块”</p></li><li><p>填写“Tomcat的所在目录”</p></li><li><p>点击<code>应用</code>，并点击<code>确定</code></p></li></ul><ol start="2"><li>添加运行/调试配置。（即提供一键式运行Tomcat服务器）</li></ol><ul><li><p>点击菜单栏打开“<code>运行/调试窗口</code>”窗口：<code>运行 -&gt; 编辑配置</code></p></li><li><p>点击“<code>+</code>”添加“<code>Tomcat服务器</code> -&gt; <code>本地</code>”</p></li><li><p>点击切换到“部署”页面，点击“<code>+</code>”添加“<code>工件</code>”</p></li><li><p>点击<code>应用</code>，并点击<code>确定</code></p></li></ul><h2 id="知识总结" tabindex="-1"><a class="header-anchor" href="#知识总结"><span>知识总结</span></a></h2><p>WEB-INF：存放项目相关的配置文件</p><h2 id="tomcat程序目录" tabindex="-1"><a class="header-anchor" href="#tomcat程序目录"><span>Tomcat程序目录</span></a></h2><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">/tomcat</span>
<span class="line">|-- /bin      // 可执行程序文件</span>
<span class="line">|-- /conf     // 配置文件</span>
<span class="line"> |-- context.xml</span>
<span class="line"> |-- server.xml</span>
<span class="line"> |-- tomcat-users.xml</span>
<span class="line"> |-- web.xml</span>
<span class="line">|-- /lib      // Tomcat允许所需要的库文件</span>
<span class="line">|-- /logs     // 日志文件</span>
<span class="line">|-- /temp     // 临时文件</span>
<span class="line">|-- /webapps  //主要Web发布目录</span>
<span class="line">|-- work      // 存放jsp编译后产生的class文件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目目录结构" tabindex="-1"><a class="header-anchor" href="#项目目录结构"><span>项目目录结构</span></a></h2><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">/Project</span>
<span class="line">|-- /out  // 编译文件</span>
<span class="line">|-- /src  // 源码文件</span>
<span class="line">    |-- /main</span>
<span class="line">        |-- /java        // java代码目录</span>
<span class="line">        |-- /resources   // 资源目录</span>
<span class="line">        |-- /webapp           // Web文件</span>
<span class="line">            |-- WEB-INF       // Web文件</span>
<span class="line">                |-- web.xml   // 配置文件</span>
<span class="line">    |-- /test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加环境变量" tabindex="-1"><a class="header-anchor" href="#添加环境变量"><span>添加环境变量</span></a></h2><ul><li>修改<code>~/.bashrc</code>文件，添加如下内容</li></ul><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">export CATALINA_HOME=/path/to/tomcat</span>
<span class="line">export PATH=$CATALINA_HOME/bin:$PATH</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>更新环境变量的命令</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">source</span> ~/.bashrc</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="tomcat服务器与servlet表现层绑定" tabindex="-1"><a class="header-anchor" href="#tomcat服务器与servlet表现层绑定"><span>Tomcat服务器与servlet表现层绑定</span></a></h2><ul><li>作用：代码解耦。</li></ul><h3 id="通过注解的方式" tabindex="-1"><a class="header-anchor" href="#通过注解的方式"><span>通过注解的方式</span></a></h3><ul><li>写一个类，并继承<code>HttpServlet</code></li><li>为该类写上注解，<code>@WebServlet()</code></li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 获取请求参数</span></span>
<span class="line">        req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;account&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 设置响应头</span></span>
<span class="line">        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置数据类型</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 返回响应体</span></span>
<span class="line">        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;你好，世界。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过修改tomcat配置文件的方式" tabindex="-1"><a class="header-anchor" href="#通过修改tomcat配置文件的方式"><span>通过修改Tomcat配置文件的方式</span></a></h3><ul><li>修改<code>WEB-INF</code>文件夹中的<code>web.xml</code>文件。</li></ul><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">&lt;!--导入servlet--&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mame</span><span class="token punctuation">&gt;</span></span> &quot;servlet在Tomcat服务器中的名称&quot; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mame</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span> &quot;类所在路径，例如：com.cykj.servlet.LoginServlet&quot; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!--将servlet映射到指定的URL路径--&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span> &quot;servlet的名称&quot; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span> &quot;url请求模块，例如：/login&quot; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28))])}const g=i(d,[["render",u]]),k=JSON.parse('{"path":"/software/Package-Tomcat.html","title":"Package - Tomcat","lang":"zh-CN","frontmatter":{"title":"Package - Tomcat","author":"魔术桌","cover":"","category":["软件程序/软件包"],"date":"2024-07-11T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： Tomcat 服务器是一个免费的开放源代码的轻量级应用服务器。 提示 在 Tomcat 安装目录下有/conf的文件夹，用于存储配置，可对其中的文件进行配置达到不同的效果。 静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源。静态资源可以直接被浏览器解析。 动态资源：每个用户访问相同资源后，得到的结果可能不一样，称为动态资源。动态...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Package - Tomcat\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-06T02:37:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Package-Tomcat.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Package - Tomcat"}],["meta",{"property":"og:description","content":"文章摘要： Tomcat 服务器是一个免费的开放源代码的轻量级应用服务器。 提示 在 Tomcat 安装目录下有/conf的文件夹，用于存储配置，可对其中的文件进行配置达到不同的效果。 静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源。静态资源可以直接被浏览器解析。 动态资源：每个用户访问相同资源后，得到的结果可能不一样，称为动态资源。动态..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-06T02:37:54.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-07-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-06T02:37:54.000Z"}]]},"git":{"updatedTime":1759718274000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":2},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"2fee46a18beafc4284ad1e19b3f2684c7954037e","time":1759718274000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"手机端同步笔记"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Package-Tomcat.md","excerpt":"<p><strong>文章摘要：</strong> Tomcat 服务器是一个免费的开放源代码的轻量级应用服务器。</p>\\n"}');export{g as comp,k as data};
