import{_ as e,c as o,a as s,b as t,d as a,e as i,w as r,r as p,o as d}from"./app-D67BBu3k.js";const u={};function g(h,l){const n=p("RouteLink");return d(),o("div",null,[l[42]||(l[42]=s('<p><strong>文章摘要：</strong> 程序语言，作为计算机科学的核心要素，是人与计算机之间沟通的桥梁。它们为程序员提供了精确控制计算机行为的工具，从而简化了编程过程，使得解决复杂问题变得可能。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>程序语言是一种形式化的符号系统。</li><li>用于描述计算机如何执行任务。</li><li>提供了一种与计算机交互的方式，使程序员能够精确地控制计算机的行为。</li></ul><p>主要功能</p><ul><li><strong>编写程序</strong>：提供一种方式来编写指令，这些指令可以被计算机理解并执行。</li><li><strong>数据操作</strong>：允许程序员定义、操作和处理数据。</li><li><strong>算法实现</strong>：使程序员能够实现各种算法来解决特定问题。</li><li><strong>系统控制</strong>：提供控制计算机硬件和软件行为的机制。</li><li><strong>抽象表示</strong>：允许用更高级的概念来表示复杂操作，提高开发效率。</li></ul><p>注意事项</p><ul><li><strong>语法规则</strong>：每种编程语言都有特定的语法规则，必须严格遵守，否则程序无法正确编译或运行。</li><li><strong>性能考虑</strong>：不同的编程语言在执行效率上可能有很大差异，选择合适的语言需要考虑性能需求。</li><li><strong>可维护性</strong>：编写易于理解和维护的代码是重要的，应遵循良好的编程实践和风格指南。</li><li><strong>安全性</strong>：编程语言可能存在安全漏洞，需要采取措施来防止代码被恶意利用。</li><li><strong>兼容性</strong>：程序可能需要在不同的操作系统或硬件平台上运行，语言的选择应考虑兼容性问题。</li></ul><p>适用场景</p><ul><li><strong>系统编程</strong>：如C语言，适用于编写操作系统、驱动程序等底层系统软件。</li><li><strong>应用软件开发</strong>：如Java、C#、Python，适用于开发桌面应用、网络应用和移动应用。</li><li><strong>数据处理与分析</strong>：如R、Python，适用于统计分析和大数据处理。</li><li><strong>网页开发</strong>：如JavaScript、HTML/CSS，适用于网页设计和前端开发。</li><li><strong>移动应用开发</strong>：如Swift（iOS）、Kotlin（Android），专门用于开发移动平台的应用程序。</li><li><strong>游戏开发</strong>：如C++、C#（使用Unity引擎），适用于高性能游戏开发。</li></ul><div class="hint-container note"><p class="hint-container-title">注释</p><ul><li>学习编程语言之前，首先要搞清楚「编程语言」这个概念。</li><li>我们也可以通过”语言“来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言（Programming Language）。</li><li>编程语言也有固定的格式和词汇，我们必须经过学习才会使用，才能控制计算机。</li><li>编程语言有很多种。</li><li>可以将不同的编程语言比喻成各国语言，为了表达同一个意思，可能使用不同的语句。（例如，表达“世界你好”的意思）</li><li>在编程语言中，同样的操作也可能使用不同的语句。（例如，在屏幕上显示“C语言中文网”）</li><li>编程语言类似于人类语言，由直观的词汇组成，我们很容易就能理解它的意思。</li><li>编程语言是用来控制计算机的一系列指令（Instruction），它有固定的格式和词汇（不同编程语言的格式和词汇不一样），必须遵守，否则就会出错，达不到我们的目的。</li><li>代码文件中具有特定含义的词汇、语句，按照特定的格式组织在一起，就构成了源代码（Source Code），也称源码或代码（Code）。</li><li>每个编程语言肯定规定了源代码中每个词汇、语句的含义，也规定了它们该如何组织在一起，这就是语法（Syntax）。它与我们学习英语时所说的“语法”类似，都规定了如何将特定的词汇和句子组织成能听懂的语言。</li><li>编写源代码的过程就叫做编程（Program）。从事编程工作的人叫程序员（Programmer）。</li><li>（程序员也很幽默，喜欢自嘲，经常说自己的工作辛苦，地位低，像农民一样，所以称自己是”码农“，就是写代码的农民。也有人自嘲称是”程序猿“。）</li></ul></div><div class="hint-container note"><p class="hint-container-title">注释</p><ul><li>程序是为了模拟现实世界，解决现实问题而使用计算机语言编写的一系列有序的指令集合。</li><li>程序语言是现代计算的核心，它的发展不断推动着技术的进步。</li><li>掌握程序语言不仅仅是掌握一种技能，更是理解计算机科学基础的一种方式。随着技术的不断发展，程序语言及其相关领域将继续为我们提供无尽的机会和挑战。</li></ul></div><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><h3 id="主要分类" tabindex="-1"><a class="header-anchor" href="#主要分类"><span>主要分类</span></a></h3><p><strong>按难易程度分类</strong></p><ul><li><strong>机器语言</strong>：最底层的编程语言，它完全由二进制代码组成，直接对应于计算机的硬件指令。机器语言非常难以理解和编写，因为它要求程序员直接操作硬件层面的细节，如寄存器、内存地址等。</li><li><strong>汇编语言</strong>：汇编语言相对于机器语言来说，是一种低级语言，但它使用助记符来代替二进制代码，这使得编程变得稍微容易一些。汇编语言与机器语言有一一对应的关系，每一条汇编语言指令通常对应一条机器语言指令。</li><li><strong>高级语言</strong>：高级语言是更接近人类语言的编程语言，它们抽象了硬件细节，提供了更丰富的语法和库函数，使得编程变得更加容易和高效。</li></ul><p><strong>按执行方式分类</strong></p><ul><li><strong>解释型</strong>：在运行时由解释器逐行或逐段地将源代码转换成机器码并执行。这种方式不需要预先编译成目标平台的机器码，因此可以快速地开发和测试，但执行效率通常不如编译型语言。</li><li><strong>编译型</strong>：需要将源文件编译成平台相关的机器码文件，一次编译多次执行，执行效率高，不可跨平台。</li><li><strong>编译+解释</strong>：首先将源代码编译成中间代码（Intermediate Code），然后在运行时由解释器或虚拟机（VM）执行中间代码。这种方式结合了编译型和解释型语言的特点，既可以提高执行效率，又保持了一定的跨平台能力。</li></ul><h3 id="基本组成" tabindex="-1"><a class="header-anchor" href="#基本组成"><span>基本组成</span></a></h3><ul><li><strong>数据类型</strong>：定义了可以存储的数据种类（如整数、浮点数、字符、布尔值等）。</li><li><strong>运算符号</strong>：对数据执行操作的符号（如加、减、乘、除等）。</li><li><strong>控制结构</strong>：定义了程序如何执行（如顺序、选择和循环结构）。</li><li><strong>函数/方法</strong>：封装了一段可重用的代码。</li></ul><h3 id="编程范式" tabindex="-1"><a class="header-anchor" href="#编程范式"><span>编程范式</span></a></h3><div class="hint-container note"><p class="hint-container-title">注释</p><p>演进顺序</p><ul><li>流程式 -&gt; 命令式 -&gt; 函数式 -&gt; 面向对象 -&gt; 面向接口 -&gt; 逻辑式 -&gt; 声明式</li></ul></div><p>流程式</p><ul><li>关注的是如何执行任务，强调的是步骤和算法。</li></ul><p>命令式</p><ul><li>偏向使用命令的方式，精确、个性化的执行。</li><li>程序由一系列指令组成，计算机严格按照指令顺序执行操作，强调&quot;如何做&quot;而非&quot;做什么&quot;。</li></ul><p>函数式</p><ul><li>偏向封装代码和重复使用，减少代码量。</li><li>关注的是不变性，强调的是纯函数和不可变性。</li><li>将一些多次使用的代码，封装到一个方法中调用。</li></ul><p>面向对象</p><ul><li>偏向代码分类和整合。</li><li>关注的是“事物”和它们之间的关系，强调的是对象和类。</li><li>以一个对象或事物为单位，单独封装到一个文件中来进行复用。</li></ul><p>面向接口</p><ul><li>偏向模块前期规划。</li><li>降低耦合度。</li><li>在实例化时，将使用实现类的接口作为数据类型，变的是实现类，但其数据数据类型是接口类型。</li></ul><p>逻辑式</p><ul><li>偏向交互和运行流程。</li><li>关注的是推理和知识表示，强调的是规则和推理。</li></ul><p>声明式</p><ul><li>偏向配置文件。</li><li>程序员只需描述程序的逻辑，而具体的执行步骤由系统自行决定。</li><li>例如：通过编写yaml配置文件，让程序读取从而得到不同的结果。</li><li>使用“注解”功能和语法进行编写代码。</li></ul><h3 id="重要概念与特性" tabindex="-1"><a class="header-anchor" href="#重要概念与特性"><span>重要概念与特性</span></a></h3><ul><li>语法与语义：语法定义了代码的结构，语义定义了代码的意义。</li><li>编译与解释：编译型语言（如C++）先编译成机器码执行；解释型语言（如Python）逐行翻译并执行。</li><li>静态与动态类型：静态类型语言（如Java）在编译时确定变量类型；动态类型语言（如Python）在运行时确定变量类型。</li><li>强类型与弱类型语言：强类型语言（如Python）不允许隐式类型转换；弱类型语言（如JavaScript）允许隐式转换。</li></ul><h3 id="字符集" tabindex="-1"><a class="header-anchor" href="#字符集"><span>字符集</span></a></h3>',39)),t("p",null,[l[1]||(l[1]=a("详细总结：")),i(n,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E5%AD%97%E7%AC%A6%E9%9B%86.html"},{default:r(()=>l[0]||(l[0]=[a("基础知识-字符集")])),_:1,__:[0]})]),l[43]||(l[43]=t("h3",{id:"转义字符",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#转义字符"},[t("span",null,"转义字符")])],-1)),t("p",null,[l[3]||(l[3]=a("详细总结：")),i(n,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E9%80%9A%E7%94%A8%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.html"},{default:r(()=>l[2]||(l[2]=[a("基础知识-通用转义字符")])),_:1,__:[2]})]),l[44]||(l[44]=t("h3",{id:"正则表达式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#正则表达式"},[t("span",null,"正则表达式")])],-1)),t("p",null,[l[5]||(l[5]=a("详细总结：")),i(n,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"},{default:r(()=>l[4]||(l[4]=[a("基础知识-正则表达式")])),_:1,__:[4]})]),l[45]||(l[45]=t("h3",{id:"专业术语",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#专业术语"},[t("span",null,"专业术语")])],-1)),t("p",null,[l[7]||(l[7]=a("详细总结：")),i(n,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html"},{default:r(()=>l[6]||(l[6]=[a("基础知识-专业术语")])),_:1,__:[6]})]),l[46]||(l[46]=t("h3",{id:"规范",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#规范"},[t("span",null,"规范")])],-1)),t("p",null,[l[9]||(l[9]=a("详细总结：")),i(n,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E8%A7%84%E8%8C%83.html"},{default:r(()=>l[8]||(l[8]=[a("基础知识-规范")])),_:1,__:[8]})]),l[47]||(l[47]=t("h2",{id:"脚本语言-通用",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#脚本语言-通用"},[t("span",null,"脚本语言（通用）")])],-1)),l[48]||(l[48]=t("h3",{id:"bash-shell",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#bash-shell"},[t("span",null,"Bash Shell")])],-1)),t("p",null,[l[11]||(l[11]=a("详细总结：")),i(n,{to:"/software/Language-BashShell.html"},{default:r(()=>l[10]||(l[10]=[a("Bash Shell")])),_:1,__:[10]})]),l[49]||(l[49]=t("h3",{id:"power-shell",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#power-shell"},[t("span",null,"Power Shell")])],-1)),t("p",null,[l[13]||(l[13]=a("详细总结：")),i(n,{to:"/software/Language-PowerShell.html"},{default:r(()=>l[12]||(l[12]=[a("Power Shell")])),_:1,__:[12]})]),l[50]||(l[50]=t("h2",{id:"脚本语言-特殊用途",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#脚本语言-特殊用途"},[t("span",null,"脚本语言（特殊用途）")])],-1)),l[51]||(l[51]=t("h3",{id:"sql",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#sql"},[t("span",null,"SQL")])],-1)),l[52]||(l[52]=t("ul",null,[t("li",null,"关系型数据库交互语言")],-1)),t("p",null,[l[15]||(l[15]=a("详细总结：")),i(n,{to:"/software/Language-SQL.html"},{default:r(()=>l[14]||(l[14]=[a("SQL")])),_:1,__:[14]})]),l[53]||(l[53]=t("h3",{id:"mml",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mml"},[t("span",null,"MML")])],-1)),l[54]||(l[54]=t("ul",null,[t("li",null,"人机语言（Man Machine Language，MML）用一系列命令实现维护终端的各种操作。"),t("li",null,"通信协议比较简单，有利于实现远程维护。缺点是用户需要记忆繁杂的命令，且输出结果均为纯字符，因此使用起来不如GUI方式直观和方便。 其中，MML接口也指人机访问接口，在电信通信业务中，也指营业支撑系统中的营业系统接口。")],-1)),t("p",null,[l[17]||(l[17]=a("详细总结：")),i(n,{to:"/software/Language-MML.html"},{default:r(()=>l[16]||(l[16]=[a("Language-MML")])),_:1,__:[16]})]),l[55]||(l[55]=s('<h3 id="梯形图语言-ld" tabindex="-1"><a class="header-anchor" href="#梯形图语言-ld"><span>梯形图语言（LD）</span></a></h3><p>==待完善==</p><h3 id="机构化文本语言-st" tabindex="-1"><a class="header-anchor" href="#机构化文本语言-st"><span>机构化文本语言（ST）</span></a></h3><p>==待完善==</p><h3 id="顺序功能流程图语言-sfc" tabindex="-1"><a class="header-anchor" href="#顺序功能流程图语言-sfc"><span>顺序功能流程图语言（SFC）</span></a></h3><p>==待完善==</p><h3 id="功能模块图-fbd" tabindex="-1"><a class="header-anchor" href="#功能模块图-fbd"><span>功能模块图（FBD）</span></a></h3><p>==待完善==</p><h3 id="指令表语言-il" tabindex="-1"><a class="header-anchor" href="#指令表语言-il"><span>指令表语言（IL）</span></a></h3><p>==待完善==</p><h2 id="编程语言" tabindex="-1"><a class="header-anchor" href="#编程语言"><span>编程语言</span></a></h2><h3 id="c" tabindex="-1"><a class="header-anchor" href="#c"><span>C++</span></a></h3><ul><li></li></ul><p>==待完善==</p><p>详细总结：<a href=""></a></p><h3 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h3><ul><li>做项目开发</li><li>本博主当前专注整理JavaSE25版本，同时JDK使用的是OpenJDK，即开源版本的Java。</li></ul>',17)),t("p",null,[l[19]||(l[19]=a("详细总结：")),i(n,{to:"/software/Language-Java.html"},{default:r(()=>l[18]||(l[18]=[a("Java")])),_:1,__:[18]})]),l[56]||(l[56]=t("h3",{id:"python",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#python"},[t("span",null,"Python")])],-1)),l[57]||(l[57]=t("ul",null,[t("li")],-1)),t("p",null,[l[21]||(l[21]=a("详细总结：")),i(n,{to:"/software/Language-Python3.html"},{default:r(()=>l[20]||(l[20]=[a("Python 3")])),_:1,__:[20]})]),l[58]||(l[58]=t("h3",{id:"javascript",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#javascript"},[t("span",null,"JavaScript")])],-1)),l[59]||(l[59]=t("ul",null,[t("li")],-1)),t("p",null,[l[23]||(l[23]=a("详细总结：")),i(n,{to:"/software/Language-JavaScript.html"},{default:r(()=>l[22]||(l[22]=[a("JavaScript")])),_:1,__:[22]})]),l[60]||(l[60]=t("h2",{id:"特殊格式语言",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#特殊格式语言"},[t("span",null,"特殊格式语言")])],-1)),l[61]||(l[61]=t("h3",{id:"html",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#html"},[t("span",null,"HTML")])],-1)),t("p",null,[l[25]||(l[25]=a("详细总结：")),i(n,{to:"/software/Language-HTML.html"},{default:r(()=>l[24]||(l[24]=[a("HTML")])),_:1,__:[24]})]),l[62]||(l[62]=t("h3",{id:"css",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#css"},[t("span",null,"CSS")])],-1)),t("p",null,[l[27]||(l[27]=a("详细总结：")),i(n,{to:"/software/Language-CSS.html"},{default:r(()=>l[26]||(l[26]=[a("CSS")])),_:1,__:[26]})]),l[63]||(l[63]=t("h3",{id:"markdown",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#markdown"},[t("span",null,"Markdown")])],-1)),t("p",null,[l[29]||(l[29]=a("详细总结：")),i(n,{to:"/software/Language-Markdown.html"},{default:r(()=>l[28]||(l[28]=[a("Markdown")])),_:1,__:[28]})]),l[64]||(l[64]=t("h3",{id:"latex",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#latex"},[t("span",null,"LaTeX")])],-1)),t("p",null,[l[31]||(l[31]=a("详细总结：")),i(n,{to:"/software/Language-LaTeX.html"},{default:r(()=>l[30]||(l[30]=[a("LaTeX")])),_:1,__:[30]})]),l[65]||(l[65]=t("h3",{id:"uml",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#uml"},[t("span",null,"UML")])],-1)),t("p",null,[l[33]||(l[33]=a("详细总结：")),i(n,{to:"/software/Language-UML.html"},{default:r(()=>l[32]||(l[32]=[a("UML")])),_:1,__:[32]})]),l[66]||(l[66]=t("h3",{id:"xml",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#xml"},[t("span",null,"XML")])],-1)),t("p",null,[l[35]||(l[35]=a("详细总结：")),i(n,{to:"/software/Language-XML.html"},{default:r(()=>l[34]||(l[34]=[a("XML")])),_:1,__:[34]})]),l[67]||(l[67]=t("h3",{id:"yaml",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#yaml"},[t("span",null,"YAML")])],-1)),t("p",null,[l[37]||(l[37]=a("详细总结：")),i(n,{to:"/software/Language-YAML.html"},{default:r(()=>l[36]||(l[36]=[a("YAML")])),_:1,__:[36]})]),l[68]||(l[68]=t("h3",{id:"json",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#json"},[t("span",null,"JSON")])],-1)),t("p",null,[l[39]||(l[39]=a("详细总结：")),i(n,{to:"/software/Language-JSON.html"},{default:r(()=>l[38]||(l[38]=[a("JSON")])),_:1,__:[38]})]),l[69]||(l[69]=t("h3",{id:"properties",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#properties"},[t("span",null,"Properties")])],-1)),t("p",null,[l[41]||(l[41]=a("详细总结：")),i(n,{to:"/software/Language-Properties.html"},{default:r(()=>l[40]||(l[40]=[a("Properties")])),_:1,__:[40]})])])}const m=e(u,[["render",g]]),b=JSON.parse('{"path":"/software/Language%EF%BC%88%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80%EF%BC%89.html","title":"Language（程序语言）","lang":"zh-CN","frontmatter":{"title":"Language（程序语言）","author":"魔术桌","cover":"","category":["软件程序/语言"],"tag":["进度-已完成","知识总结"],"date":"2024-08-09T00:00:00.000Z","star":true,"description":"文章摘要： 程序语言，作为计算机科学的核心要素，是人与计算机之间沟通的桥梁。它们为程序员提供了精确控制计算机行为的工具，从而简化了编程过程，使得解决复杂问题变得可能。 简介 简要说明 程序语言是一种形式化的符号系统。 用于描述计算机如何执行任务。 提供了一种与计算机交互的方式，使程序员能够精确地控制计算机的行为。 主要功能 编写程序：提供一种方式来编写...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language（程序语言）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language%EF%BC%88%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language（程序语言）"}],["meta",{"property":"og:description","content":"文章摘要： 程序语言，作为计算机科学的核心要素，是人与计算机之间沟通的桥梁。它们为程序员提供了精确控制计算机行为的工具，从而简化了编程过程，使得解决复杂问题变得可能。 简介 简要说明 程序语言是一种形式化的符号系统。 用于描述计算机如何执行任务。 提供了一种与计算机交互的方式，使程序员能够精确地控制计算机的行为。 主要功能 编写程序：提供一种方式来编写..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2024-08-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language（程序语言）.md","excerpt":"<p><strong>文章摘要：</strong> 程序语言，作为计算机科学的核心要素，是人与计算机之间沟通的桥梁。它们为程序员提供了精确控制计算机行为的工具，从而简化了编程过程，使得解决复杂问题变得可能。</p>\\n"}');export{m as comp,b as data};
