import{_ as a}from"./Language-Java-面向对象编程知识分析图-DnhS94br.js";import{_ as i,c as t,a as s,b as r,d as n,e as o,w as p,r as c,o as d}from"./app-D67BBu3k.js";const m={};function u(h,e){const l=c("RouteLink");return d(),t("div",null,[e[2]||(e[2]=s(`<p><strong>文章摘要：</strong> 基于Node.js的网站框架。</p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><blockquote><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener noreferrer">Hexo</a>是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</li></ul></blockquote><h2 id="前置依赖" tabindex="-1"><a class="header-anchor" href="#前置依赖"><span>前置依赖</span></a></h2><p>安装Hexo需要先安装下列应用程序：</p><blockquote><ul><li><a href="https://nodejs.org/" target="_blank" rel="noopener noreferrer">Node.js</a>，开源、跨平台的 JavaScript 运行时环境。</li><li><a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">Git</a>，免费开源分布式版本控制系统。</li></ul></blockquote><h2 id="安装与卸载" tabindex="-1"><a class="header-anchor" href="#安装与卸载"><span>安装与卸载</span></a></h2><p>通过Noed.js的npm命令行工具使用以下命令安装Heox：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># -g参数即全局安装，安装到全局库中。</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="终端命令" tabindex="-1"><a class="header-anchor" href="#终端命令"><span>终端命令</span></a></h2>`,10)),r("p",null,[e[1]||(e[1]=n("详细总结：")),o(l,{to:"/software/Library-Npm-Hexo-%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4.html"},{default:p(()=>e[0]||(e[0]=[n("Hexo命令")])),_:1,__:[0]})]),e[3]||(e[3]=s(`<h2 id="建站" tabindex="-1"><a class="header-anchor" href="#建站"><span>建站</span></a></h2><p><strong>1. 初始化</strong></p><ul><li>请先切换到需要创建项目目录的路径下并执行以下命令，Hexo 将会在指定文件夹中新建所需要的文件。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 项目名参数是创建一个目录，可选参数</span></span>
<span class="line">hexo init 项目名</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 切换到项目名文件夹下面</span></span>
<span class="line"><span class="token builtin class-name">cd</span> 项目名</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装hexo所需的依赖库</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 编写内容</strong></p><ul><li>创建新文章</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">hexo new <span class="token punctuation">[</span>模板<span class="token punctuation">]</span> 文章名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>3. 生成静态文件和清除静态文件</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 生成静态文件，简写命令hexo g</span></span>
<span class="line">hexo generate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 清除静态文件</span></span>
<span class="line">hexo clean</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 本地开启服务或部署到远程站点</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 开启本地服务，简写命令hexo s</span></span>
<span class="line">hexo server</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 部署同步到远程站点，简写命令hexo d</span></span>
<span class="line">hexo deploy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目录结构及说明" tabindex="-1"><a class="header-anchor" href="#目录结构及说明"><span>目录结构及说明</span></a></h2><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">|-- /scaffolds   # 模板文件夹</span>
<span class="line">|-- /source      # 资源文件夹</span>
<span class="line">|-- /themes      # 主题文件夹</span>
<span class="line">_config.yml      # 配置文件</span>
<span class="line">package.json     # 应用程序所需的第三方依赖库</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>_config.yml</p><ul><li>配置文件夹</li><li>配置详细说明：<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener noreferrer">官方文档</a></li></ul><p>package.json</p><ul><li>应用程序的信息，所用到的第三方依赖库</li></ul><p>/scaffolds</p><ul><li>模板文件夹，当创建新文章时，Hexo会根据scaffold来创建文件。</li><li>Hexo的模板是指在新建的文章文件中默认填充的内容。</li><li>例如，如果修改scaffold/post.md中的内容，那么每次新建一篇文章时都会包含这个修改。</li></ul><p>/source</p><ul><li>资源文件夹，存放用户资源的地方。</li><li>除_posts文件夹之外，开头命名为_（下划线）的文件、文件夹、隐藏的文件将会被忽略。Markdown和HTML文件会被解析并放到public文件夹，而其他文件会被拷贝过去。</li></ul><p>/themes</p><ul><li>主题文件夹，Hexo会根据主题来生成静态页面。</li></ul></blockquote><h2 id="使用教学" tabindex="-1"><a class="header-anchor" href="#使用教学"><span>使用教学</span></a></h2><h3 id="插入网络图片" tabindex="-1"><a class="header-anchor" href="#插入网络图片"><span>插入网络图片</span></a></h3><p>效果：</p><p><img src="https://gd-hbimg.huaban.com/2d291e31a30711e30b3b5ba2c4ba54377f4ab834553d1-z9Mbqr" alt="Cortana形象图片" title="角色设计草图"></p><p>格式：</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token url"><span class="token operator">!</span>[<span class="token content">替代图片的文本</span>](<span class="token url">图片网络地址</span>)</span></span>
<span class="line"><span class="token url"><span class="token operator">!</span>[<span class="token content">图片的替代文本</span>](<span class="token url">图片地址</span> <span class="token string">&quot;可选标题&quot;</span>)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入本地图片" tabindex="-1"><a class="header-anchor" href="#插入本地图片"><span>插入本地图片</span></a></h3><p><strong>方法1：</strong></p><blockquote><ul><li>通过局部路径的方法读取相关文件。</li><li>首先我们已经确定文章都在“source/_posts”目录下，然后我们的资源在“source/资源文件夹”目录下。</li><li>如下所示：</li></ul></blockquote><p>效果： <img src="`+a+`" alt="图片"></p><p>格式：</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token url"><span class="token operator">!</span>[<span class="token content">显示文本内容</span>](<span class="token url">../需要读取的资源文件路径/文件名+后缀</span>)</span></span>
<span class="line"></span>
<span class="line">“..”两个点表明是上一级目录，“.”一个点表明是当前目录。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方法2：</strong></p><blockquote><ul><li>修改hexo的“_config.yml”文件中的内容。</li><li>如下所示：</li></ul></blockquote><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token comment"># 是否启用资源文件夹</span></span>
<span class="line"><span class="token comment"># 启用后将以“source”目录为根目录进行读取资源。</span></span>
<span class="line"><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>我会将相关资源存储在“/source/”目录下，以读取里面的内容。</li><li>在文章中使用如下格式进行插入图片：</li></ul></blockquote><p>效果： <img src="`+a+`" alt="图片"></p><p>格式：</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line">![显示文本内容](/source/ + 具体路径 + /图片名和文件格式)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="连接外部文章" tabindex="-1"><a class="header-anchor" href="#连接外部文章"><span>连接外部文章</span></a></h3><p>效果： <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener noreferrer">Hexo</a></p><p>格式：</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token url">[<span class="token content">显示文本内容</span>](<span class="token url">网站URL</span>)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="连接内部文章" tabindex="-1"><a class="header-anchor" href="#连接内部文章"><span>连接内部文章</span></a></h3><p>效果： {% post_link Tool-Hexo-Command &quot;Tool | Hexo - 命令&quot; %}</p><p>格式：</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line">{% post_link 文章文件名(不带后缀) 显示文本文章标题(可选) %}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="个人网络图库" tabindex="-1"><a class="header-anchor" href="#个人网络图库"><span>个人网络图库</span></a></h3><blockquote><p>花瓣网，我将采集别人的图片或自己上传图片，再通过网址的形式查找到图片在网页上展示。</p></blockquote><h2 id="注意事项与推荐方案" tabindex="-1"><a class="header-anchor" href="#注意事项与推荐方案"><span>注意事项与推荐方案</span></a></h2>`,46))])}const v=i(m,[["render",u]]),x=JSON.parse('{"path":"/software/Library-Npm-Hexo.html","title":"Library - Npm - Hexo","lang":"zh-CN","frontmatter":{"title":"Library - Npm - Hexo","author":"魔术桌","cover":"","category":["软件程序/类库"],"date":"2023-08-14T00:00:00.000Z","tag":["进度-已完成","知识总结"],"description":"文章摘要： 基于Node.js的网站框架。 介绍 Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 前置依赖 安装Hexo需要先安装下列应用程序： Node.js，开源、跨平台的 JavaScript 运行时环境。 Git，免费开源分布式版本控制系统。 安装...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Library - Npm - Hexo\\",\\"image\\":[\\"https://gd-hbimg.huaban.com/2d291e31a30711e30b3b5ba2c4ba54377f4ab834553d1-z9Mbqr \\\\\\"角色设计草图\\\\\\"\\",\\"https://blog.magictable.ha.cn/source/ + 具体路径 + /图片名和文件格式\\"],\\"datePublished\\":\\"2023-08-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Library-Npm-Hexo.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Library - Npm - Hexo"}],["meta",{"property":"og:description","content":"文章摘要： 基于Node.js的网站框架。 介绍 Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 前置依赖 安装Hexo需要先安装下列应用程序： Node.js，开源、跨平台的 JavaScript 运行时环境。 Git，免费开源分布式版本控制系统。 安装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gd-hbimg.huaban.com/2d291e31a30711e30b3b5ba2c4ba54377f4ab834553d1-z9Mbqr \\"角色设计草图\\""}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2023-08-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Library-Npm-Hexo.md","excerpt":"<p><strong>文章摘要：</strong> 基于Node.js的网站框架。</p>\\n"}');export{v as comp,x as data};
