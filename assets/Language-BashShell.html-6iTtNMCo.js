import{_ as l,c as t,b as e,a as i,d as n,e as o,w as p,r,o as c}from"./app-D67BBu3k.js";const d={},h={class:"hint-container info"};function u(m,a){const s=r("RouteLink");return c(),t("div",null,[a[5]||(a[5]=e("p",null,[e("strong",null,"文章摘要："),n(" Bash（GNU Bourne-Again SHell）是许多Linux发行版的默认脚本语言。")],-1)),e("div",h,[a[1]||(a[1]=e("p",{class:"hint-container-title"},"相关信息",-1)),a[2]||(a[2]=e("p",null,"外部相关文章",-1)),a[3]||(a[3]=e("ul",null,[e("li")],-1)),a[4]||(a[4]=e("p",null,"内部相关文章",-1)),e("ul",null,[e("li",null,[o(s,{to:"/software/Package-Bash.html"},{default:p(()=>a[0]||(a[0]=[n("Package-Bash")])),_:1,__:[0]})])])]),a[6]||(a[6]=i(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>Bash（Bourne-Again SHell）是一种为GNU项目编写的Unix shell和命令语言解释器。</li><li>它是大多数Linux发行版和macOS中的默认命令行接口。</li></ul><p>主要功能</p><ul><li><strong>命令行解释</strong>：执行用户输入的命令，可以是内置命令或外部程序。</li><li><strong>脚本编写</strong>：允许用户编写脚本来自动化任务。</li><li><strong>变量赋值与使用</strong>：可以定义和使用变量来存储和操作数据。</li><li><strong>流程控制</strong>：支持条件判断（if, else, elif）、循环（for, while）等流程控制结构。</li><li><strong>管道和重定向</strong>：可以将一个命令的输出作为另一个命令的输入（管道），以及重定向输出到文件或设备。</li><li><strong>提供命令历史记录功能</strong>：允许用户查看和重复之前的命令。</li><li><strong>提供别名机制</strong>：可以为常用命令或命令序列设置简短的别名。</li></ul><p>注意事项</p><ul><li>安全性：在编写脚本时，要注意变量和命令的引用，以避免安全漏洞，如注入攻击。</li><li>引号使用：在处理变量和字符串时，正确使用单引号、双引号和无引号是至关重要的。</li><li>特殊字符处理：在脚本中处理特殊字符（如空格、换行符等）时需要特别注意。</li><li>权限问题：执行脚本时可能需要适当的文件权限和用户权限。</li><li>脚本调试：编写复杂的脚本时，调试可能会很困难，因此需要良好的错误处理和日志记录。</li></ul><p>适用场景</p><ul><li>Linux和Unix系统的日常命令行操作。</li><li>自动化系统管理和维护任务，如备份、用户管理、日志分析等。</li><li>开发自动化测试脚本。</li><li>数据处理和分析。</li><li>编写简单的到复杂的程序和应用程序。</li><li>服务器脚本，例如CGI脚本处理Web请求。</li><li>作为其他编程语言和工具的接口或桥梁。</li></ul><h2 id="脚本" tabindex="-1"><a class="header-anchor" href="#脚本"><span>脚本</span></a></h2><ul><li>Shell脚本是一组按顺序执行的Shell命令。Shell脚本可以用于自动化任务和创建更复杂的应用程序。</li><li>脚本通常以<code>#!/bin/bash</code>开头，指明脚本的解释器。</li></ul><p>在文件开头写上如下内容，表示该文件是bash shell脚本文件：</p><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">#!/usr/bin/bash</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行方式</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 方案一</span></span>
<span class="line"><span class="token function">bash</span> <span class="token operator">&lt;</span>脚本名<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方案二</span></span>
<span class="line"><span class="token function">sh</span> <span class="token operator">&lt;</span>脚本名<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方案三</span></span>
<span class="line"><span class="token operator">&lt;</span>脚本名<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方案四</span></span>
<span class="line"><span class="token builtin class-name">source</span> <span class="token operator">&lt;</span>脚本名<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h2><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h2><h2 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式"><span>表达式</span></a></h2><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h2><ul><li>Shell变量用于存储数据。变量可以通过<code>=</code>符号赋值，例如<code>name=John</code>。</li><li>变量名可以由字母、数字和下划线组成，但不能以数字开头。变量值可以是字符串、数字或其他特殊字符。</li></ul><p>定义变量：<code>&lt;变量名&gt;=&lt;变量值&gt;</code></p><p>引用变量：<code>$&lt;变量名&gt;</code> <code>\${&lt;变量名&gt;}</code> <code>&quot;$&lt;变量名&gt;&quot;</code></p><p>查看变量：<code>echo $&lt;变量名&gt;</code></p><p>删除变量：<code>unset &lt;变量名&gt;</code></p><div class="hint-container warning"><p class="hint-container-title">警告</p><p>定义变量时<code>=</code>两边不能有空格。 原因：在终端（命令行界面）中空格代表这段命令结束、断句、分隔。 若遇到字符串中带有空格时，可通过<code>&quot;&quot;</code>双引号将字符串包裹起来。</p></div><h2 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 输出信息</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello word!&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句"><span>条件语句</span></a></h2><h2 id="循环语句" tabindex="-1"><a class="header-anchor" href="#循环语句"><span>循环语句</span></a></h2><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h2><h2 id="输入和输出" tabindex="-1"><a class="header-anchor" href="#输入和输出"><span>输入和输出</span></a></h2><h2 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h2><h2 id="数组和哈希表" tabindex="-1"><a class="header-anchor" href="#数组和哈希表"><span>数组和哈希表</span></a></h2><h2 id="进程管理" tabindex="-1"><a class="header-anchor" href="#进程管理"><span>进程管理</span></a></h2><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><h2 id="函数替换和命令组" tabindex="-1"><a class="header-anchor" href="#函数替换和命令组"><span>函数替换和命令组</span></a></h2><h2 id="bash命令" tabindex="-1"><a class="header-anchor" href="#bash命令"><span>bash命令</span></a></h2><p>type 提示命令的类型 which 显示外部命令的位置，若是内嵌命令则报错 help 简要帮助 man 详细帮助 apropos 通过关键字来查询用户手册相关命令 whatis 返回命令的简要说明 info 类似网页形式的有超链接形式的用户手册查询命令 alias 自定义多命令执行的命令别名 unalias 删除命令别名</p><p>pwd 输出显示当前完整路径 cd 转跳路径 .. 代表上一级目录 ~ 代表用户家目录</p><p>ls list 输出显示当前目录下的内容</p><blockquote><p>-a 列出目录下的所有内容，包括隐藏的文件，all（全部） -d --directory -F 文件或者目录名字后面加一个字符和分类标识，--classify -h 可读的格式展示，--human-readable -l 输出显示详细信息，long（长） -i 显示文件的节点序号（内存地址） -r --reverse 反序 -t --time 按修改日期排序</p></blockquote><p>cp 复制文件和目录，copy（复制）</p><blockquote><p>-a 将权限一起复制 -i 交互式的信息确认 -r 递归，将目录内的文件一起复制 -u 只复制新更新的内容 -v 提供详细的操作信息</p></blockquote><p>mv 移动/重命名文件和目录，move（移动）创建文件</p><blockquote><p>-i 交互式的信息确认 -u 只复制新更新的内容 -v 提供详细的操作信息</p></blockquote><p>namo 创建文件 mkdir 创建目录 rm 删除文件和目录</p><blockquote><p>-i 交互式 -r 递归，删除 -f 强制 -v 提供详细的操作信息</p></blockquote><p>ln 创建硬链接和软连接（符号链接）</p><blockquote><p>ls 源文件 硬链接文件 ls -s 源文件 软连接文件</p></blockquote><p>file 确认文件的文件类型 chmod 改变文件权限 find 搜索符合要求的文件 cat 展示输出文件内容，小文件适用 less 展示输出文件内容，大文件适用 grep 搜索文件中的内容</p><p>date 输出显示当前时间 df 输出显示磁盘信息 -h 可读的格式显示 free 输出显示内存信息 -h 可读的格式显示</p><p>heda -n 【数字】 sort 根据字典顺序进行排序</p><p>history 输出显示过去运行过哪些命令</p><blockquote><p>! + 数字 将再次运行对应的命令</p></blockquote><p>ps 检测和管理进程</p><blockquote><p>aux 查看所有用户运行的所有进程</p></blockquote><p>top 系统监控，提供进程和系统资源消耗的实时视图</p><blockquote><p>Ctrl+C快捷键 退出top界面</p></blockquote><p>kill 终止进程</p><blockquote><p>sudo kill</p></blockquote><p>lsblk 列出磁盘和分区 ==fdisk 列出并管理磁盘和分区==</p><p>==lshw 获取硬件细节==</p><p>env 显示linux系统中所有的环境变量 echo 显示某个环境变量中有哪些路径 which 查找某个命令所在的绝对路径</p><p>tar 将许多文件一起保存到一个单独的磁盘中进行归档（打包）</p><h2 id="i-o重定向" tabindex="-1"><a class="header-anchor" href="#i-o重定向"><span>I/O重定向</span></a></h2><p>cat 连接文件 sort 排序文本行 uniq 报道或省略重复行 grep 打印匹配行 wc 打印文件中换行符，字，和字节个数 head 输出文件第一部分 tail 输出文件最后一部分 tee 从标准输入读取数据，并同时写道标准输出和文件</p>`,66))])}const b=l(d,[["render",u]]),f=JSON.parse('{"path":"/software/Language-BashShell.html","title":"Language - Bash Shell","lang":"zh-CN","frontmatter":{"title":"Language - Bash Shell","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2024-08-10T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： Bash（GNU Bourne-Again SHell）是许多Linux发行版的默认脚本语言。 相关信息 外部相关文章 内部相关文章 简介 简要说明 Bash（Bourne-Again SHell）是一种为GNU项目编写的Unix shell和命令语言解释器。 它是大多数Linux发行版和macOS中的默认命令行接口。 主要功能 命令行解释...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - Bash Shell\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-BashShell.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - Bash Shell"}],["meta",{"property":"og:description","content":"文章摘要： Bash（GNU Bourne-Again SHell）是许多Linux发行版的默认脚本语言。 相关信息 外部相关文章 内部相关文章 简介 简要说明 Bash（Bourne-Again SHell）是一种为GNU项目编写的Unix shell和命令语言解释器。 它是大多数Linux发行版和macOS中的默认命令行接口。 主要功能 命令行解释..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-08-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-BashShell.md","excerpt":"<p><strong>文章摘要：</strong> Bash（GNU Bourne-Again SHell）是许多Linux发行版的默认脚本语言。</p>\\n"}');export{b as comp,f as data};
