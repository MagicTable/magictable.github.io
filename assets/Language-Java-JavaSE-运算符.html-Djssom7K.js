import{_ as l,c as d,a,b as e,d as n,e as i,w as r,r as p,o as c}from"./app-D67BBu3k.js";const o={};function g(m,t){const s=p("RouteLink");return c(),d("div",null,[t[3]||(t[3]=a('<p><strong>文章摘要：</strong> 运算符用于对变量和值的执行操作。</p><ul><li>Java运算符共分为6类：算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符、条件运算符（三元运算符）</li></ul><h2 id="算术运算符-共7个" tabindex="-1"><a class="header-anchor" href="#算术运算符-共7个"><span>算术运算符（共7个）</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:left;">加（求和） | 正号</td><td style="text-align:left;">x + y | +1</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:left;">减（求差） | 负号</td><td style="text-align:left;">x - y | -1</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:left;">乘（求积）</td><td style="text-align:left;">x * y</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:left;">除（取整）</td><td style="text-align:left;">x / y</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:left;">模（取余）</td><td style="text-align:left;">x % y</td></tr><tr><td style="text-align:center;">++</td><td style="text-align:left;">自增</td><td style="text-align:left;">1 = 1++， 2 = ++1</td></tr><tr><td style="text-align:center;">--</td><td style="text-align:left;">自减</td><td style="text-align:left;">1 = 1--， 0 = --1</td></tr></tbody></table><div class="hint-container note"><p class="hint-container-title">注释</p><ul><li><code>%</code>计算公式：<code>a % b = a - a / b * b</code></li><li>自增自减（前）：<code>1 = 1++</code>，先取值后运算。</li><li>自增自减（后）：<code>1 = ++1</code>，先运算后取值。</li></ul></div><h2 id="关系-比较-运算符-共6个" tabindex="-1"><a class="header-anchor" href="#关系-比较-运算符-共6个"><span>关系（比较）运算符（共6个）</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:center;">==</td><td style="text-align:left;">全等</td><td style="text-align:left;">x == y</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:left;">不等</td><td style="text-align:left;">x != y</td></tr><tr><td style="text-align:center;">&lt;</td><td style="text-align:left;">小于</td><td style="text-align:left;">x &lt; y</td></tr><tr><td style="text-align:center;">&gt;</td><td style="text-align:left;">大于</td><td style="text-align:left;">x &gt; y</td></tr><tr><td style="text-align:center;">&lt;=</td><td style="text-align:left;">小于等于</td><td style="text-align:left;">x &lt;= y</td></tr><tr><td style="text-align:center;">&gt;=</td><td style="text-align:left;">大于等于</td><td style="text-align:left;">x &gt;= y</td></tr></tbody></table><h2 id="逻辑运算符-共3个" tabindex="-1"><a class="header-anchor" href="#逻辑运算符-共3个"><span>逻辑运算符（共3个）</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">描述</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;</td><td style="text-align:left;">逻辑与（并且）</td><td style="text-align:left;">若两个条件都为<code>true</code>，则返回<code>true</code></td><td style="text-align:left;">0&amp;0=0, 1&amp;1=1, 0&amp;1=0</td></tr><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:left;">短路与（并且）</td><td style="text-align:left;">若两个条件都为<code>true</code>，则返回<code>true</code></td><td style="text-align:left;">0&amp;&amp;0=0, 1&amp;&amp;1=1, 0&amp;&amp;1=0</td></tr><tr><td style="text-align:center;">|</td><td style="text-align:left;">逻辑或</td><td style="text-align:left;">两个条件中有1个或2个为<code>true</code>，则返回<code>true</code></td><td style="text-align:left;">0|0=0, 1|1=1, 0|1=1</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:left;">短路或</td><td style="text-align:left;">两个条件中有1个或2个为<code>true</code>，则返回<code>true</code></td><td style="text-align:left;">0||0=0, 1||1=1, 0||1=1</td></tr><tr><td style="text-align:center;">!</td><td style="text-align:left;">逻辑非（逻辑与取反）</td><td style="text-align:left;">“逻辑与”的反转结果，若结果为<code>false</code>，则返回<code>true</code></td><td style="text-align:left;">!(0&amp;0)=1, !(1&amp;1)=0, !(0&amp;1)=1</td></tr><tr><td style="text-align:center;">^</td><td style="text-align:left;">逻辑异或（逻辑或取反）</td><td style="text-align:left;">“逻辑或”的反转结果，若结果为<code>false</code>，则返回<code>true</code></td><td style="text-align:left;">!(0|0)=1, !(1|1)=0, !(0|1)=0</td></tr></tbody></table><div class="hint-container note"><p class="hint-container-title">注释</p><p><code>&amp;</code>（逻辑与），<code>|</code>（逻辑或）</p><ul><li>即使第一个条件为<code>false</code>，也会继续判断第二个条件，效率低。</li></ul><p><code>&amp;&amp;</code>（短路与），<code>||</code>（短路或）</p><ul><li>如果第一个条件为<code>false</code>，就不会再判断第二个条件，效率高。</li></ul></div><h2 id="位运算符-共8个" tabindex="-1"><a class="header-anchor" href="#位运算符-共8个"><span>位运算符（共8个）</span></a></h2>',11)),e("ul",null,[e("li",null,[t[1]||(t[1]=n("位运算符操作的对象是二进制数，因此需要将数据转换为二进制数再进行运算，特别注意进制转换相关知识。")),i(s,{to:"/note/Diary-%E8%BF%9B%E5%88%B6.html"},{default:r(()=>t[0]||(t[0]=[n("Diary-进制")])),_:1,__:[0]})]),t[2]||(t[2]=e("li",null,"位运算符比除法、乘法计算速度快很多。",-1))]),t[4]||(t[4]=a(`<table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">描述</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;</td><td style="text-align:left;">按位与</td><td style="text-align:left;">相对应的位都是1，则结果为1，否则为0</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">|</td><td style="text-align:left;">按位或</td><td style="text-align:left;">相对应的位有1个或2个是1，则结果为1，否则为0</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">^</td><td style="text-align:left;">按位异或</td><td style="text-align:left;">相对应的位有1个或2个是1，则反转后为0；若都是0，则反转后为1</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">~</td><td style="text-align:left;">按位取反</td><td style="text-align:left;">按位取反每一位操作数，即0改成1，1改成0</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">&gt;&gt;</td><td style="text-align:left;">右移</td><td style="text-align:left;">低位溢出，符号位不变，并用符号位补溢出的高位</td><td style="text-align:left;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mo>&gt;</mo><mo>&gt;</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">100&gt;&gt;2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">100</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 等价于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mi mathvariant="normal">/</mi><mn>2</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">100/2/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">100/2/2</span></span></span></span></td></tr><tr><td style="text-align:center;">&lt;&lt;</td><td style="text-align:left;">左移</td><td style="text-align:left;">符号位不变，低位补0</td><td style="text-align:left;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mo>&gt;</mo><mo>&gt;</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">100&gt;&gt;2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">100</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 等价于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mo>∗</mo><mn>2</mn><mo>∗</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">100*2*2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></td></tr><tr><td style="text-align:center;">&gt;&gt;&gt;</td><td style="text-align:left;">无符号右移</td><td style="text-align:left;">忽略符号位，低位溢出，高位补0</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="赋值运算符-共13个" tabindex="-1"><a class="header-anchor" href="#赋值运算符-共13个"><span>赋值运算符（共13个）</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">例子</th><th style="text-align:left;">等效于</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:left;">赋值</td><td style="text-align:left;">x = 1</td><td style="text-align:left;">x = 1</td></tr><tr><td style="text-align:center;">+=</td><td style="text-align:left;">加法赋值</td><td style="text-align:left;">x += 1</td><td style="text-align:left;">x = x + 1</td></tr><tr><td style="text-align:center;">-=</td><td style="text-align:left;">减法赋值</td><td style="text-align:left;">x -= 1</td><td style="text-align:left;">x = x - 1</td></tr><tr><td style="text-align:center;">*=</td><td style="text-align:left;">乘法赋值</td><td style="text-align:left;">x *= 1</td><td style="text-align:left;">x = x * 1</td></tr><tr><td style="text-align:center;">/=</td><td style="text-align:left;">取整赋值</td><td style="text-align:left;">x /= 1</td><td style="text-align:left;">x = x / 1</td></tr><tr><td style="text-align:center;">%=</td><td style="text-align:left;">取余赋值</td><td style="text-align:left;">x %= 1</td><td style="text-align:left;">x = x % 1</td></tr><tr><td style="text-align:center;">&amp;=</td><td style="text-align:left;">位与赋值</td><td style="text-align:left;">二进制A &amp;= 二进制B</td><td style="text-align:left;">二进制B = 二进制A &amp; 二进制B</td></tr><tr><td style="text-align:center;">|=</td><td style="text-align:left;">位或赋值</td><td style="text-align:left;">二进制A |= 二进制B</td><td style="text-align:left;">二进制B = 二进制A | 二进制B</td></tr><tr><td style="text-align:center;">^=</td><td style="text-align:left;">位异或赋值</td><td style="text-align:left;">二进制A ^= 二进制B</td><td style="text-align:left;">二进制B = 二进制A ^ 二进制B</td></tr><tr><td style="text-align:center;">~=</td><td style="text-align:left;">位取反赋值</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">&lt;&lt;=</td><td style="text-align:left;">位左移赋值</td><td style="text-align:left;">二进制A &lt;&lt;= 移动的位数</td><td style="text-align:left;">二进制B = 二进制A &lt;&lt; 移动的位数</td></tr><tr><td style="text-align:center;">&gt;&gt;=</td><td style="text-align:left;">位右移赋值</td><td style="text-align:left;">二进制A &gt;&gt;= 移动的位数</td><td style="text-align:left;">二进制B = 二进制A &gt;&gt; 移动的位数</td></tr><tr><td style="text-align:center;">&gt;&gt;&gt;=</td><td style="text-align:left;">位右移补零赋值</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><div class="hint-container note"><p class="hint-container-title">注释</p><p>复合赋值运算符会进行类型转换。</p></div><h2 id="三元-条件-运算符-共1个" tabindex="-1"><a class="header-anchor" href="#三元-条件-运算符-共1个"><span>三元（条件）运算符（共1个）</span></a></h2><ul><li>条件运算符又称为三元运算符。</li><li>运算符符号：<code>?</code>(问号)、<code>:</code>(冒号)。</li><li>运算时需要操作三个操作数。</li></ul><p><strong>案例</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// &lt;判断条件&gt; ? &lt;条件为\`ture\`执行&gt; : &lt;条件为\`false\`执行&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//案例一</span></span>
<span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">string data <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;正确&quot;</span> ： <span class="token string">&quot;错误&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 结果是：正确</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 案例二</span></span>
<span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">string data <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;正确&quot;</span> ： <span class="token string">&quot;错误&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 结果是：错误</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const y=l(o,[["render",g]]),h=JSON.parse('{"path":"/software/Language-Java-JavaSE-%E8%BF%90%E7%AE%97%E7%AC%A6.html","title":"Language - Java - Java SE - 运算符","lang":"zh-CN","frontmatter":{"title":"Language - Java - Java SE - 运算符","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2024-03-18T00:00:00.000Z","tag":["进度-已完成","知识总结"],"description":"文章摘要： 运算符用于对变量和值的执行操作。 Java运算符共分为6类：算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符、条件运算符（三元运算符） 算术运算符（共7个） 注释 %计算公式：a % b = a - a / b * b 自增自减（前）：1 = 1++，先取值后运算。 自增自减（后）：1 = ++1，先运算后取值。 关系（比较）运算符...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - Java - Java SE - 运算符\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-Java-JavaSE-%E8%BF%90%E7%AE%97%E7%AC%A6.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - Java - Java SE - 运算符"}],["meta",{"property":"og:description","content":"文章摘要： 运算符用于对变量和值的执行操作。 Java运算符共分为6类：算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符、条件运算符（三元运算符） 算术运算符（共7个） 注释 %计算公式：a % b = a - a / b * b 自增自减（前）：1 = 1++，先取值后运算。 自增自减（后）：1 = ++1，先运算后取值。 关系（比较）运算符..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2024-03-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-Java-JavaSE-运算符.md","excerpt":"<p><strong>文章摘要：</strong> 运算符用于对变量和值的执行操作。</p>\\n<ul>\\n<li>Java运算符共分为6类：算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符、条件运算符（三元运算符）</li>\\n</ul>\\n"}');export{y as comp,h as data};
