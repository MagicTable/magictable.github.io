import{_ as s,c as a,a as e,o as p}from"./app-D67BBu3k.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<p><strong>文章摘要：</strong> 提供了一个用于创建图形用户界面（GUI）应用程序的丰富组件集合，是 AWT (Abstract Window Toolkit) 的后续产品。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>提供了一个用于创建图形用户界面（GUI）应用程序的丰富组件集合。</li><li>是 Java Foundation Classes (JFC) 的一部分，也被称为 Swing，是 AWT (Abstract Window Toolkit) 的后续产品，提供了更加强大和灵活的 GUI 功能。</li></ul><p>主要功能</p><ul><li><strong>组件库</strong>：提供按钮、标签、文本框、列表、表格、树、菜单等丰富的 GUI 组件。</li><li><strong>布局管理器</strong>：允许开发者以多种方式对组件进行布局，如流布局、网格布局、边界布局等。</li><li><strong>事件处理</strong>：通过监听器模式支持事件处理，使得用户交互成为可能。</li><li><strong>可定制性</strong>：支持外观和感觉（LookAndFeel）的更换，以适应不同的操作系统风格。</li><li><strong>绘图和图像处理</strong>：提供基本的绘图功能，支持图像的加载、显示和处理。</li></ul><p>注意事项</p><ul><li><strong>线程安全</strong>：Swing 组件不是线程安全的，所有的 GUI 操作都应该在事件调度线程（Event Dispatch Thread, EDT）中执行。</li><li><strong>性能问题</strong>：Swing 应用程序可能会因为复杂的 GUI 操作而遇到性能问题，尤其是在处理大量数据时。</li><li><strong>内存占用</strong>：Swing 组件相对较重，可能会占用较多内存。</li><li><strong>兼容性</strong>：虽然 Swing 旨在提供跨平台的 GUI 解决方案，但在不同平台上的表现可能会有所不同。</li></ul><p>适用场景</p><ul><li><strong>桌面应用程序</strong>：适用于开发跨平台的桌面应用程序，特别是在需要复杂用户界面的情况下。</li><li><strong>企业级应用</strong>：在企业级应用中，Swing 可用于创建管理控制台或配置工具。</li><li><strong>教育软件</strong>：由于其丰富的组件和易于使用的特性，Swing 也常用于教育软件的开发。</li><li><strong>个人项目</strong>：对于个人项目或小型项目，Swing 提供了足够的工具来构建用户友好的界面。</li></ul><h2 id="javax-swing-border" tabindex="-1"><a class="header-anchor" href="#javax-swing-border"><span><code>javax.swing.border</code></span></a></h2><p>提供用于在 Swing 组件周围绘制专用边框的类和接口。</p><h2 id="javax-swing-colorchooset" tabindex="-1"><a class="header-anchor" href="#javax-swing-colorchooset"><span><code>javax.swing.colorchooset</code></span></a></h2><p>包含 <code>JColorChooser</code> 使用的类和接口 元件。</p><h2 id="javax-swing-event" tabindex="-1"><a class="header-anchor" href="#javax-swing-event"><span><code>javax.swing.event</code></span></a></h2><p>提供由 Swing 组件触发的事件。</p><h2 id="javax-swing-filechooser" tabindex="-1"><a class="header-anchor" href="#javax-swing-filechooser"><span><code>javax.swing.filechooser</code></span></a></h2><p>包含 <code>JFileChooser</code> 组件使用的类和接口。</p><h2 id="javax-swing-plaf" tabindex="-1"><a class="header-anchor" href="#javax-swing-plaf"><span><code>javax.swing.plaf</code></span></a></h2><p>提供一个接口和许多抽象类，Swing 使用这些抽象类来提供其可插入的外观功能。</p><h2 id="javax-swing-plaf-basic" tabindex="-1"><a class="header-anchor" href="#javax-swing-plaf-basic"><span><code>javax.swing.plaf.basic</code></span></a></h2><p>提供根据 Basic 外观构建的用户界面对象。</p><h2 id="javax-swing-plaf-metal" tabindex="-1"><a class="header-anchor" href="#javax-swing-plaf-metal"><span><code>javax.swing.plaf.metal</code></span></a></h2><p>提供根据 Java 外观（曾经代号为 <em>Metal</em>）构建的用户界面对象，这是默认外观。</p><h2 id="javax-swing-plaf-multi" tabindex="-1"><a class="header-anchor" href="#javax-swing-plaf-multi"><span><code>javax.swing.plaf.multi</code></span></a></h2><p>提供组合两种或多种外观的用户界面对象。</p><h2 id="javax-swing-plaf-nimbus" tabindex="-1"><a class="header-anchor" href="#javax-swing-plaf-nimbus"><span><code>javax.swing.plaf.nimbus</code></span></a></h2><p>提供根据跨平台 Nimbus 外观构建的用户界面对象。</p><h2 id="javax-swing-plaf-synth" tabindex="-1"><a class="header-anchor" href="#javax-swing-plaf-synth"><span><code>javax.swing.plaf.synth</code></span></a></h2><p>Synth 是一种可蒙皮的外观和感觉，其中所有绘制都被委托。</p><h2 id="javax-swing-table" tabindex="-1"><a class="header-anchor" href="#javax-swing-table"><span><code>javax.swing.table</code></span></a></h2><p>提供用于处理 <code>javax.swing.JTable</code> 中。</p><h2 id="javax-swing-text" tabindex="-1"><a class="header-anchor" href="#javax-swing-text"><span><code>javax.swing.text</code></span></a></h2><p>提供处理可编辑和不可编辑文本组件的类和接口。</p><h2 id="javax-swing-text-html" tabindex="-1"><a class="header-anchor" href="#javax-swing-text-html"><span><code>javax.swing.text.html</code></span></a></h2><p>提供用于创建 HTML 文本编辑器的类 <code>HTMLEditorKit</code> 和支持类。</p><h2 id="javax-swing-text-html-parser" tabindex="-1"><a class="header-anchor" href="#javax-swing-text-html-parser"><span><code>javax.swing.text.html.parser</code></span></a></h2><p>提供默认的 HTML 解析器以及支持类。</p><h2 id="javax-swing-text-rtf" tabindex="-1"><a class="header-anchor" href="#javax-swing-text-rtf"><span><code>javax.swing.text.rtf</code></span></a></h2><p>提供用于创建 Rich-Text-Format 文本编辑器的类 （<code>RTFEditorKit</code>）。</p><h2 id="javax-swing-tree" tabindex="-1"><a class="header-anchor" href="#javax-swing-tree"><span><code>javax.swing.tree</code></span></a></h2><p>提供用于处理 <code>javax.swing.JTree</code> 中。</p><h2 id="javax-swing-undo" tabindex="-1"><a class="header-anchor" href="#javax-swing-undo"><span><code>javax.swing.undo</code></span></a></h2><p>允许开发人员在应用程序（如文本编辑器）中提供对撤消/重做的支持。</p><h1 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>cache</span></a></h1><h2 id="swing简介" tabindex="-1"><a class="header-anchor" href="#swing简介"><span>Swing简介</span></a></h2><ul><li>Swing是AWT的扩展。</li><li>AWT，抽象窗口工具包（Abstract Windows Toolkit，简称<code>AWT</code>），是Java中包含的一个用于基本GUI程序设计的类库（工具包），该工具包依附于操作系统提供的UI，具体样式会根据不同操作系统提供的界面元素进行展示。</li><li>swing包路径：<code>javax.swing</code></li><li>awt包路径：<code>javax.awt</code></li><li>组件使用<code>swing</code></li><li>布局使用<code>awt</code></li></ul><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h2><p><strong>注意事项</strong></p><ul><li>默认情况下窗口是不可见的，需要将窗口对象修改为<code>对象.setVisible(true)</code>。</li><li>窗口默认没有大小，需要使用<code>对象.setSize(&lt;宽度&gt;, &lt;高度&gt;)</code>来设置窗口大小。</li><li>组件在实例化对象后，需要添加到窗口中才能显示，需要使用<code>对象.add(&lt;组件对象名&gt;)</code>来添加。</li><li>在容器组件有设置布局的情况下，在其中的组件最好不要使用位置方法。</li><li>窗口和面板都属于<code>容器</code>类型的组件。</li></ul><h3 id="公共方法" tabindex="-1"><a class="header-anchor" href="#公共方法"><span>公共方法</span></a></h3><table><thead><tr><th style="text-align:left;">方法名</th><th style="text-align:left;">介绍</th></tr></thead><tbody><tr><td style="text-align:left;">&lt;对象&gt;.setLocation(int x, int y)</td><td style="text-align:left;">设置组件的位置</td></tr><tr><td style="text-align:left;">&lt;对象&gt;.setSize(int width, int height)</td><td style="text-align:left;">设置组件的大小</td></tr><tr><td style="text-align:left;">&lt;对象&gt;.setBounds(int x, int y, int width, int height)</td><td style="text-align:left;">同时设置组件的位置、大小</td></tr><tr><td style="text-align:left;">&lt;对象&gt;.setVisible(boolean b)</td><td style="text-align:left;">设置该组件的可见性</td></tr><tr><td style="text-align:left;">&lt;容器对象&gt;.add(&lt;组件或容器&gt;)</td><td style="text-align:left;">将组件或容器添加到容器对象中</td></tr><tr><td style="text-align:left;">&lt;组件对象&gt;.setToolTipText(String text)</td><td style="text-align:left;">鼠标停靠在组件上时显示悬浮提示信息</td></tr><tr><td style="text-align:left;">&lt;容器对象&gt;.setPreferredSize(new Dimension(int width, int height));</td><td style="text-align:left;">设置面板的宽度和高度</td></tr><tr><td style="text-align:left;">&lt;窗口对象&gt;.setUndecorated(boolean b);</td><td style="text-align:left;">移除标题栏和边框</td></tr><tr><td style="text-align:left;">&lt;对象&gt;.setOpaque(boolean b);</td><td style="text-align:left;">设置背景颜色为透明</td></tr></tbody></table><h3 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h3><h4 id="jframe窗体" tabindex="-1"><a class="header-anchor" href="#jframe窗体"><span>JFrame窗体</span></a></h4><ul><li>默认布局：边界布局</li></ul><p><strong>实例化</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化一个窗口对象</span></span>
<span class="line"><span class="token class-name">JFrame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>修改</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 标题名</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 尺寸大小</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 默认显示位置</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 居中位置显示</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 窗口关闭按钮的动作</span></span>
<span class="line"><span class="token comment">// 参数：</span></span>
<span class="line"><span class="token comment">// ---- EXIT_ON_CLOSE：关闭</span></span>
<span class="line"><span class="token comment">// ---- DISPOSE_ON_CLOSE：关闭且释放资源</span></span>
<span class="line"><span class="token comment">// ---- DO_NOTHING_ON_CLOSE：不做任何动作</span></span>
<span class="line"><span class="token comment">// ---- HIDE_ON_COLSE：隐藏</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">WindowConstants</span><span class="token punctuation">.</span>&lt;参数<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 限制 - 是否可以调整窗口大小</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 背景颜色</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>颜色<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 光标样式</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Cousor</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>光标样式<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 添加组件到窗口</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>组件<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 窗口是否可见</span></span>
<span class="line">frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>获取</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="jdialog提示对话框" tabindex="-1"><a class="header-anchor" href="#jdialog提示对话框"><span>JDialog提示对话框</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化提示对话框对象</span></span>
<span class="line"><span class="token comment">// owner：当前对话框的父窗口</span></span>
<span class="line"><span class="token comment">// title：当前对话框的标题</span></span>
<span class="line"><span class="token comment">// modal：当前对话框是否是模式对话框</span></span>
<span class="line"><span class="token class-name">JDialog</span> dialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JDialog</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>窗口对象<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&quot;提示对话框&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="颜色选择器界面" tabindex="-1"><a class="header-anchor" href="#颜色选择器界面"><span>颜色选择器界面</span></a></h4><ul><li>打开一个颜色选择器对话框界面。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="文件选择器界面" tabindex="-1"><a class="header-anchor" href="#文件选择器界面"><span>文件选择器界面</span></a></h4><ul><li>打开一个选择文件的对话框界面。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化对象</span></span>
<span class="line"><span class="token class-name">JFileChooser</span> chooser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFileChooser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文件树界面" tabindex="-1"><a class="header-anchor" href="#文件树界面"><span>文件树界面</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化对象</span></span>
<span class="line"><span class="token class-name">JTree</span> tree <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jfiledialog文件对话框" tabindex="-1"><a class="header-anchor" href="#jfiledialog文件对话框"><span>JFileDialog文件对话框</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化文件对话框对象</span></span>
<span class="line"><span class="token class-name">JFileDialog</span> fileDialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFileDialog</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token string">&quot;选择文件对话框&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FileDialog</span><span class="token punctuation">.</span><span class="token constant">LOAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="joptionpane小型对话框" tabindex="-1"><a class="header-anchor" href="#joptionpane小型对话框"><span>JOptionPane小型对话框</span></a></h4><h4 id="jpanel面板" tabindex="-1"><a class="header-anchor" href="#jpanel面板"><span>JPanel面板</span></a></h4><ul><li>面板相当于是一个存放其他组件的组件，跟窗口一样也是一个容器。</li><li>面板与窗口的操作一样。</li><li>默认布局：流式布局</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 面板 对象</span></span>
<span class="line"><span class="token class-name">JPanel</span> panel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jscrollpane滚动条面板" tabindex="-1"><a class="header-anchor" href="#jscrollpane滚动条面板"><span>JScrollPane滚动条面板</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 滚动面板 对象</span></span>
<span class="line"><span class="token class-name">JScrollPane</span> scrollPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JScrollPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jlabel标签" tabindex="-1"><a class="header-anchor" href="#jlabel标签"><span>JLabel标签</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化标签\`Label\`对象</span></span>
<span class="line"><span class="token class-name">JLabel</span> label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 必须设定标签的位置和大小，否则会显示不出来。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图片" tabindex="-1"><a class="header-anchor" href="#图片"><span>图片</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 调整标签的层叠顺序</span></span>
<span class="line"><span class="token function">setComponentZOrder</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>组件<span class="token operator">&gt;</span><span class="token punctuation">,</span><span class="token operator">&lt;</span>数字<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为面板添加背景图片</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 在面板中编写如下代码：</span></span>
<span class="line"><span class="token comment">// 绘制背景图片的方法 - 重写</span></span>
<span class="line"><span class="token annotation punctuation">@Override</span>  </span>
<span class="line"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">paintComponent</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token comment">// 加载背景图片的文件  </span></span>
<span class="line">    <span class="token class-name">Image</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span><span class="token string">&quot;resources/image/game_bg_0.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">    <span class="token comment">// 绘制背景图片到面板上  </span></span>
<span class="line">    g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按钮" tabindex="-1"><a class="header-anchor" href="#按钮"><span>按钮</span></a></h3><h4 id="jbutton按钮" tabindex="-1"><a class="header-anchor" href="#jbutton按钮"><span>JButton按钮</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化按钮\`Button\`对象</span></span>
<span class="line"><span class="token class-name">JButton</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jtogglebutton开关按钮" tabindex="-1"><a class="header-anchor" href="#jtogglebutton开关按钮"><span>JToggleButton开关按钮</span></a></h4><ul><li>开关按钮有两个状态，一个是开、另一个是关。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化开关按钮对象</span></span>
<span class="line"><span class="token class-name">JToggleButton</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JToggleButton</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置开关按钮默认状态</span></span>
<span class="line">button<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> bool<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jcheckbox勾选框" tabindex="-1"><a class="header-anchor" href="#jcheckbox勾选框"><span>JCheckBox勾选框</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化勾选框\`Checkbox\`对象</span></span>
<span class="line"><span class="token class-name">JCheckBox</span> checkBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JCheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 勾选框里的内容</span></span>
<span class="line">checkBox<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 判断勾选框是否勾选，返回boolean</span></span>
<span class="line">checkbox<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="checkboxgroup勾选框组-单选" tabindex="-1"><a class="header-anchor" href="#checkboxgroup勾选框组-单选"><span>CheckboxGroup勾选框组（单选）</span></a></h5><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化勾选框组（单选）\`CheckboxGroup\`对象</span></span>
<span class="line"><span class="token class-name">CheckboxGroup</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckboxGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 将勾选框添加到勾选框组\`group\`对象中</span></span>
<span class="line"><span class="token operator">&lt;</span>勾选框<span class="token number">1</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setCheckboxGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span>勾选框<span class="token number">2</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setCheckboxGroup</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 获取组中选择的哪个框中的文本</span></span>
<span class="line">group<span class="token punctuation">.</span><span class="token function">setSelectedCheckbox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jlist列表" tabindex="-1"><a class="header-anchor" href="#jlist列表"><span>JList列表</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化列表对象</span></span>
<span class="line"><span class="token class-name">JList</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 在列表中添加元素</span></span>
<span class="line">list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 是否支持多选</span></span>
<span class="line">list<span class="token punctuation">.</span><span class="token function">setMultipleMode</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> bool<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文本" tabindex="-1"><a class="header-anchor" href="#文本"><span>文本</span></a></h3><h4 id="文本框" tabindex="-1"><a class="header-anchor" href="#文本框"><span>文本框</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化文本框\`TextField\`对象</span></span>
<span class="line"><span class="token class-name">TextField</span> textField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 指定输入的文本实际显示的符号</span></span>
<span class="line">textField<span class="token punctuation">.</span><span class="token function">setEchoChar</span><span class="token punctuation">(</span><span class="token keyword">char</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 接收到文本框内输入的文本内容</span></span>
<span class="line"><span class="token class-name">String</span> text <span class="token operator">=</span> textField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文本域" tabindex="-1"><a class="header-anchor" href="#文本域"><span>文本域</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化文本域\`TextArea\`对象</span></span>
<span class="line"><span class="token class-name">TextArea</span> textArea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 限制行数</span></span>
<span class="line">textArea<span class="token punctuation">.</span><span class="token function">setRows</span><span class="token punctuation">(</span><span class="token keyword">int</span> rows<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 限制列数</span></span>
<span class="line">textArea<span class="token punctuation">.</span><span class="token function">setColumns</span><span class="token punctuation">(</span><span class="token keyword">int</span> columns<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="表格" tabindex="-1"><a class="header-anchor" href="#表格"><span>表格</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="jprogressbar进度条" tabindex="-1"><a class="header-anchor" href="#jprogressbar进度条"><span>JProgressBar进度条</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 创建进度条对象</span></span>
<span class="line"><span class="token class-name">JProgressBar</span> bar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JProgressBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设定进度条的最大值</span></span>
<span class="line">bar<span class="token punctuation">.</span><span class="token function">setMaximum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设定进度值</span></span>
<span class="line">bar<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jmenubar菜单栏" tabindex="-1"><a class="header-anchor" href="#jmenubar菜单栏"><span>JMenuBar菜单栏</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 &quot;菜单栏&quot; 对象</span></span>
<span class="line"><span class="token class-name">JMenuBar</span> menuBer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 实例化 &quot;菜单&quot; 对象</span></span>
<span class="line"><span class="token class-name">JMenu</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenu</span><span class="token punctuation">(</span><span class="token class-name">String</span> label<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 实例化 &quot;菜单子对象&quot; 对象</span></span>
<span class="line"><span class="token class-name">JMenuItem</span> menuItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token class-name">String</span> label<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 为 &quot;菜单子对象&quot; 添加快捷键</span></span>
<span class="line">menuItem<span class="token punctuation">.</span><span class="token function">setAccelerator</span><span class="token punctuation">(</span><span class="token class-name">KeyStroke</span><span class="token punctuation">.</span><span class="token function">getKeyStroke</span><span class="token punctuation">(</span><span class="token class-name">Char</span> keyChar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 将 &quot;菜单子对象&quot; 添加到 &quot;菜单&quot; 中</span></span>
<span class="line">menu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>menuItem<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 将 &quot;菜单&quot; 添加到 &quot;菜单栏&quot; 中</span></span>
<span class="line">menuBer<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 将 &quot;菜单栏&quot; 添加到 &quot;窗口&quot; 中</span></span>
<span class="line"><span class="token operator">&lt;</span>窗口容器<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setJMenuBar</span><span class="token punctuation">(</span>menuBer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局"><span>布局</span></a></h2><p><strong>作用</strong></p><ul><li>自动放置组件的方式。</li></ul><p><strong>注意事项</strong></p><ul><li>窗口默认情况下会采用<code>BorderLayout</code>作为布局，可以使用<code>对象.setLayout(null)</code>将布局清空。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 添加布局，\`null\`表示不使用布局</span></span>
<span class="line"><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="边界布局borderlayout" tabindex="-1"><a class="header-anchor" href="#边界布局borderlayout"><span>边界布局BorderLayout</span></a></h3><ul><li>该布局是容器组件的默认布局。</li><li>该布局将组件定义为五个区域：<code>WEST</code>左边、<code>EAST</code>右边、<code>NORTH</code>上边、<code>SOUTH</code>下边、<code>CENTER</code>中间。</li><li>当向使用该布局的容器中添加组件时，若不指定区域，则默认添加到中间区域。</li><li>如果在某个位置重复添加组件，只有最后一个添加的组件可见。</li><li>若“上下左右”其中几个区域中没有组件时，中间区域会会延伸到没有组件的区域位置。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 边界布局 对象</span></span>
<span class="line"><span class="token class-name">BorderLayout</span> borderLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 修改布局的位置之间的横向间距</span></span>
<span class="line">borderLayout<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 修改布局的位置之间的纵向间距</span></span>
<span class="line">borderLayout<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 为组件添加布局的位置</span></span>
<span class="line"><span class="token comment">/* - 支持的参数：</span>
<span class="line">    \`BorderLayout.WEST\`   左边</span>
<span class="line">    \`BorderLayout.EAST\`   右边</span>
<span class="line">    \`BorderLayout.NORTH\`  上边</span>
<span class="line">    \`BorderLayout.SOUTH\`  下边</span>
<span class="line">    \`BorderLayout.CENTER\` 中间</span>
<span class="line"> */</span></span>
<span class="line"><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>组件<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span><span class="token constant">WEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流式布局flowlayout" tabindex="-1"><a class="header-anchor" href="#流式布局flowlayout"><span>流式布局FlowLayout</span></a></h3><ul><li>按顺序排列的布局。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 流式布局 对象</span></span>
<span class="line"><span class="token class-name">FlowLayout</span> flowLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 指定对齐方式</span></span>
<span class="line"><span class="token comment">/* - 支持参数：</span>
<span class="line">    \`FlowLayout.LEFT\`     左对齐</span>
<span class="line">    \`FlowLayout.CENTER\`   中间对齐</span>
<span class="line">    \`FlowLayout.RIGHT\`    左对齐</span>
<span class="line">    \`FlowLayout.LEADING\`</span>
<span class="line">    \`FlowLayout.TRAILING\`</span>
<span class="line"> */</span></span>
<span class="line">flowLayout<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>对齐方式<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 水平间距</span></span>
<span class="line">flowLayout<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token keyword">int</span> hgap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 垂直间距</span></span>
<span class="line">flowLayout<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token keyword">int</span> vgap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网格布局gridlayout" tabindex="-1"><a class="header-anchor" href="#网格布局gridlayout"><span>网格布局GridLayout</span></a></h3><ul><li>该布局分割成纵横线分割的网格，每个网格所占的区域大小相同。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 网格布局 对象</span></span>
<span class="line"><span class="token class-name">GridLayout</span> gridLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 排成几列</span></span>
<span class="line">gridLayout<span class="token punctuation">.</span><span class="token function">setColumns</span><span class="token punctuation">(</span><span class="token keyword">int</span> cols<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 排成几行</span></span>
<span class="line">gridLayout<span class="token punctuation">.</span><span class="token function">setRows</span><span class="token punctuation">(</span><span class="token keyword">int</span> rows<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 水平间距</span></span>
<span class="line">gridLayout<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token keyword">int</span> hgap<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line"></span>
<span class="line"><span class="token comment">// 垂直间距</span></span>
<span class="line">gridLayout<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token keyword">int</span> vgap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网格包布局gridbaglayout" tabindex="-1"><a class="header-anchor" href="#网格包布局gridbaglayout"><span>网格包布局GridBagLayout</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 边界布局 对象</span></span>
<span class="line"><span class="token class-name">GridBagLayout</span> gridBagLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridBagLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 待完善</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="卡片布局cardlayout" tabindex="-1"><a class="header-anchor" href="#卡片布局cardlayout"><span>卡片布局CardLayout</span></a></h3><ul><li>将加入容器的所有组件看成一叠组件（卡片），每次只展示最上面的一个组件（卡片）。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 卡片布局 对象</span></span>
<span class="line"><span class="token class-name">CardLayout</span> cardLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CardLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 指定组件与容器的水平间距</span></span>
<span class="line">gridLayout<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token keyword">int</span> hgap<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line"></span>
<span class="line"><span class="token comment">// 指定组件与容器的垂直间距</span></span>
<span class="line">gridLayout<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token keyword">int</span> vgap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 显示第一张组件</span></span>
<span class="line">cardLayout<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 显示最后一张组件</span></span>
<span class="line">cardLayout<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 显示前一张组件</span></span>
<span class="line">cardLayout<span class="token punctuation">.</span><span class="token function">previous</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 显示后一张组件</span></span>
<span class="line">cardLayout<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 显示指定名字的组件</span></span>
<span class="line">cardLayout<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>组件<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="盒子布局boxlayout" tabindex="-1"><a class="header-anchor" href="#盒子布局boxlayout"><span>盒子布局BoxLayout</span></a></h3><ul><li><p>可以设置垂直和水平两个方向上摆放UI组件的容器。</p></li><li><p>可以添加垂直和水平方向上的分割组件。</p></li><li><p>包路径：<code>javax.swing.BoxLayout</code></p></li></ul><p><strong>布局容器格式</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 创建方案一</span></span>
<span class="line"><span class="token comment">// 设置窗口或面板对象，未限制是水平方向还是垂直方向</span></span>
<span class="line"><span class="token class-name">BoxLayout</span> boxLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoxLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 指定水平摆放</span></span>
<span class="line"><span class="token class-name">BoxLayout</span> boxLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoxLayout</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">BoxLayout</span><span class="token punctuation">.</span><span class="token constant">X_AXIS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 指定垂直摆放</span></span>
<span class="line"><span class="token class-name">BoxLayout</span> boxLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoxLayout</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>容器<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">BoxLayout</span><span class="token punctuation">.</span><span class="token constant">Y_AXIS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建方案二</span></span>
<span class="line"><span class="token comment">// 设置水平排列组件的Box容器</span></span>
<span class="line"><span class="token class-name">Box</span> hBox <span class="token operator">=</span> <span class="token class-name">Box</span><span class="token punctuation">.</span><span class="token function">createHorizontalBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置垂直排列组件的Box容器</span></span>
<span class="line"><span class="token class-name">Box</span> vBox <span class="token operator">=</span> <span class="token class-name">Box</span><span class="token punctuation">.</span><span class="token function">createVerticalBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>分割组件</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 创建\`水平分割组件\`，两个方向上都能拉伸。</span></span>
<span class="line">hBox<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">.</span><span class="token function">createHorizontalGlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建指定宽度的\`水平分割组件\`，仅允许垂直方向上拉伸。</span></span>
<span class="line">hBox<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">.</span><span class="token function">createHorizontalStrut</span><span class="token punctuation">(</span><span class="token keyword">int</span> width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建\`垂直分割组件\`，两个方向上都能拉伸。</span></span>
<span class="line">vBox<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">.</span><span class="token function">createVerticalGlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建指定高度的\`垂直分割组件\`，仅允许水平方向上拉伸。</span></span>
<span class="line">vBox<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">.</span><span class="token function">createVerticalStrut</span><span class="token punctuation">(</span><span class="token keyword">int</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件监听器" tabindex="-1"><a class="header-anchor" href="#事件监听器"><span>事件监听器</span></a></h2><ul><li>监听器会监听窗口中发生的一些事件。</li><li>监听器分为：窗口、鼠标、键盘、、、、、、</li></ul><ol><li>编写事件监听器的实现类（可以编写内部类，减少文件数量）</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 事件监听器 - 内部类  </span></span>
<span class="line"><span class="token comment">// 与按钮绑定的事件监听器类  </span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyEvent</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span> <span class="token punctuation">{</span>  </span>
<span class="line">  </span>
<span class="line">    <span class="token annotation punctuation">@Override</span>  </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;点击了按钮&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>实例化事件监听器对象</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化 事件监听器 对象  </span></span>
<span class="line"><span class="token class-name">MyEvent</span>  event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>将事件监听器绑定到按钮组件上</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 事件监听器绑定按钮  </span></span>
<span class="line">loginButton<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>总结</strong></p><ul><li>当点击按钮时，会执行事件监听器类中的代码</li></ul><h3 id="鼠标监听器" tabindex="-1"><a class="header-anchor" href="#鼠标监听器"><span>鼠标监听器</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="键盘监听器" tabindex="-1"><a class="header-anchor" href="#键盘监听器"><span>键盘监听器</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="动作监听器" tabindex="-1"><a class="header-anchor" href="#动作监听器"><span>动作监听器</span></a></h3><ul><li>一个监听器监听多个组件，仅支持（Button、菜单子项）</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token comment">// 菜单栏监听  </span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MenuActionLis</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token annotation punctuation">@Override</span>  </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getActionCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">        <span class="token keyword">switch</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getActionCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&quot;开始&quot;</span><span class="token operator">:</span>  </span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span>  </span>
<span class="line">            <span class="token keyword">default</span><span class="token operator">:</span>  </span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span>  </span>
<span class="line">        <span class="token punctuation">}</span>  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 实例化监听器  </span></span>
<span class="line"><span class="token class-name">MenuActionLis</span> menuActionLis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuActionLis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 注册监视器  </span></span>
<span class="line"><span class="token operator">&lt;</span>监听对象组件<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>menuActionLis<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 设置动作指令  </span></span>
<span class="line"><span class="token operator">&lt;</span>监听对象组件<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setActionCommand</span><span class="token punctuation">(</span><span class="token string">&quot;开始&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="窗口监听器" tabindex="-1"><a class="header-anchor" href="#窗口监听器"><span>窗口监听器</span></a></h3><ul><li><code>WindowsListener</code></li></ul><p><strong>关闭窗口</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line">frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 关闭窗口对象</span></span>
<span class="line">        frame<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,156)]))}const o=s(t,[["render",l]]),u=JSON.parse('{"path":"/software/Language-Java-JavaSE-API-%E3%80%8Cjavax.swing%E3%80%8D.html","title":"Language - Java - Java SE - API - 「javax.swing」","lang":"zh-CN","frontmatter":{"title":"Language - Java - Java SE - API - 「javax.swing」","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2024-04-10T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： 提供了一个用于创建图形用户界面（GUI）应用程序的丰富组件集合，是 AWT (Abstract Window Toolkit) 的后续产品。 简介 简要说明 提供了一个用于创建图形用户界面（GUI）应用程序的丰富组件集合。 是 Java Foundation Classes (JFC) 的一部分，也被称为 Swing，是 AWT (Abst...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - Java - Java SE - API - 「javax.swing」\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-Java-JavaSE-API-%E3%80%8Cjavax.swing%E3%80%8D.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - Java - Java SE - API - 「javax.swing」"}],["meta",{"property":"og:description","content":"文章摘要： 提供了一个用于创建图形用户界面（GUI）应用程序的丰富组件集合，是 AWT (Abstract Window Toolkit) 的后续产品。 简介 简要说明 提供了一个用于创建图形用户界面（GUI）应用程序的丰富组件集合。 是 Java Foundation Classes (JFC) 的一部分，也被称为 Swing，是 AWT (Abst..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-04-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-Java-JavaSE-API-「javax.swing」.md","excerpt":"<p><strong>文章摘要：</strong> 提供了一个用于创建图形用户界面（GUI）应用程序的丰富组件集合，是 AWT (Abstract Window Toolkit) 的后续产品。</p>\\n"}');export{o as comp,u as data};
