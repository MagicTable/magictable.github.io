import{_ as n,c as s,a as e,o as t}from"./app-D67BBu3k.js";const p="/assets/Language-Java8-API-%E3%80%8Cjava.util.logging%E3%80%8D.excalidraw-BZGtiwY3.svg",l={};function o(c,a){return t(),s("div",null,a[0]||(a[0]=[e('<p><strong>文章摘要：</strong> Java 8 中的<code>java.util.logging</code>，提供 JavaTM 2 平台的核心日志记录工具的类和接口。</p><blockquote><p><img src="'+p+`" alt="Language-Java8-API-「java.util.logging」.excalidraw"></p></blockquote><h2 id="记录器对象" tabindex="-1"><a class="header-anchor" href="#记录器对象"><span>记录器对象</span></a></h2><h3 id="创建记录器对象" tabindex="-1"><a class="header-anchor" href="#创建记录器对象"><span>创建记录器对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">Logger</span> <span class="token operator">&lt;</span>记录器<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;被记录对象&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// “被记录对象”是一个 “文件中的类对象” 被实例化后的对象，记录其运行过程。</span></span>
<span class="line"><span class="token comment">// 一般记录当前 “文件中的类对象” 。</span></span>
<span class="line"><span class="token comment">// 字符串类型的类名</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加处理器对象" tabindex="-1"><a class="header-anchor" href="#添加处理器对象"><span>添加处理器对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token operator">&lt;</span>记录器<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>处理器<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="修改日志级别" tabindex="-1"><a class="header-anchor" href="#修改日志级别"><span>修改日志级别</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token operator">&lt;</span>记录器<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span><span class="token class-name">Level</span><span class="token punctuation">.</span>&lt;日志级别<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 日志级别：OFF（关闭全部） &gt; SEVERE（错误） &gt; WARNING（警告） &gt; INFO（信息） &gt; CONFIG（配置） &gt; FINE（调试） &gt; FINER（调试） &gt; FINEST（调试） &gt; ALL（开启全部）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="处理器对象" tabindex="-1"><a class="header-anchor" href="#处理器对象"><span>处理器对象</span></a></h2><h3 id="创建处理器对象" tabindex="-1"><a class="header-anchor" href="#创建处理器对象"><span>创建处理器对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 输出到 控制台</span></span>
<span class="line"><span class="token class-name">ConsoleHandler</span> <span class="token operator">&lt;</span>处理器<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsoleHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 输出到 文件</span></span>
<span class="line"><span class="token class-name">FileHandler</span> <span class="token operator">&lt;</span>处理器<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileHandler</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;文件具体路径和名称&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加格式器对象" tabindex="-1"><a class="header-anchor" href="#添加格式器对象"><span>添加格式器对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 将 格式器 添加到 处理器 中</span></span>
<span class="line"><span class="token operator">&lt;</span>处理器<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setFormatter</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>格式器<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改日志级别-1" tabindex="-1"><a class="header-anchor" href="#修改日志级别-1"><span>修改日志级别</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token operator">&lt;</span>处理器<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span><span class="token class-name">Level</span><span class="token punctuation">.</span>&lt;日志级别<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 日志级别：OFF（关闭全部） &gt; SEVERE（错误） &gt; WARNING（警告） &gt; INFO（信息） &gt; CONFIG（配置） &gt; FINE（调试） &gt; FINER（调试） &gt; FINEST（调试） &gt; ALL（开启全部）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="格式器对象" tabindex="-1"><a class="header-anchor" href="#格式器对象"><span>格式器对象</span></a></h2><h3 id="创建格式器对象" tabindex="-1"><a class="header-anchor" href="#创建格式器对象"><span>创建格式器对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// </span></span>
<span class="line"><span class="token class-name">SimpleFormatter</span> <span class="token operator">&lt;</span>格式器<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="管理器对象" tabindex="-1"><a class="header-anchor" href="#管理器对象"><span>管理器对象</span></a></h2><h3 id="创建管理器对象" tabindex="-1"><a class="header-anchor" href="#创建管理器对象"><span>创建管理器对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 创建管理器对象</span></span>
<span class="line"><span class="token class-name">LogManager</span> logManager <span class="token operator">=</span> <span class="token class-name">LogManager</span><span class="token punctuation">.</span><span class="token function">getLogManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志内容对象" tabindex="-1"><a class="header-anchor" href="#日志内容对象"><span>日志内容对象</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 方案一</span></span>
<span class="line">logger<span class="token punctuation">.</span>&lt;日志级别<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>记录的内容<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 方案二</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Level</span><span class="token punctuation">.</span>&lt;日志级别<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>记录的内容<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 日志级别：OFF（关闭全部） &gt; SEVERE（错误） &gt; WARNING（警告） &gt; INFO（信息） &gt; CONFIG（配置） &gt; FINE（调试） &gt; FINER（调试） &gt; FINEST（调试） &gt; ALL（开启全部）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 方案三，实现字符串拼接，引入变量</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Level</span><span class="token punctuation">.</span>&lt;日志级别<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>记录的内容<span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>变量名<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>变量名<span class="token operator">&gt;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例"><span>案例</span></a></h2><h3 id="自定义日志配置-硬编码" tabindex="-1"><a class="header-anchor" href="#自定义日志配置-硬编码"><span>自定义日志配置-硬编码</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 创建 记录器 对象</span></span>
<span class="line"><span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;被记录对象&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 关闭默认日志配置</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">setUseParentHandlers</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建 处理器 对象</span></span>
<span class="line"><span class="token class-name">ConsoleHandler</span> consoleHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsoleHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建 格式器 对象</span></span>
<span class="line"><span class="token class-name">SimpleFormatter</span> simpleFormatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 将 格式器 添加到 处理器 中</span></span>
<span class="line">cosoleHandler<span class="token punctuation">.</span><span class="token function">setFormatter</span><span class="token punctuation">(</span>simpleFormatter<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 将 处理器 添加到 记录器 中</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span>cosoleHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 设置配置日志级别</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span><span class="token class-name">Level</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">consoleHandler<span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span><span class="token class-name">Level</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 日志级别：OFF（关闭全部） &gt; SEVERE（错误） &gt; WARNING（警告） &gt; INFO（信息） &gt; CONFIG（配置） &gt; FINE（调试） &gt; FINER（调试） &gt; FINEST（调试） &gt; ALL（开启全部）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 开始执行日志信息</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Level</span><span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token punctuation">,</span> “信息级别的日志信息”<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义日志配置-配置文件" tabindex="-1"><a class="header-anchor" href="#自定义日志配置-配置文件"><span>自定义日志配置-配置文件</span></a></h3><ul><li>类似将“格式器对象”写在配置文件中，而无需直接写在代码中。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 读取配置文件，通过类加载器</span></span>
<span class="line"><span class="token class-name">InputSttream</span> <span class="token operator">&lt;</span>配置文件对象<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>当前类名<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;配置文件所在位置和名称&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建 管理器 对象</span></span>
<span class="line"><span class="token class-name">LogManager</span> logManager <span class="token operator">=</span> <span class="token class-name">LogManager</span><span class="token punctuation">.</span><span class="token function">getLogManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 通过 管理器 加载配置文件</span></span>
<span class="line">logManager<span class="token punctuation">.</span><span class="token function">readConfiguration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>配置文件对象<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30)]))}const r=n(l,[["render",o]]),u=JSON.parse('{"path":"/software/Language-Java-JavaSE-API-%E3%80%8Cjava.util.logging%E3%80%8D.html","title":"Language - Java - Java SE - API - 「java.util.logging」","lang":"zh-CN","frontmatter":{"title":"Language - Java - Java SE - API - 「java.util.logging」","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2025-02-20T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： Java 8 中的java.util.logging，提供 JavaTM 2 平台的核心日志记录工具的类和接口。 Language-Java8-API-「java.util.logging」.excalidraw 记录器对象 创建记录器对象 添加处理器对象 修改日志级别 处理器对象 创建处理器对象 添加格式器对象 修改日志级别 格式器对象 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - Java - Java SE - API - 「java.util.logging」\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-Java-JavaSE-API-%E3%80%8Cjava.util.logging%E3%80%8D.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - Java - Java SE - API - 「java.util.logging」"}],["meta",{"property":"og:description","content":"文章摘要： Java 8 中的java.util.logging，提供 JavaTM 2 平台的核心日志记录工具的类和接口。 Language-Java8-API-「java.util.logging」.excalidraw 记录器对象 创建记录器对象 添加处理器对象 修改日志级别 处理器对象 创建处理器对象 添加格式器对象 修改日志级别 格式器对象 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2025-02-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-Java-JavaSE-API-「java.util.logging」.md","excerpt":"<p><strong>文章摘要：</strong> Java 8 中的<code>java.util.logging</code>，提供 JavaTM 2 平台的核心日志记录工具的类和接口。</p>\\n"}');export{r as comp,u as data};
