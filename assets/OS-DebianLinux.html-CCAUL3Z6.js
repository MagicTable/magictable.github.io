import{_ as p,c as d,b as i,a as t,d as n,e,w as s,r as o,o as r}from"./app-D67BBu3k.js";const u="/assets/OS-DebianLinux12-%E6%80%BB%E6%8F%BD%E5%9B%BE.excalidraw-QjDXrUqI.svg",c={},h={class:"hint-container info"};function b(x,l){const a=o("RouteLink");return r(),d("div",null,[l[37]||(l[37]=i("p",null,[i("strong",null,"文章摘要："),n(" Debian Linux 12 操作系统，多用户、多任务、多线程、非实时的操作系统。")],-1)),i("div",h,[l[6]||(l[6]=i("p",{class:"hint-container-title"},"相关信息",-1)),l[7]||(l[7]=i("p",null,"外部相关文章",-1)),l[8]||(l[8]=i("ul",null,[i("li",null,"Debian官方文档：https://wiki.debian.org/zh_CN/FrontPage"),i("li",null,"规范存储库：https://specifications.freedesktop.org/"),i("li",null,"GNOME桌面功能扩展插件网站："),i("li",null,"GNOME桌面美化网站：https://www.pling.com/")],-1)),l[9]||(l[9]=i("p",null,"内部相关文章",-1)),i("ul",null,[i("li",null,[l[1]||(l[1]=n("部署配置方案-个人桌面：")),e(a,{to:"/software/OS-DebianLinux-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88-GNOME%E4%B8%AA%E4%BA%BA%E6%A1%8C%E9%9D%A2.html"},{default:s(()=>l[0]||(l[0]=[n("OS-DebianLinux-热门推荐-部署配置方案-GNOME个人桌面")])),_:1,__:[0]})]),i("li",null,[l[3]||(l[3]=n("部署配置方案-Web应用服务器：")),e(a,{to:"/software/OS-DebianLinux-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88-Web%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8.html"},{default:s(()=>l[2]||(l[2]=[n("OS-DebianLinux-热门推荐-部署配置方案-Web应用服务器")])),_:1,__:[2]})]),i("li",null,[l[5]||(l[5]=n("系统维护规划：")),e(a,{to:"/software/OS-DebianLinux-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4%E8%A7%84%E5%88%92.html"},{default:s(()=>l[4]||(l[4]=[n("OS-DebianLinux-热门推荐-系统维护规划")])),_:1,__:[4]})])])]),l[38]||(l[38]=t('<blockquote><p><img src="'+u+'" alt="OS-DebianLinux12-总揽图"></p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>多用户、多任务、多线程、非实时的操作系统。</li><li>GNU/Linux 用户在挑选软件方面有着极大的自由。例如，他们可以选择几十种不同的命令行外壳和多种图形桌面。</li><li>GNU/Linux 很少会崩溃、适合在同一时间运行多个程序，而且比大多数操作系统更为安全。</li><li>将 Debian 哲学与方法论，GNU 工具集、Linux 内核，以及其他重要的自由软件结合在一起所构成的独特的软件发行版称为 Debian Linux 。</li><li>该发行版由大量的软件包组成。</li><li>发行版中的每个软件包都包含了执行文件、脚本、文档和配置信息，并拥有一位维护者，其职责是保持软件包更新、跟踪 bug 报告，并与软件源作者保持联络。</li><li>支持的CPU架构：<a href="https://wiki.debian.org/CategoryPorts" target="_blank" rel="noopener noreferrer">官方说明</a></li></ul><p>主要功能</p><ul><li><strong>稳定性</strong>：Debian以其稳定性和可靠性而著称，适合需要长期运行的服务器。</li><li><strong>软件包管理</strong>：使用dpkg包管理系统和APT（Advanced Package Tool）来安装、更新和管理软件包。</li><li><strong>自由软件</strong>：Debian致力于自由软件，默认情况下只包含完全自由的软件。</li><li><strong>广泛支持</strong>：支持多种硬件平台，包括常见的x86和ARM架构。</li><li><strong>安全更新</strong>：定期发布安全更新，确保系统的安全性。</li><li><strong>桌面环境</strong>：提供多种桌面环境选择，如GNOME、KDE Plasma、Xfce等。</li><li><strong>服务器优化</strong>：适用于各种服务器应用，如文件服务器、邮件服务器、Web服务器等。</li></ul><p>注意事项</p><ul><li><strong>软件自由性</strong>：Debian坚持使用自由软件，可能不包括某些专有软件或驱动。</li><li><strong>系统更新</strong>：在进行系统更新时，应确保备份重要数据，避免更新过程中出现问题。</li><li><strong>硬件兼容性</strong>：某些硬件可能需要额外的驱动程序，这些可能不在Debian的官方软件仓库中。</li><li><strong>社区支持</strong>：虽然Debian有强大的社区支持，但官方的客服支持可能不如商业发行版。</li><li><strong>版本更新周期</strong>：Debian的稳定版更新周期较长，可能不会包含最新的软件版本。</li></ul><p>适用场景</p><ul><li><strong>服务器部署</strong>：由于其稳定性和安全性，Debian非常适合用作服务器操作系统。</li><li><strong>桌面使用</strong>：对于追求稳定和自由的桌面用户，Debian是一个很好的选择。</li><li><strong>开发环境</strong>：为开发者提供了稳定且功能丰富的开发环境。</li><li><strong>教育机构</strong>：由于其开源和自由软件的原则，Debian适合用于教育目的。</li><li><strong>嵌入式系统</strong>：Debian的轻量级版本，如Debian Minimal，适用于嵌入式系统。</li></ul><h2 id="linux的组成" tabindex="-1"><a class="header-anchor" href="#linux的组成"><span>Linux的组成</span></a></h2><ul><li>Linux/GNU 操作系统由“Linux 内核 + 多种基础程序”构成。</li><li>操作系统最重要的组成部分是内核，Linux 就是内核组件，而该系统的其余部分主要是由 GNU 工程编写和提供的程序组成，因此被称为 GNU/Linux 一词来表达通常所说的 Linux操作系统。</li></ul><h3 id="内核-kernel" tabindex="-1"><a class="header-anchor" href="#内核-kernel"><span>内核（kernel）</span></a></h3><ul><li>内核是Linux操作系统的核心。</li><li>直接与计算机的硬件交互，并提供基本的服务，如进程管理、内存管理、设备管理和文件系统管理。</li><li>内核空间是操作系统的一个特权区域，只有内核代码可以执行。</li></ul><h3 id="壳-shell" tabindex="-1"><a class="header-anchor" href="#壳-shell"><span>壳（shell）</span></a></h3><ul><li>是系统的用户界面，提供来用户和内核进行交互操作的一种接口。</li><li>接收用户输入的命令并送入内核去执行，是一个命令解释器。</li><li>是高级编程语言，shell编程。</li><li>作用是提供人机交互，使用户与内核之间交互。</li><li><strong>命令行界面（CLI）</strong>：如Bash、Zsh等，允许用户通过命令行与系统交互。</li><li><strong>图形用户界面（GUI）</strong>：如GNOME、KDE、XFCE等，提供图形化的操作环境。</li></ul>',16)),i("p",null,[l[11]||(l[11]=n("Bash shell命令交互界面操作的详细总结：")),e(a,{to:"/software/Language-BashShell.html"},{default:s(()=>l[10]||(l[10]=[n("Language-BashShell")])),_:1,__:[10]})]),l[39]||(l[39]=i("h3",{id:"文件系统-file-systems",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#文件系统-file-systems"},[i("span",null,"文件系统（File Systems）")])],-1)),l[40]||(l[40]=i("ul",null,[i("li",null,"文件系统是文件存放在磁盘等存储设备上的组织方法。"),i("li",null,"Linux支持多种文件系统。如：ext4、ext3、ext2、NFS等。")],-1)),i("p",null,[l[13]||(l[13]=n("EXT4文件系统的详细总结：")),e(a,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-EXT4.html"},{default:s(()=>l[12]||(l[12]=[n("基础知识-文件系统-EXT4")])),_:1,__:[12]})]),l[41]||(l[41]=t(`<h3 id="系统守护进程-daemons" tabindex="-1"><a class="header-anchor" href="#系统守护进程-daemons"><span>系统守护进程（Daemons）</span></a></h3><ul><li>在后台运行的服务进程，如网络服务、打印服务、数据库服务等。</li></ul><h3 id="系统库" tabindex="-1"><a class="header-anchor" href="#系统库"><span>系统库</span></a></h3><ul><li>提供程序和内核之间的接口，使得应用程序可以访问内核的功能。</li><li>如glibc（GNU C Library）。</li></ul><h3 id="系统工具和实用程序" tabindex="-1"><a class="header-anchor" href="#系统工具和实用程序"><span>系统工具和实用程序</span></a></h3><ul><li>用于系统管理的工具，如文件管理器、文本编辑器、系统监控工具等。</li></ul><h3 id="应用程序" tabindex="-1"><a class="header-anchor" href="#应用程序"><span>应用程序</span></a></h3><ul><li>标准的Linux操作系统都会有一套应用程序。</li><li>用户安装的软件，用于执行特定任务，如Web浏览器、办公软件、开发工具等。</li></ul><h3 id="用户空间" tabindex="-1"><a class="header-anchor" href="#用户空间"><span>用户空间</span></a></h3><ul><li>用户空间是应用程序和用户操作的环境，它不直接与硬件交互，而是通过系统调用与内核通信。</li><li>用户空间包括系统库、系统工具、应用程序和用户数据。</li></ul><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><ul><li>在很多操作系统中软件都是通过读取配置文件来改变执行方式的。</li><li>Linux是一切皆文件，因此可选择使用 “命令” 或者 “手动修改文件” 的方式进行操作。</li><li>磁盘分区建议提起规划并计算将使用多少存储空间，这样才能减少分区后存储空间浪费。</li></ul><p>Linux操作系统中的注意事项</p><ul><li>Linux中严格区分大小写。</li><li>Linux中所有内容都以文件形式保存。</li><li>Linux不靠扩展名区分文件类型</li><li>Linux所有的存储设备都必须“挂载”之后用户才能使用。</li><li>Windows下的程序不能直接在Linux中安装和运行。</li></ul><p>文件于目录结构</p><ul><li>文件目录是以<code>/</code>为根目录，没有分区的概念，只有将目录实际存储位置进行区分的概念，只在存储位置中发现不同，实际操作并无不同。</li><li>需要学习命令行界面管理系统，需要提前了解Linux的基本概念。</li></ul><div class="hint-container note"><p class="hint-container-title">注释</p><ul><li>FHS（英文：Filesystem Hierarchy Standard 中文：文件系统层次化标准）</li><li>FHS 定义了系统中每个文件夹的用途、所需要的最小构成的文件和目录同时还给出了例外处理与矛盾处理。</li><li>允许使用者改动结构来构建适合自己的目录结构。</li></ul></div><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">/ ,根目录，整个Debian文件系统的起点。</span>
<span class="line">|-- boot/ ,引导Linux内核启动时所需的文件，如内核映像和引导加载程序配置文件等。</span>
<span class="line">|-- dev/ ,设备文件，以管理普通文件一样来管理硬件或驱动程序。</span>
<span class="line">|-- etc/ ,存储系统和软件的配置文件，如网络配置、用户账户、服务等。</span>
<span class="line">|-- home/ ,用户的个人主目录，个人文件夹会在这里生成。</span>
<span class="line">|-- media/ ,挂载外部设备，系统建议用来挂载媒体设备，如USB或光盘等。</span>
<span class="line">|-- mnt/ ,临时挂载目录，用于挂载其他文件系统或额外设备，如U盘、移动硬盘和其他操作系统的分区。</span>
<span class="line">|-- opt/ ,存放第三方额外的软件包。</span>
<span class="line">|-- proc/ ,虚拟文件系统，该目录的数据存放在内存当中，记录运行时的系统进程和内核信息。</span>
<span class="line">|-- root/ ,超级用户的主目录。</span>
<span class="line">|-- run/ ,存储系统运行时的信息，当前登入的yoghurt和运行中的服务。</span>
<span class="line">|-- srv/ ,存放服务相关的数据文件，一些系统服务启动之后，可以在该目录中保存所需要的数据，如WWW服务和web内容</span>
<span class="line">|-- sys/ ,虚拟文件系统，提供访问内核设备、模块、其他内核相关功能的接口。</span>
<span class="line">|-- tmp/ ,存储临时文件，系统重启时文件将会被清除。</span>
<span class="line">|-- usr/ ,系统软件程序和文件，包含非用户手动安装的软件、文档、共享库等，可共享</span>
<span class="line">    |-- bin/ ,普通命令（二进制可执行文件），全部用户都能使用。</span>
<span class="line">    |-- games/，游戏安装目录</span>
<span class="line">    |-- include/</span>
<span class="line">    |-- lib/ ,系统所需的共享库（二进制文件）文件。</span>
<span class="line">	    |-- systemd/system/ ,系统级别的服务文件。</span>
<span class="line">    |-- lib32/ ,系统所需的共享库（二进制文件）文件。</span>
<span class="line">    |-- lib64/ ,系统所需的共享库（二进制文件）文件。</span>
<span class="line">    |-- libexec/</span>
<span class="line">    |-- libx32/</span>
<span class="line">    |-- local/ ,用户手动编译源码程序的应用存放位置。</span>
<span class="line">    |-- sbin/ ,管理员命令，仅限管理员用户使用。</span>
<span class="line">    |-- share/ ,共享文件。</span>
<span class="line">    |-- src/</span>
<span class="line">|-- var/ ,存储经常改变的动态数据文件，如日志、缓存等，不共享。</span>
<span class="line">    |-- backups/</span>
<span class="line">    |-- cache/</span>
<span class="line">    |-- lib/</span>
<span class="line">	    |-- apt/ ,软件包信息。</span>
<span class="line">	    |-- dpkg/ ,软件包信息。</span>
<span class="line">    |-- local/</span>
<span class="line">    |-- run/lock/</span>
<span class="line">    |-- log/</span>
<span class="line">    |-- mail/</span>
<span class="line">    |-- opt/</span>
<span class="line">    |-- run/</span>
<span class="line">    |-- spool/</span>
<span class="line">    |-- tmp/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>工作目录</p><ul><li>当前所在目录。</li></ul><p>绝对路径</p><ul><li>以根目录为起点，描述路径的一种写法，路径描述以<code>/</code>开头。</li><li>案例：<code>/usr/local/bin</code></li></ul><p>相对路径</p><ul><li>以当前工作目录为起点，描述路径的一种写法，路径描述无需以<code>/</code>开头。</li><li><code>./</code>：表示当前路径。</li><li><code>../</code>：表示上一级目录。</li><li><code>../../</code>：表示上上一级目录。</li><li><code>~</code>：表示HOME目录。</li><li>案例：<code>./bin</code>当前路径下，<code>../local/bin</code>上一级路径下。</li></ul></div><h2 id="磁盘分区" tabindex="-1"><a class="header-anchor" href="#磁盘分区"><span>磁盘分区</span></a></h2>`,20)),i("p",null,[l[15]||(l[15]=n("详细总结：")),e(a,{to:"/hardware/Device-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8-%E6%9C%BA%E6%A2%B0%E7%A3%81%E7%9B%98-%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA.html"},{default:s(()=>l[14]||(l[14]=[n("Device-数据存储-机械磁盘-磁盘分区")])),_:1,__:[14]})]),l[42]||(l[42]=t('<ul><li>Linux系统中磁盘管理就是将硬盘通过挂载的方式挂载到Linux文件系统中。</li><li>挂载点 == 盘符</li><li>手动创建以下分区：/（根分区）、swap（交换分区）（不存在盘符，这是给系统内部使用）、</li></ul><h3 id="fdisk分区" tabindex="-1"><a class="header-anchor" href="#fdisk分区"><span>fdisk分区</span></a></h3><h3 id="etc-fstab文件修复" tabindex="-1"><a class="header-anchor" href="#etc-fstab文件修复"><span>/etc/fstab文件修复</span></a></h3><h3 id="分配swap分区" tabindex="-1"><a class="header-anchor" href="#分配swap分区"><span>分配swap分区</span></a></h3><h3 id="磁盘" tabindex="-1"><a class="header-anchor" href="#磁盘"><span>磁盘</span></a></h3><p>需要对磁盘进行合理分区的主要原因是：</p><ol><li>提高系统性能</li></ol><ul><li>将不同类型的文件和数据存储在不同的分区可以提高系统的读写性能。</li><li>例如，将频繁变动的文件（如日志和缓存）和用户数据分开，可以避免对系统核心部分的频繁访问，从而提高整体性能。</li></ul><ol start="2"><li>数据安全与完整性</li></ol><ul><li>将数据分散在不同的分区可以降低因单个分区损坏而导致数据都是的风险。</li><li>例如，如果<code>home</code>分区发生故障，系统管理员可以通过将其替换或修复，而不会影响系统其他分区。</li></ul><ol start="3"><li>管理和维护的便利性</li></ol><ul><li>通过将不同的文件和数据类型放在不同的分区，系统管理员可以更轻松地进行管理和维护。</li><li>例如，如果某个应用程序导致磁盘空间不足，管理员只需查看对应的分区，而不是整个磁盘。</li></ul><ol start="4"><li>灵活性和可扩展性</li></ol><ul><li>随着时间推移，系统可能需要更多的存储空间或进行特定的配置更改。</li><li>通过预先为未来的需求留出空间，或为特定功能创建独立的分区，可以更容易地进行这些更改。</li></ul><ol start="5"><li>备份和迁移的便捷性</li></ol><ul><li>将数据分散在不同的分区可以简化备份和迁移的过程。</li><li>例如，如果只对某个分区进行备份或迁移，而不是整个磁盘，那么这个过程会更快更简单。</li></ul><ol start="6"><li>隔离和安全性</li></ol><ul><li>通过将不同的功能或应用程序放在不同的分区，可以增加隔离性并提高安全性。</li><li>例如，如果某个应用程序受到攻击或出现问题，它可能只影响该应用程序所在的分区，而不是整个系统。</li></ul><p>逻辑分区的存在的意义</p><ul><li>由于MBR仅能保存4个分区的数据信息，如果超过4个，系统允许在额外的硬盘空间存放另一份磁盘分区信息，这就是扩展分区.若将硬盘分成3P+E，则E实际上是告诉系统，磁盘分区表在另外的那份分区表，即扩展分区其实是指向正确的额外分区表。本身扩展分区不能直接使用，还需要额外将扩展分区分成逻辑分区才能使用，因此，用户通过扩展分区就可以使用5个以上的分区了。</li><li>在Windows操作系统中，是先将物理地址分开，再在分区上建立目录.在Windows操作系统中，所有路径都是从盘符开始，如C://program file。</li><li>Linux正好相反，是先有目录，再将物理地址映射到目录中。在Linux操作系统中，所有路径都是从根目录开始。Linux默认可分为3个分区，分别是boot分区、swap分区和根分区。</li></ul><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2>',21)),i("p",null,[l[17]||(l[17]=n("详细总结：")),e(a,{to:"/software/OS-DebianLinux-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"},{default:s(()=>l[16]||(l[16]=[n("OS-DebianLinux-配置文件")])),_:1,__:[16]})]),l[43]||(l[43]=t('<h2 id="终端和命令" tabindex="-1"><a class="header-anchor" href="#终端和命令"><span>终端和命令</span></a></h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h3><p>终端</p><ul><li>即Linux终端（Treminal）。</li><li>一种命令提示符界面。</li><li>以纯“字符”的形式操作系统。</li><li>可以使用各种字符化命令对系统发出操作指令。</li></ul><p>命令</p><ul><li>即Linux程序。</li><li>一个命令就是一个Linux的程序。</li><li>命令没有图形化页面。</li><li>可以通过终端来提供字符化的反馈。</li></ul><p>在Linux中，可执行的文件也进行了分类：</p><ul><li>内置命令：出于效率的考虑，将一些常用命令的解释程序构造在Shell内部。</li><li>外置命令：存放在/bin、/sbin目录下的命令</li><li>实用程序：存放在/usr/bin、/usr/sbin、/usr/share、/usr/local/bin等目录下的实用程序</li><li>用户程序：用户程序经过编译生成可执行文件后，可作为Shell命令运行</li><li>Shell脚本：由Shell语言编写的批处理文件，可作为Shell命令运行</li></ul><p>大多数命令行工具和程序确实是通过包的形式来安装和管理的。</p><ul><li>大多数命令都是包的一部分：确实，大多数你在终端中使用的命令，如ls、cp、mv等，都是某个软件包的一部分。例如，ls、cp和mv命令通常属于coreutils包。</li><li>bash shell：bash shell本身也是一个包。在Debian系统中，这个包通常被称为bash。安装这个包会提供bash命令行解释器。</li><li>系统必备包：有些包被认为是系统必备的，因为它们提供了基本的系统功能。在Debian中，这些包可能被标记为“Essential”。</li><li>非包形式的命令：然而，并不是所有命令都是通过包来安装的。有些命令可能是手动编译安装的，或者是由系统管理员直接放置在系统路径中的。这些命令可能不是任何包的一部分。</li><li>内置命令：另外，有些命令是shell内置的，这意味着它们是shell本身的一部分，而不是单独的包。例如，cd命令是bash shell的内置命令。</li></ul>',10)),i("p",null,[l[19]||(l[19]=n("详细总结：")),e(a,{to:"/software/OS-DebianLinux-%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4.html"},{default:s(()=>l[18]||(l[18]=[n("OS-DebianLinux-终端命令")])),_:1,__:[18]})]),l[44]||(l[44]=t('<div class="hint-container note"><p class="hint-container-title">注释</p><p>如何总结命令？</p><ul><li>命令都属于软件包中的命令，因此需要明白命令属于哪个软件包，去总结软件包，从而整理命令。</li></ul></div><h3 id="终端格式" tabindex="-1"><a class="header-anchor" href="#终端格式"><span>终端格式</span></a></h3><blockquote><p><img src="https://image.dandelioncloud.cn/images/20210728/8ab8a2a7ffc145efa190463e70196cdc.png" alt="图片展示"></p></blockquote><p>示例：root@host01:~#</p><ul><li><code>root</code>：用户名，root为超级用户</li><li><code>@</code>：分隔符</li><li><code>host01</code>：主机名称</li><li><code>~</code>：当前所在目录，默认目录为<code>~</code></li><li><code>\\#</code>：表示当前用户是超级用户，普通用户为<code>$</code></li></ul><h3 id="命令格式" tabindex="-1"><a class="header-anchor" href="#命令格式"><span>命令格式</span></a></h3><p>命令格式：</p><p>命令 [-选项] [参数]</p><p>例子：ls -la /etc</p><p>说明：</p><ul><li>个别命令使用不遵循此格式</li><li>当有多个选项时，可以写在一起</li><li>简化选项与完整选项，-a等于--all</li></ul><h2 id="用户和用户组" tabindex="-1"><a class="header-anchor" href="#用户和用户组"><span>用户和用户组</span></a></h2><p><strong>用户管理简介</strong></p><ul><li><p>对安全性要求越高的计算机越需要建立合理的用户权限等级制度和操作规范</p></li><li><p>Linux 操作系统中主要通过用户配置文件来查看和修改用户信息</p></li><li><p>初始组：用户登入时就立刻拥有这个用户组的相关权限，每个用户的初始组只能有一个，一般就是和这个用户的用户名相同的组名作为这个用户的初始组。</p></li><li><p>附加组：用户可以加入多个其他的用户组，并拥有这些组的权限，附加组可以有多个。</p></li></ul><p>Shell 是 Linux 操作系统的命令解释器，Shell用于将用户的输入传递给Linux系统内核执行相应操作，在 <code>/etc/passwd</code> 当中，有多种Shell可以选择其中之一。</p><h3 id="用户配置" tabindex="-1"><a class="header-anchor" href="#用户配置"><span>用户配置</span></a></h3><p>用户基本信息文件（/etc/passwd）</p><p>用户名称</p><p>密码标志</p><p>UID（用户ID）</p><ul><li>0 超级用户</li><li>1-499 系统用户（伪用户）</li><li>500-65535 普通用户</li></ul><p>GID（用户初始组ID）</p><p>用户说明</p><p>家目录</p><ul><li>普通用户：/home/用户名/</li><li>超级用户：/root/</li></ul><p>登入之后的Shell</p><p>影子文件（/etc/shadow）</p><p>用户名</p><p>加密密码</p><p>密码最后一次修改时间</p><p>密码过期后的宽限天数</p><p>账号失效时间</p><p>保留</p><p>组信息文件（/etc/group）</p><p>组名</p><p>组密码标志</p><p>GID</p><p>组中附加用户</p><p>组密码文件（/etc/gshadow）</p><p>组名</p><p>组密码</p><p>组管理员用户名</p><p>组中附加用户</p><h3 id="用户管理相关文件" tabindex="-1"><a class="header-anchor" href="#用户管理相关文件"><span>用户管理相关文件</span></a></h3><p>用户的家目录</p><ul><li>普通用户：<code>/home/用户名/</code>，所有者和所属组都是此用户，权限是700。</li><li>超级用户：<code>/root/</code>，所有者和所属组都是root用户，权限550。</li></ul><p>用户的邮箱</p><ul><li>/var/spool/mail/用户名/</li></ul><p>用户模板目录</p><ul><li>/etc/skel/</li></ul><h3 id="用户管理命令" tabindex="-1"><a class="header-anchor" href="#用户管理命令"><span>用户管理命令</span></a></h3><h3 id="用户组管理命令" tabindex="-1"><a class="header-anchor" href="#用户组管理命令"><span>用户组管理命令</span></a></h3><h2 id="权限" tabindex="-1"><a class="header-anchor" href="#权限"><span>权限</span></a></h2><h3 id="文件权限查询表" tabindex="-1"><a class="header-anchor" href="#文件权限查询表"><span>文件权限查询表</span></a></h3><p>-rwxr--r--</p><ul><li>将其分为四个区块理解，文件类型（1），u所有者权限（2,3,4），g所属组权限（5,6,7），o其他人权限（8,9,10）</li><li>文件类型表示符号：文件（<code>-</code>），目录（<code>d</code>），软连接文件（<code>l</code>）</li><li>权限表示符号：无权限（<code>-</code>），读（<code>r</code>），写（<code>w</code>），执行（<code>x</code>）</li></ul><h3 id="acl权限" tabindex="-1"><a class="header-anchor" href="#acl权限"><span>ACL权限</span></a></h3><p>简介</p><p>开启</p><p>查看</p><p>设定ACL权限</p><p>最大有效权限</p><p>删除ACL权限</p><p>默认ACL权限</p><p>递归ACL权限</p><h3 id="文件特殊权限" tabindex="-1"><a class="header-anchor" href="#文件特殊权限"><span>文件特殊权限</span></a></h3><h3 id="文件系统属性chattr权限" tabindex="-1"><a class="header-anchor" href="#文件系统属性chattr权限"><span>文件系统属性chattr权限</span></a></h3><h3 id="系统命令sudo权限" tabindex="-1"><a class="header-anchor" href="#系统命令sudo权限"><span>系统命令sudo权限</span></a></h3><h2 id="进程与服务" tabindex="-1"><a class="header-anchor" href="#进程与服务"><span>进程与服务</span></a></h2><h2 id="系统运行级别" tabindex="-1"><a class="header-anchor" href="#系统运行级别"><span>系统运行级别</span></a></h2><ul><li>Linux允许在不同场合分配不同的开机启动程序，称为“运行级别”</li><li>许多程序需要开机启动，在Linux中称为“守护进程”。</li><li>Linux预置7种运行级别（0~6）</li></ul><table><thead><tr><th style="text-align:center;">运行级别</th><th style="text-align:left;">介绍</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:left;">关机</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:left;">单用户模式（即维护模式）</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">3</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">4</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">5</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">6</td><td style="text-align:left;">重启</td></tr></tbody></table><h2 id="用户登录方式" tabindex="-1"><a class="header-anchor" href="#用户登录方式"><span>用户登录方式</span></a></h2><ul><li>Linux支持3种登录方式：命令行登登录、SSH登录、图形界面登录</li></ul>',74)),i("p",null,[l[21]||(l[21]=n("详细总结：")),e(a,{to:"/software/OS-DebianLinux-%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93-%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%96%B9%E5%BC%8F.html"},{default:s(()=>l[20]||(l[20]=[n("OS-DebianLinux-问题总结-用户登录方式")])),_:1,__:[20]})]),l[45]||(l[45]=i("h2",{id:"系统启动过程",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#系统启动过程"},[i("span",null,"系统启动过程")])],-1)),i("p",null,[l[23]||(l[23]=n("详细总结：")),e(a,{to:"/software/OS-DebianLinux-%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93-%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B.html"},{default:s(()=>l[22]||(l[22]=[n("OS-DebianLinux-问题总结-系统启动过程")])),_:1,__:[22]})]),l[46]||(l[46]=t('<h2 id="服务与进程" tabindex="-1"><a class="header-anchor" href="#服务与进程"><span>服务与进程</span></a></h2><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><ul><li><p>系统环境变量是一组由操作系统维护的变量，它们存储了影响程序行为的配置信息。</p></li><li><p>提供程序运行时所需的信息，如路径、配置设置和系统状态。</p></li><li><p>允许程序在不同环境中（如开发、测试、生产）以相同的方式运行。</p></li><li><p>使得用户和程序能够在不修改程序代码的情况下，定制程序的行为。</p></li><li><p>程序在启动时可以读取环境变量来配置自己的行为。</p></li><li><p>程序也可以设置环境变量，但这些设置通常只影响程序的子进程。</p></li></ul><p>常见的环境变量</p><ul><li><code>PATH</code>: 决定了Shell命令的搜索路径。</li><li><code>HOME</code>: 指定用户的主目录。</li><li><code>PWD</code>: 当前工作目录。</li><li><code>USER</code>: 当前登录的用户名。</li><li><code>HOSTNAME</code>: 当前机器的主机名。</li><li><code>LANG</code>/<code>LANGUAGE</code>: 指定系统语言和字符编码。</li><li><code>TMPDIR</code>/<code>TEMP</code>/<code>TMP</code>: 临时文件存放目录。</li></ul><h2 id="日志管理" tabindex="-1"><a class="header-anchor" href="#日志管理"><span>日志管理</span></a></h2><h2 id="启动管理" tabindex="-1"><a class="header-anchor" href="#启动管理"><span>启动管理</span></a></h2><h2 id="备份与修复" tabindex="-1"><a class="header-anchor" href="#备份与修复"><span>备份与修复</span></a></h2><h2 id="软件" tabindex="-1"><a class="header-anchor" href="#软件"><span>软件</span></a></h2><div class="hint-container note"><p class="hint-container-title">注释</p><p>Debian软件包格式的文件扩展名是<code>deb</code>。</p></div><h3 id="程序或软件的组成部分" tabindex="-1"><a class="header-anchor" href="#程序或软件的组成部分"><span>程序或软件的组成部分</span></a></h3><ul><li>可执行文件、库文件、配置文件、数据、帮助文档（非必须）</li></ul><p>可执行文件</p><ul><li>文件一般是可执行的二进制文件，也有shell脚本执行文件，特点是不可变性。</li><li>软件一旦安装, 在它的生命周期中, 这些可执行文件几乎是不怎么改变的, 直到升级到新的版本, 或者被卸载。</li><li>根据不可变性的特点，通过共享来做到多个用户或统一网络中的多台设备中只使用一份可执行文件。</li></ul><p>库文件</p><ul><li>程序执行时依赖的一些动态或静态类库, 如一些<code>dll</code>文件。</li><li>多个应用程序可能使用同一份类库，因此会产生依赖关系。</li><li>在删除或更新类库时有可能会导致依赖的应用程序无法运行或兼容问题。</li></ul><p>配置文件</p><ul><li>文件通常是文本文件。</li><li>特点是具有可变性、不具有共享性。</li><li>主要针对不同用户有自己专属的配置文件。</li></ul><p>数据</p><ul><li>特点是具有可变性。</li><li>数据是比较重要的文件，如日志文件需要定期整理、归档和备份。</li></ul><p>帮助文档（非必须）</p><ul><li>特点是具有高可变性、高共享性，具有不可变性。</li><li>帮助文档通过更新或针对特定版本的应用程序来更改文档内容，因此是几乎不变化的。</li></ul><p>软件的分类</p><ul><li>从系统管理的角度分类：系统软件、应用软件</li><li>系统软件一般是指支撑整个系统运行的必要软件，如shell、磁盘管理工具等。</li><li>应用软件是指运行系统之上提供特定功能的软件，如办公、娱乐、播放器等。</li></ul><h3 id="源代码包" tabindex="-1"><a class="header-anchor" href="#源代码包"><span>源代码包</span></a></h3><ul><li>源码包就是未进行编译、能够看到源代码的程序软件。</li></ul><p>优点和缺点</p><ul><li>开源，可修改源代码，可以自由选择所需的功能。</li><li>软件是编译安装，因此更加适合自己的系统，更加稳定且效率更高。</li><li>卸载方便，只需要直接将安装目录下的文件夹删除即可。</li><li>安装过程步骤较多。</li><li>编译过程时间较长。</li></ul><p>安装</p><ul><li>源码包保存位置：<code>/usr/local/src/</code></li><li>源码包安装位置：<code>/usr/local/</code></li></ul><p>删除</p><ul><li>只需要删除源码包安装的目录即可，不会存在软件卸载后存在残留垃圾文件。</li></ul><h3 id="预构建二进制包" tabindex="-1"><a class="header-anchor" href="#预构建二进制包"><span>预构建二进制包</span></a></h3><ul><li><p>预构建二进制包，就是官方已经将源代码包根据各个系统平台预先编译后的文件包。</p></li><li><p>该包可直接在本地系统中执行可执行文件。</p></li><li><p>仅需要将可执行文件添加到环境变量，以及软件配置文件。</p></li><li><p>二进制包就是已经进行编译过的软件。</p></li><li><p>二进制包可使用 Debian Linux 操作系统中的包管理工具<code>apt</code>进行管理二进制包。</p></li></ul><p>优点和缺点</p><ul><li>包管理系统简单，通过命令实现包的安装、升级、查询、卸载。</li><li>安装速度比源码包安装更快。</li><li>经过编译，无法看源代码。</li><li>功能选择不如源码包灵活。</li><li>包大多存在大量依赖性。</li></ul><h3 id="软件包管理工具" tabindex="-1"><a class="header-anchor" href="#软件包管理工具"><span>软件包管理工具</span></a></h3>',37)),i("ul",null,[l[28]||(l[28]=t("<li><p>Debian 建立一致的自由软件的预编译二进制包并从档案库中分发它们。</p></li><li><p>许多远程镜像站提供了<code>HTTP</code>和<code>FTP</code>的方式来访问“Debian档案库”。</p></li><li><p>Debian 的软件包管理系统是<code>高级软件包工具（APT）</code>。</p></li><li><p>Debian软件包管理系统可以让用户从档案库安装统一设置的<strong>二进制软件包</strong>到系统中，并进行管理，自动解决依赖问题。</p></li><li><p>每个软件包都带有自己的配置脚本。</p></li>",5)),i("li",null,[i("p",null,[l[25]||(l[25]=n("apt软件包管理工具详细总结：")),e(a,{to:"/software/Package-Apt.html"},{default:s(()=>l[24]||(l[24]=[n("Package-Apt")])),_:1,__:[24]})])]),i("li",null,[i("p",null,[l[27]||(l[27]=n("dpkg软件包管理工具详细总结：")),e(a,{to:"/software/Package-Dpkg.html"},{default:s(()=>l[26]||(l[26]=[n("Package-Dpkg")])),_:1,__:[26]})])])]),l[47]||(l[47]=t('<p>注意事项</p><ul><li>在<strong>源文件</strong>中不要包含<code>testing</code>或<code>unstable</code>。</li><li>在<strong>源文件</strong>中不要在<strong>标准的Debian档案库</strong>中混合使用其它<strong>非标准的Debian档案库</strong>。</li><li>不要建立“<code>/etc/apt/preferences</code>”。</li><li>不了解会照成的全部影响，就不要通过配置文件改变软件包管理工具的默认行为。</li><li>不要使用“<code>dpkg -i random_package</code>”安装任何软件包。</li><li>绝不使用“<code>dpkg --force-all -i random_package</code>”安装任何软件包。</li><li>不要删除或修改“<code>/var/lib/dpkg</code>”中的文件。</li><li>不要让从源码安装的程序覆盖系统文件，若必须要覆盖，则请将它们安装到“<code>/usr/local</code>”或“<code>/opt</code>”目录中。</li></ul><h2 id="用户态与内核态" tabindex="-1"><a class="header-anchor" href="#用户态与内核态"><span>用户态与内核态</span></a></h2><div class="hint-container note"><p class="hint-container-title">注释</p><p>用户态与内核态的切换</p><ul><li>当一个用户态的程序需要执行特权操作时，如读写文件、发送网络数据等，它会通过系统调用（或中断）进入内核态。</li><li>执行完系统调用后，控制权会从内核态返回到用户态，程序继续执行。</li></ul><p>这种权限的划分是现代操作系统安全策略的核心部分，确保了操作系统的稳定性和安全性。</p></div><h3 id="用户态" tabindex="-1"><a class="header-anchor" href="#用户态"><span>用户态</span></a></h3><p>定义</p><ul><li>操作系统为普通程序执行设定的一个较低权限的执行环境。在用户态下，程序不能直接访问硬件资源或者执行特权指令。</li></ul><p>特点</p><ul><li>程序运行在用户态时，如果发生错误，如访问非法内存，通常只会导致该程序崩溃，而不会影响整个系统。</li><li>用户态的程序受到操作系统的严格限制，比如不能直接进行I/O操作，不能访问其他程序的内存空间。</li><li>用户态下的程序可以通过系统调用（System Call）请求内核执行某些操作。</li></ul><p>目的</p><ul><li>限制程序的能力，以保护系统资源的完整性和稳定性，防止一个程序的错误或恶意行为影响其他程序或操作系统本身。</li></ul><h3 id="内核态" tabindex="-1"><a class="header-anchor" href="#内核态"><span>内核态</span></a></h3><p>定义</p><ul><li>操作系统内核运行的特权模式，拥有访问硬件资源和执行所有CPU指令的能力。</li></ul><p>特点</p><ul><li>在内核态下运行的代码具有最高的权限，可以直接访问所有的内存空间和硬件设备。</li><li>内核态下的程序错误可能会导致整个系统的崩溃。</li><li>内核态的程序负责管理系统资源，如内存管理、进程调度、设备驱动程序等。</li></ul><p>目的</p><ul><li>为了执行那些只有操作系统才能执行的操作，如低级硬件操作、资源分配等，确保这些操作的安全性和有效性。</li></ul><h2 id="常用快捷键" tabindex="-1"><a class="header-anchor" href="#常用快捷键"><span>常用快捷键</span></a></h2>',19)),i("p",null,[l[30]||(l[30]=n("详细总结：")),e(a,{to:"/software/OS-DebianLinux-%E5%BF%AB%E6%8D%B7%E9%94%AE.html"},{default:s(()=>l[29]||(l[29]=[n("OS-DebianLinux-快捷键")])),_:1,__:[29]})]),l[48]||(l[48]=i("h2",{id:"部署方案",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#部署方案"},[i("span",null,"部署方案")])],-1)),l[49]||(l[49]=i("p",null,"个人文件目录结构和系统目录结构的配合方法。",-1)),i("p",null,[l[32]||(l[32]=n("分区方案：")),e(a,{to:"/software/OS-DebianLinux-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E5%88%86%E5%8C%BA.html"},{default:s(()=>l[31]||(l[31]=[n("OS-DebianLinux-热门推荐-分区")])),_:1,__:[31]})]),i("p",null,[l[34]||(l[34]=n("目录方案：")),e(a,{to:"/software/OS-DebianLinux-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E7%9B%AE%E5%BD%95.html"},{default:s(()=>l[33]||(l[33]=[n("OS-DebianLinux-热门推荐-目录")])),_:1,__:[33]})]),l[50]||(l[50]=i("h2",{id:"问题总结",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#问题总结"},[i("span",null,"问题总结")])],-1)),i("p",null,[l[36]||(l[36]=n("详细总结：")),e(a,{to:"/software/OS-DebianLinux-%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.html"},{default:s(()=>l[35]||(l[35]=[n("OS-DebianLinux-问题总结")])),_:1,__:[35]})])])}const g=p(c,[["render",b]]),E=JSON.parse('{"path":"/software/OS-DebianLinux.html","title":"OS - Debian Linux","lang":"zh-CN","frontmatter":{"title":"OS - Debian Linux","author":"魔术桌","cover":"","category":["软件程序/系统"],"date":"2023-12-15T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： Debian Linux 12 操作系统，多用户、多任务、多线程、非实时的操作系统。 相关信息 外部相关文章 Debian官方文档：https://wiki.debian.org/zh_CN/FrontPage 规范存储库：https://specifications.freedesktop.org/ GNOME桌面功能扩展插件网站： GN...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OS - Debian Linux\\",\\"image\\":[\\"https://image.dandelioncloud.cn/images/20210728/8ab8a2a7ffc145efa190463e70196cdc.png\\"],\\"datePublished\\":\\"2023-12-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/OS-DebianLinux.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"OS - Debian Linux"}],["meta",{"property":"og:description","content":"文章摘要： Debian Linux 12 操作系统，多用户、多任务、多线程、非实时的操作系统。 相关信息 外部相关文章 Debian官方文档：https://wiki.debian.org/zh_CN/FrontPage 规范存储库：https://specifications.freedesktop.org/ GNOME桌面功能扩展插件网站： GN..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://image.dandelioncloud.cn/images/20210728/8ab8a2a7ffc145efa190463e70196cdc.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2023-12-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/OS-DebianLinux.md","excerpt":"<p><strong>文章摘要：</strong> Debian Linux 12 操作系统，多用户、多任务、多线程、非实时的操作系统。</p>\\n"}');export{g as comp,E as data};
