import{_ as a,c as s,a as e,o as t}from"./app-D67BBu3k.js";const p={};function o(i,n){return t(),s("div",null,n[0]||(n[0]=[e(`<p><strong>文章摘要：</strong> 摘要内容。</p><h2 id="spring容器" tabindex="-1"><a class="header-anchor" href="#spring容器"><span>spring容器</span></a></h2><p><code>org.springframework.context.annotation.AnnotationConfigApplicationContext</code></p><blockquote><ul><li>通过注解的方式配置spring容器</li></ul></blockquote><p><code>org.springframework.context.support.ClassPathXmlApplicationContext</code></p><blockquote><ul><li>通过xml文件来配置spring容器</li></ul></blockquote><p>步骤</p><blockquote><ol><li>创建spring容器</li><li>配置spring容器</li><li>启动spring容器</li></ol></blockquote><p>案例</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>magictable<span class="token punctuation">.</span>service<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">SpringConfig</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ages<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 创建spring容器，Java配置类</span></span>
<span class="line">        <span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 将用作配置类的类名注册到spring容器中，即spring容器将到该配置类中读取相关注解</span></span>
<span class="line">        applicationContext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">SpringConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 启动spring容器</span></span>
<span class="line">        applicationContext<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编写配置类" tabindex="-1"><a class="header-anchor" href="#编写配置类"><span>编写配置类</span></a></h2><p><code>@ComponentScan(“&lt;包路径&gt;”)</code></p><blockquote><ul><li>扫描包路径。</li><li><code>org.springframework.context.annotation.ComponentScan</code></li></ul></blockquote><h2 id="标识类为bean对象" tabindex="-1"><a class="header-anchor" href="#标识类为bean对象"><span>标识类为Bean对象</span></a></h2><p>在一个类上一行上编写<code>@Component</code>注解，将由配置文件中的扫描包路径读取并注册到spring容器中。</p><h2 id="获取bean对象" tabindex="-1"><a class="header-anchor" href="#获取bean对象"><span>获取Bean对象</span></a></h2><blockquote><ul><li><code>applicationContext.getBean(&lt;类名&gt;.class)</code>：从spring容器中获取对象。</li></ul></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,18)]))}const l=a(p,[["render",o]]),r=JSON.parse('{"path":"/software/Library-Maven-SpringFramework6-spring%E5%AE%B9%E5%99%A8.html","title":"Library - Maven - SpringFramework 6 - spring容器","lang":"zh-CN","frontmatter":{"title":"Library - Maven - SpringFramework 6 - spring容器","author":"魔术桌","cover":"","category":["软件程序/类库"],"date":"2024-12-04T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： 摘要内容。 spring容器 org.springframework.context.annotation.AnnotationConfigApplicationContext 通过注解的方式配置spring容器 org.springframework.context.support.ClassPathXmlApplicationConte...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Library - Maven - SpringFramework 6 - spring容器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-04T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Library-Maven-SpringFramework6-spring%E5%AE%B9%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Library - Maven - SpringFramework 6 - spring容器"}],["meta",{"property":"og:description","content":"文章摘要： 摘要内容。 spring容器 org.springframework.context.annotation.AnnotationConfigApplicationContext 通过注解的方式配置spring容器 org.springframework.context.support.ClassPathXmlApplicationConte..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-12-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Library-Maven-SpringFramework6-spring容器.md","excerpt":"<p><strong>文章摘要：</strong> 摘要内容。</p>\\n"}');export{l as comp,r as data};
