import{_ as e,c as o,a as r,o as n}from"./app-D67BBu3k.js";const g={};function c(t,a){return n(),o("div",null,a[0]||(a[0]=[r('<p><strong>文章摘要：</strong> 提供对对象管理组织（Object Management Group, OMG）定义的几种标准的支持。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>提供对对象管理组织（Object Management Group, OMG）定义的几种标准的支持。</li><li>尤其是用于分布式对象计算的CORBA（Common Object Request Broker Architecture）。</li></ul><p>主要功能</p><ul><li><strong>CORBA支持</strong>：提供了一系列接口和类，用于实现CORBA分布式计算模型，包括ORB（Object Request Broker）的接口、IDL（Interface Definition Language）映射到Java的类、以及实现ORB服务的类。</li><li><strong>ORB核心功能</strong>：包括ORB初始化、对象引用解析、请求发送和接收等。</li><li><strong>IDL到Java映射</strong>：定义了如何将IDL定义的接口和服务映射到Java语言中的接口和类。</li><li><strong>服务</strong>：提供了一些CORBA服务实现，如命名服务、事件服务、事务服务等。</li></ul><p>注意事项</p><ul><li><strong>兼容性</strong>：由于CORBA技术在某些领域已经被其他技术（如Web服务）所取代，<code>org.omg</code> 包中的某些部分可能在未来的Java版本中不被支持。</li><li><strong>复杂性</strong>：CORBA应用程序的编写和部署通常比其他分布式计算技术更为复杂。</li><li><strong>性能</strong>：CORBA调用可能会引入额外的性能开销，尤其是在网络延迟较高的环境中。</li></ul><p>适用场景</p><ul><li><strong>遗留系统</strong>：对于需要维护或与旧的CORBA系统进行互操作的遗留系统，<code>org.omg</code> 包提供了必要的工具和API。</li><li><strong>分布式系统</strong>：在需要构建分布式对象系统，且其他技术（如RMI、JMS、Web服务）不适用的情况下，可以使用<code>org.omg</code> 包来实现。</li><li><strong>特定的行业应用</strong>：某些行业（如电信、金融）可能仍然在使用基于CORBA的技术，因此在这些领域可能会有使用场景。</li></ul><h2 id="org-omg-corba" tabindex="-1"><a class="header-anchor" href="#org-omg-corba"><span><code>org.omg.CORBA</code></span></a></h2><p>提供 OMG CORBA API 到 JavaTM 的映射 编程语言，包括 class ORB ，该类的实现使程序员可以将其用作功能齐全的对象请求代理 （ORB）。</p><h2 id="org-omg-corba-2-3" tabindex="-1"><a class="header-anchor" href="#org-omg-corba-2-3"><span><code>org.omg.CORBA_2_3</code></span></a></h2><p>CORBA_2_3 软件包定义了对 Java Standard Edition 6 中现有 CORBA 接口的添加。这些更改发生在 OMG 定义的 CORBA API 的最新修订版中。新方法已添加到从 CORBA 包中的相应接口派生的接口中。这提供了向后兼容性并避免了中断 JCK 测试。</p><h2 id="org-omg-corba-2-3-portable" tabindex="-1"><a class="header-anchor" href="#org-omg-corba-2-3-portable"><span><code>org.omg.CORBA_2_3.portable</code></span></a></h2><p>提供用于值类型的输入和输出的方法，并包含对 <code>org/omg/CORBA/portable</code> 软件包的其他更新。</p><h2 id="org-omg-corba-dynanypackage" tabindex="-1"><a class="header-anchor" href="#org-omg-corba-dynanypackage"><span><code>org.omg.CORBA.DynAnyPackage</code></span></a></h2><p>提供用于 <code>DynAny</code> 接口的异常（<code>InvalidValue</code>、 <code>Invalid</code>、<code>InvalidSeq</code> 和 <code>TypeMismatch） 的 Gan Mis</code>。</p><h2 id="org-omg-corba-orbpackage" tabindex="-1"><a class="header-anchor" href="#org-omg-corba-orbpackage"><span><code>org.omg.CORBA.ORBPackage</code></span></a></h2><p>提供异常 <code>InvalidName</code>，该异常由方法 <code>ORB.resolve_initial_references</code> 以及异常 <code>InconsistentTypeCode</code>，该异常由 ORB 类中的 Dynamic Any 创建方法抛出。</p><h2 id="org-omg-corba-portable" tabindex="-1"><a class="header-anchor" href="#org-omg-corba-portable"><span><code>org.omg.CORBA.portable</code></span></a></h2><p>提供可移植性层，即一组 ORB API，使一个供应商生成的代码能够在另一个供应商的 ORB 上运行。</p><h2 id="org-omg-corba-tyepcodepackage" tabindex="-1"><a class="header-anchor" href="#org-omg-corba-tyepcodepackage"><span><code>org.omg.CORBA.TyepCodePackage</code></span></a></h2><p>提供用户定义的异常 <code>BadKind</code> 和 <code>Bounds</code>，它们由 <code>TypeCode</code> 类中的方法引发。</p><h2 id="org-omg-cosnaming" tabindex="-1"><a class="header-anchor" href="#org-omg-cosnaming"><span><code>org.omg.CosNaming</code></span></a></h2><p>为 Java IDL 提供命名服务。</p><h2 id="org-omg-cosnaming-namingcontextextpackage" tabindex="-1"><a class="header-anchor" href="#org-omg-cosnaming-namingcontextextpackage"><span><code>org.omg.CosNaming.NamingContextExtPackage</code></span></a></h2><p>此包包含以下类，这些类用于 org.omg.CosNaming.NamingContextExt :</p><h2 id="org-omg-cosnaming-namingcontextpackage" tabindex="-1"><a class="header-anchor" href="#org-omg-cosnaming-namingcontextpackage"><span><code>org.omg.CosNaming.NamingContextPackage</code></span></a></h2><p>此包包含 org.omg.CosNaming 包。</p><h2 id="org-omg-dynamic" tabindex="-1"><a class="header-anchor" href="#org-omg-dynamic"><span><code>org.omg.Dynamic</code></span></a></h2><p>此软件包包含在 OMG Portable 中指定的 Dynamic 模块 拦截器规范 / <a href="http://cgi.omg.org/cgi-bin/doc?ptc/2000-08-06" target="_blank" rel="noopener noreferrer">http://cgi.omg.org/cgi-bin/doc?ptc/2000-08-06</a>，第 21.9 节。</p><h2 id="org-omg-dynamicany" tabindex="-1"><a class="header-anchor" href="#org-omg-dynamicany"><span><code>org.omg.DynamicAny</code></span></a></h2><p>提供类和接口，允许在运行时遍历与 <code>any</code> 关联的数据值，并提取数据值的基元成分。</p><h2 id="org-omg-dynamicany-dynanyfactorypackage" tabindex="-1"><a class="header-anchor" href="#org-omg-dynamicany-dynanyfactorypackage"><span><code>org.omg.DynamicAny.DynAnyFactoryPackage</code></span></a></h2><p>此包包含来自 DynAnyFactory 接口的 DynamicAny OMG 中指定的模块_通用对象请求代理：体系结构和规范_， <a href="http://cgi.omg.org/cgi-bin/doc?formal/99-10-07" target="_blank" rel="noopener noreferrer">http://cgi.omg.org/cgi-bin/doc?formal/99-10-07</a>， 第 9.2.2 节.</p><h2 id="org-omg-dynamicany-dynanypackage" tabindex="-1"><a class="header-anchor" href="#org-omg-dynamicany-dynanypackage"><span><code>org.omg.DynamicAny.DynAnyPackage</code></span></a></h2><p>此包包含来自 DynAny OMG 中指定的 DynamicAny 模块_的接口通用对象请求代理：体系结构和规范_， <a href="http://cgi.omg.org/cgi-bin/doc?formal/99-10-07" target="_blank" rel="noopener noreferrer">http://cgi.omg.org/cgi-bin/doc?formal/99-10-07</a>，第 9.2 节。</p><h2 id="org-omg-iop" tabindex="-1"><a class="header-anchor" href="#org-omg-iop"><span><code>org.omg.IOP</code></span></a></h2><p>此包包含在 OMG 文档中指定的 IOP 模块 <em>通用对象请求代理：体系结构和规范</em>， <a href="http://cgi.omg.org/cgi-bin/doc?formal/99-10-07" target="_blank" rel="noopener noreferrer">http://cgi.omg.org/cgi-bin/doc?formal/99-10-07</a>，第 13.6 节。</p><h2 id="org-omg-iop-codecfactorypackage" tabindex="-1"><a class="header-anchor" href="#org-omg-iop-codecfactorypackage"><span><code>org.omg.IOP.CodecFactoryPackage</code></span></a></h2><p>此包包含在 IOP：：CodeFactory 接口中指定的异常（作为 Portable Interceptors 规范的一部分）。</p><h2 id="org-omg-iop-codecpackage" tabindex="-1"><a class="header-anchor" href="#org-omg-iop-codecpackage"><span><code>org.omg.IOP.CodecPackage</code></span></a></h2><p>此包是根据 IOP：：Codec IDL 接口定义生成的。</p><h2 id="org-omg-messaging" tabindex="-1"><a class="header-anchor" href="#org-omg-messaging"><span><code>org.omg.Messaging</code></span></a></h2><p>此软件包包含在 OMG CORBA 中指定的 Messaging 模块 消息传递规范、 <a href="http://cgi.omg.org/cgi-bin/doc?formal/99-10-07" target="_blank" rel="noopener noreferrer">http://cgi.omg.org/cgi-bin/doc?formal/99-10-07</a>。</p><h2 id="org-omg-portableinterceptor" tabindex="-1"><a class="header-anchor" href="#org-omg-portableinterceptor"><span><code>org.omg.PortableInterceptor</code></span></a></h2><p>提供一种机制来注册 ORB 钩子，ORB 服务可以通过该机制拦截 ORB 的正常执行流。</p><h2 id="org-omg-portableinterceptor-orbinitinfopackage" tabindex="-1"><a class="header-anchor" href="#org-omg-portableinterceptor-orbinitinfopackage"><span><code>org.omg.PortableInterceptor.ORBInitInfoPackage</code></span></a></h2><p>此包包含来自 ORBInitInfo OMG 中指定的 PortableInterceptor 模块的本地接口 便携式拦截器规范 / <a href="http://cgi.omg.org/cgi-bin/doc?ptc/2000-08-06" target="_blank" rel="noopener noreferrer">http://cgi.omg.org/cgi-bin/doc?ptc/2000-08-06</a>， 节 21.7.2.</p><h2 id="org-omg-portableserver" tabindex="-1"><a class="header-anchor" href="#org-omg-portableserver"><span><code>org.omg.PortableServer</code></span></a></h2><p>提供类和接口，使应用程序的服务器端在多供应商 ORB 之间可移植。</p><h2 id="org-omg-portableserver-currentpackage" tabindex="-1"><a class="header-anchor" href="#org-omg-portableserver-currentpackage"><span><code>org.omg.PortableServer.CurrentPackage</code></span></a></h2><p>为方法实现提供对调用该方法的对象标识的访问权限。</p><h2 id="org-omg-portableserver-poamanagerpackage" tabindex="-1"><a class="header-anchor" href="#org-omg-portableserver-poamanagerpackage"><span><code>org.omg.PortableServer.POAManagerPackage</code></span></a></h2><p>封装与其关联的 POA 的处理状态。</p><h2 id="org-omg-portableserver-poapackage" tabindex="-1"><a class="header-anchor" href="#org-omg-portableserver-poapackage"><span><code>org.omg.PortableServer.POAPackage</code></span></a></h2><p>允许程序员构建可在不同 ORB 产品之间移植的对象实现。</p><h2 id="org-omg-portableserver-portable" tabindex="-1"><a class="header-anchor" href="#org-omg-portableserver-portable"><span><code>org.omg.PortableServer.portable</code></span></a></h2><p>提供类和接口，使应用程序的服务器端在多供应商 ORB 之间可移植。</p><h2 id="org-omg-portableserver-servantlocatorpackage" tabindex="-1"><a class="header-anchor" href="#org-omg-portableserver-servantlocatorpackage"><span><code>org.omg.PortableServer.ServantLocatorPackage</code></span></a></h2><p>提供用于查找 Servant 的类和接口。</p><h2 id="org-omg-sendingcontext" tabindex="-1"><a class="header-anchor" href="#org-omg-sendingcontext"><span><code>org.omg.SendingContext</code></span></a></h2><p>支持值类型的封送处理。</p><h2 id="org-omg-stub-java-rmi" tabindex="-1"><a class="header-anchor" href="#org-omg-stub-java-rmi"><span><code>org.omg.stub.java.rmi</code></span></a></h2><p>包含 Remote 类型的 RMI-IIOP 存根，这些类型出现在 java.rmi 包。</p>',66)]))}const d=e(g,[["render",c]]),i=JSON.parse('{"path":"/software/Language-Java-JavaSE-API-%E3%80%8Corg.omg%E3%80%8D.html","title":"Language - Java - Java SE - API - 「org.omg」","lang":"zh-CN","frontmatter":{"title":"Language - Java - Java SE - API - 「org.omg」","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2024-12-24T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： 提供对对象管理组织（Object Management Group, OMG）定义的几种标准的支持。 简介 简要说明 提供对对象管理组织（Object Management Group, OMG）定义的几种标准的支持。 尤其是用于分布式对象计算的CORBA（Common Object Request Broker Architecture）...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - Java - Java SE - API - 「org.omg」\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-Java-JavaSE-API-%E3%80%8Corg.omg%E3%80%8D.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - Java - Java SE - API - 「org.omg」"}],["meta",{"property":"og:description","content":"文章摘要： 提供对对象管理组织（Object Management Group, OMG）定义的几种标准的支持。 简介 简要说明 提供对对象管理组织（Object Management Group, OMG）定义的几种标准的支持。 尤其是用于分布式对象计算的CORBA（Common Object Request Broker Architecture）..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-12-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-Java-JavaSE-API-「org.omg」.md","excerpt":"<p><strong>文章摘要：</strong> 提供对对象管理组织（Object Management Group, OMG）定义的几种标准的支持。</p>\\n"}');export{d as comp,i as data};
