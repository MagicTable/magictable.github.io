import{_ as s,c as d,a as r,b as e,d as l,e as a,w as i,r as o,o as g}from"./app-D67BBu3k.js";const u={};function p(c,t){const n=o("RouteLink");return g(),d("div",null,[t[12]||(t[12]=r('<p><strong>文章摘要：</strong> 结构化查询语言（Structured Query Language），简称SQL。是一种用于特殊目的的编程语言，用于存取数据以及查询、更新和管理关系数据库系统。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>SQL中的注释<strong>不要</strong>使用<code>#</code>作为单行注释，这会导致数据迁移时导致错误。</li><li>本文章命令中的<code>[ ]</code>括起来的表示可选的内容。</li><li>在使用语法时需要时刻确定自己所在的“数据库”、再给出具体的“表”来查数据。</li><li>查询的语法比较常用，且比较复杂，查询与“添加、修改、删除”的语法分开记忆。</li><li>字符串、日期类型、数据中间有空格，都需要将数据包含在引号中。</li></ul></div><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>结构化查询语言（Structured Query Language），简称SQL。</li><li>是一种用于特殊目的的编程语言，用于存取数据以及查询、更新和管理关系数据库系统。</li><li>SQL是所有关系型数据库的统一操作规范。</li></ul><p>主要功能</p><ul><li><strong>数据查询</strong>：允许用户从数据库中检索数据。</li><li><strong>数据操作</strong>：可以插入、更新和删除数据库中的记录。</li><li><strong>数据定义</strong>：用于创建、修改和删除数据库中的表格和其他对象。</li><li><strong>数据控制</strong>：提供权限和访问控制，以保护数据库中的数据。</li><li><strong>事务管理</strong>：支持事务，确保数据库操作的原子性、一致性、隔离性和持久性（ACID属性）。</li></ul><p>注意事项</p><ul><li><strong>安全性</strong>：编写SQL查询时要注意防止SQL注入攻击，确保数据安全。</li><li><strong>性能优化</strong>：复杂的查询可能会影响数据库性能，应优化SQL语句和数据库结构。</li><li><strong>数据完整性</strong>：在设计数据库时，应确保数据的完整性和一致性。</li><li><strong>标准遵从性</strong>：不同的数据库系统可能有不同的SQL方言，应了解所使用系统的特定语法和功能。</li></ul><p>适用场景</p><ul><li><strong>数据管理</strong>：在企业和组织中管理大量数据。</li><li><strong>数据分析</strong>：进行数据分析和报告，支持决策制定。</li><li><strong>应用程序开发</strong>：为需要数据存储和检索的应用程序提供后端支持。</li><li><strong>网站开发</strong>：管理网站后端数据库，如用户信息、内容管理等。</li><li><strong>数据科学</strong>：在数据科学项目中，用于数据清洗、准备和探索性数据分析。</li><li><strong>商业智能</strong>：构建商业智能报告和仪表板，以监控业务关键指标。</li></ul><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><ul><li><code>数据</code>写在数据库中的<code>表</code>中。</li><li><code>数据库</code>和<code>表</code>是<code>数据</code>的载体。</li></ul><h2 id="通用语法" tabindex="-1"><a class="header-anchor" href="#通用语法"><span>通用语法</span></a></h2><ul><li>可以单行或多行书写，以分号<code>;</code>表示一句SQL的结尾。</li><li>可以使用空格和缩进来增强语句的可读性。</li><li>不区分大小写，关键字建议使用大写。</li></ul><h2 id="注释格式" tabindex="-1"><a class="header-anchor" href="#注释格式"><span>注释格式</span></a></h2><ul><li>单行注释：<code>-- 注释内容</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ul><h2 id="对象" tabindex="-1"><a class="header-anchor" href="#对象"><span>对象</span></a></h2><table><thead><tr><th style="text-align:center;">数据库对象</th><th style="text-align:center;">对应关键字</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">表</td><td style="text-align:center;">table</td><td style="text-align:left;">- 表是存储数据的逻辑单元。<br>- 以行和列的形式存在。<br>- 列是字段，行是记录。</td></tr><tr><td style="text-align:center;">数据字典</td><td style="text-align:center;"></td><td style="text-align:left;">- 系统表，存放数据库相关的表。<br>- 内容通常由数据库系统维护。<br>- 程序员通常不该手动修改表和数据。</td></tr><tr><td style="text-align:center;">约束</td><td style="text-align:center;">constraint</td><td style="text-align:left;">- 执行数据校验的规则。<br>- 用于保证数据完整性的规则。</td></tr><tr><td style="text-align:center;">视图</td><td style="text-align:center;">view</td><td style="text-align:left;">- 一个或多个数据表的逻辑显示。<br>- 视图不存储数据。</td></tr><tr><td style="text-align:center;">索引</td><td style="text-align:center;">index</td><td style="text-align:left;">- 用于提高查询性能。<br>- 类似书的目录。</td></tr><tr><td style="text-align:center;">函数</td><td style="text-align:center;">function</td><td style="text-align:left;">- 用于完成一次特定的计算。<br>- 具有一个返回值。</td></tr><tr><td style="text-align:center;">存储过程</td><td style="text-align:center;">procedure</td><td style="text-align:left;">- 用于完成一次完整的业务逻辑。<br>- 没有返回值。<br>- 但可以同传出参数将多个值传给调用环境。</td></tr><tr><td style="text-align:center;">触发器</td><td style="text-align:center;">trigger</td><td style="text-align:left;">- 相当于一个事件监听器。<br>- 当数据库发生特定的事件后，触发器被触发完成相应的处理。</td></tr></tbody></table><h2 id="sql语句和语法" tabindex="-1"><a class="header-anchor" href="#sql语句和语法"><span>SQL语句和语法</span></a></h2>',20)),e("p",null,[t[1]||(t[1]=l("详细总结：")),a(n,{to:"/software/Language-SQL-%E8%AF%AD%E5%8F%A5%E8%AF%AD%E6%B3%95.html"},{default:i(()=>t[0]||(t[0]=[l("Language-SQL-语句语法")])),_:1,__:[0]})]),t[13]||(t[13]=r('<h3 id="数据-定义语言-ddl" tabindex="-1"><a class="header-anchor" href="#数据-定义语言-ddl"><span>数据 - 定义语言（DDL）</span></a></h3><ul><li>数据定义语言</li><li>用于定义数据库对象（数据库、表、字段）。</li><li>主要针对<code>数据库</code>、<code>表</code>、<code>字段</code>进行增、删、改、查的操作命令。</li><li><code>字段</code>是表的每列数据的标识。</li><li>这些不是实际真正存储的数据信息，此处不操作实际存储的数据。</li></ul><h3 id="数据-操作语言-dml" tabindex="-1"><a class="header-anchor" href="#数据-操作语言-dml"><span>数据 - 操作语言（DML）</span></a></h3><ul><li>数据操作语言</li><li>用于对表的<code>数据</code>进行增加、删除、修改的操作操作命令。</li><li>提示：此处没有查询命令。</li><li>需要根据已经定义创建完的数据库、表、表中的字段后，再进行操作的。</li></ul><h3 id="数据-查询语言-dql" tabindex="-1"><a class="header-anchor" href="#数据-查询语言-dql"><span>数据 - 查询语言（DQL）</span></a></h3><ul><li>数据查询语言</li><li>用于查询数据库表中的数据</li></ul><h3 id="权限-控制语言-dcl" tabindex="-1"><a class="header-anchor" href="#权限-控制语言-dcl"><span>权限 - 控制语言（DCL）</span></a></h3><ul><li>用于管理数据库用户、控制数据库的访问权限。</li></ul><h3 id="事务-控制语言-tct" tabindex="-1"><a class="header-anchor" href="#事务-控制语言-tct"><span>事务 - 控制语言（TCT）</span></a></h3><ul><li>用于控制SQL执行的提交和回滚。</li><li><strong>原子性</strong>：事务是不可分割的最小单元，要么全部成功，要么全部失败。</li><li><strong>一致性</strong>：事务完成时，必须使所有的数据都保持一致状态。</li><li><strong>隔离性</strong>：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。</li><li><strong>持久性</strong>：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。</li></ul><p>事务产生的问题</p><ul><li><strong>脏读（dirty read）</strong>：当一个事务读取另一个事务尚未提交的修改时，产生脏读。</li><li><strong>不可重复读（nonrepeatable read）</strong>：同一个查询在同一个事务中多次进行，由于其他提交事务所做的修改或删除，每次返回不同的结果集，此时发生不可重复读。</li><li><strong>幻读（phantom read）</strong>：同一个查询在同一事务中多次进行，由于其他提交事务所做的插入或删除操作，每次返回不同的结果集，此时返回幻读。</li></ul><p>事务的隔离界别</p><ul><li><strong>Read Uncommitted（未提交读）</strong>：事务中的修改，即使没有提交，对其他事务也是可见的。</li><li><strong>Read Committed（提交读）</strong>：一个事务只能看见已经提交的事务所做的修改。</li><li><strong>Repeatable Read（重复读）</strong>：在同一事务中，查询同一个记录会返回相同的结果，即使在这个事务中其他地方已经修改过这个记录。</li><li><strong>Serialize（串行化）</strong>：所有事务依次逐个执行，这样每个事务都感觉不到其他事务的存在。</li></ul><table><thead><tr><th style="text-align:left;">隔离级别</th><th style="text-align:center;">脏读</th><th style="text-align:center;">不可重复读</th><th style="text-align:center;">幻读</th><th style="text-align:center;">加锁读</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Read Uncommitted</code>（未提交读）</td><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;">不加锁</td></tr><tr><td style="text-align:left;"><code>Read Committed</code>（提交读）</td><td style="text-align:center;"></td><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;">不加锁</td></tr><tr><td style="text-align:left;"><code>Repeatable Read</code>（重复读）</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">不加锁</td></tr><tr><td style="text-align:left;"><code>Serialize</code>（串行化）</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">加锁</td></tr></tbody></table><h2 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h2>',16)),e("p",null,[t[3]||(t[3]=l("详细总结：")),a(n,{to:"/software/Language-SQL-%E8%BF%90%E7%AE%97%E7%AC%A6.html"},{default:i(()=>t[2]||(t[2]=[l("Language-SQL-运算符")])),_:1,__:[2]})]),t[14]||(t[14]=e("h2",{id:"数据类型",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据类型"},[e("span",null,"数据类型")])],-1)),e("p",null,[t[5]||(t[5]=l("详细总结：")),a(n,{to:"/software/Language-SQL-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"},{default:i(()=>t[4]||(t[4]=[l("Language-SQL-数据类型")])),_:1,__:[4]})]),t[15]||(t[15]=e("h2",{id:"约束",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#约束"},[e("span",null,"约束")])],-1)),t[16]||(t[16]=e("ul",null,[e("li",null,"约束作用于表中字段上的规则。"),e("li",null,"用于限制存储在表中的数据。"),e("li",null,"保证数据库中数据的正确性、有效性和完整性。")],-1)),e("p",null,[t[7]||(t[7]=l("详细总结：")),a(n,{to:"/software/Language-SQL-%E7%BA%A6%E6%9D%9F.html"},{default:i(()=>t[6]||(t[6]=[l("Language-SQL-约束")])),_:1,__:[6]})]),t[17]||(t[17]=e("h2",{id:"权限",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#权限"},[e("span",null,"权限")])],-1)),t[18]||(t[18]=e("ul",null,[e("li",null,"权限管理是数据库管理系统（DBMS）中非常重要的一个方面，它确保了数据库的安全性、完整性和一致性。")],-1)),e("p",null,[t[9]||(t[9]=l("详细总结：")),a(n,{to:"/software/Language-SQL-%E6%9D%83%E9%99%90.html"},{default:i(()=>t[8]||(t[8]=[l("Language-SQL-权限")])),_:1,__:[8]})]),t[19]||(t[19]=e("h2",{id:"函数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#函数"},[e("span",null,"函数")])],-1)),t[20]||(t[20]=e("ul",null,[e("li",null,"提高代码重用性和隐藏实现细节。"),e("li",null,"函数即别人封装好的模板代码。")],-1)),e("p",null,[t[11]||(t[11]=l("详细总结：")),a(n,{to:"/software/Language-SQL-%E5%87%BD%E6%95%B0.html"},{default:i(()=>t[10]||(t[10]=[l("Language-SQL-函数")])),_:1,__:[10]})]),t[21]||(t[21]=r('<h2 id="字符集" tabindex="-1"><a class="header-anchor" href="#字符集"><span>字符集</span></a></h2><ul><li></li></ul><h2 id="校验规则" tabindex="-1"><a class="header-anchor" href="#校验规则"><span>校验规则</span></a></h2><ul><li></li></ul><h2 id="索引" tabindex="-1"><a class="header-anchor" href="#索引"><span>索引</span></a></h2><ul><li>数据库索引是一种数据结构。</li><li>用于帮助数据库高效地执行查询操作。（类似于书籍的目录，快速定位到想要查找的信息）</li></ul><p>优点</p><ul><li>提高查询性能。</li><li>保证数据的唯一性。</li><li>加速排序和分组操作。</li></ul><p>缺点</p><ul><li>降低写入性能，因为索引需要更新。</li><li>占用额外的存储空间。</li><li>增加数据库的维护复杂度。</li></ul><p>作用</p><ul><li><strong>提高查询速度</strong>：通过索引，数据库可以快速定位到数据行，而不需要扫描整个表。</li><li><strong>确保数据的唯一性</strong>：唯一索引可以保证表中某一列或列组合的数据是唯一的。</li><li><strong>帮助排序和分组</strong>：索引可以存储数据的排序顺序，从而加快排序和分组操作。</li></ul><p>注意事项</p><ul><li><strong>选择性</strong>：为高选择性的列创建索引，即列中具有大量唯一值的列。</li><li><strong>列顺序</strong>：在复合索引中，根据查询条件将最常使用的列放在索引的前面。</li><li><strong>维护成本</strong>：索引可以提高查询速度，但也会增加插入、更新和删除操作的成本。</li><li><strong>空间占用</strong>：索引需要额外的磁盘空间来存储。</li><li><strong>性能监控</strong>：定期检查索引的性能，必要时进行优化或重建。</li></ul><p>索引的类型</p><ul><li><strong>B-Tree索引</strong>：最常用的索引类型，适用于各种查询类型。</li><li><strong>哈希索引</strong>：基于哈希表实现，适用于精确匹配查询。</li><li><strong>全文索引</strong>：用于文本搜索，可以快速查找文本中的关键词。</li><li><strong>空间索引</strong>：用于地理空间数据的搜索。</li></ul>',16))])}const x=s(u,[["render",p]]),m=JSON.parse('{"path":"/software/Language-SQL.html","title":"Language - SQL","lang":"zh-CN","frontmatter":{"title":"Language - SQL","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2024-04-20T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： 结构化查询语言（Structured Query Language），简称SQL。是一种用于特殊目的的编程语言，用于存取数据以及查询、更新和管理关系数据库系统。 提示 SQL中的注释不要使用#作为单行注释，这会导致数据迁移时导致错误。 本文章命令中的[ ]括起来的表示可选的内容。 在使用语法时需要时刻确定自己所在的“数据库”、再给出具体的“...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - SQL\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-SQL.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - SQL"}],["meta",{"property":"og:description","content":"文章摘要： 结构化查询语言（Structured Query Language），简称SQL。是一种用于特殊目的的编程语言，用于存取数据以及查询、更新和管理关系数据库系统。 提示 SQL中的注释不要使用#作为单行注释，这会导致数据迁移时导致错误。 本文章命令中的[ ]括起来的表示可选的内容。 在使用语法时需要时刻确定自己所在的“数据库”、再给出具体的“..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-SQL.md","excerpt":"<p><strong>文章摘要：</strong> 结构化查询语言（Structured Query Language），简称SQL。是一种用于特殊目的的编程语言，用于存取数据以及查询、更新和管理关系数据库系统。</p>\\n"}');export{x as comp,m as data};
