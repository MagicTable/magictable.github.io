import{_ as d,c as i,a,b as t,d as l,e as s,w as r,r as g,o}from"./app-D67BBu3k.js";const y={},f={style:{"text-align":"left"}};function x(p,e){const n=g("RouteLink");return o(),i("div",null,[e[12]||(e[12]=a('<p><strong>文章摘要：</strong> 摘要内容。</p><h2 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:left;">加（求和）</td><td style="text-align:left;">x + y</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:left;">减（求差）</td><td style="text-align:left;">x - y</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:left;">乘（求积）</td><td style="text-align:left;">x * y</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:left;">除(取整)</td><td style="text-align:left;">x / y</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:left;">模(取余)</td><td style="text-align:left;">x % y</td></tr></tbody></table><h2 id="比较运算符" tabindex="-1"><a class="header-anchor" href="#比较运算符"><span>比较运算符</span></a></h2><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:left;">=</td><td style="text-align:left;">等于</td><td style="text-align:left;">A = 1</td></tr><tr><td style="text-align:left;">&lt;&gt; 或 !=</td><td style="text-align:left;">不等</td><td style="text-align:left;">A != 1</td></tr><tr><td style="text-align:left;">&gt;</td><td style="text-align:left;">大于</td><td style="text-align:left;">A &gt; 1</td></tr><tr><td style="text-align:left;">&lt;</td><td style="text-align:left;">小于</td><td style="text-align:left;">A &lt; 1</td></tr><tr><td style="text-align:left;">&gt;=</td><td style="text-align:left;">大于等于</td><td style="text-align:left;">A &gt;= 1</td></tr><tr><td style="text-align:left;">&lt;=</td><td style="text-align:left;">小于等于</td><td style="text-align:left;">A &lt;= 1</td></tr></tbody></table><h2 id="判断运算符" tabindex="-1"><a class="header-anchor" href="#判断运算符"><span>判断运算符</span></a></h2>',6)),t("table",null,[e[11]||(e[11]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"运算符"),t("th",{style:{"text-align":"left"}},"说明"),t("th",{style:{"text-align":"left"}},"例子")])],-1)),t("tbody",null,[e[3]||(e[3]=t("tr",null,[t("td",{style:{"text-align":"left"}},"IS NULL EXISTS"),t("td",{style:{"text-align":"left"}},[l("结果是否为"),t("code",null,"NULL")]),t("td",{style:{"text-align":"left"}},"如果不存在")],-1)),e[4]||(e[4]=t("tr",null,[t("td",{style:{"text-align":"left"}},"IS EXISTS"),t("td",{style:{"text-align":"left"}},[l("结果是否不为"),t("code",null,"NULL")]),t("td",{style:{"text-align":"left"}},"如果存在")],-1)),e[5]||(e[5]=t("tr",null,[t("td",{style:{"text-align":"left"}},"LEAST (<值列表>,...)"),t("td",{style:{"text-align":"left"}},"当有两个或多个参数时，返回最小值"),t("td",{style:{"text-align":"left"}},"LEAST(1, 10)")],-1)),e[6]||(e[6]=t("tr",null,[t("td",{style:{"text-align":"left"}},"GREATEST (<值列表>,...)"),t("td",{style:{"text-align":"left"}},"当有两个或多个参数时，返回最大值"),t("td",{style:{"text-align":"left"}},"GREATEST(1, 10)")],-1)),e[7]||(e[7]=t("tr",null,[t("td",{style:{"text-align":"left"}},"BETWEEN <最小值> AND <最大值>"),t("td",{style:{"text-align":"left"}},[l("某个范围 "),t("br"),l(" - 包含最小，不包含最大")]),t("td",{style:{"text-align":"left"}},"BETWEEN 1 AND 10")],-1)),e[8]||(e[8]=t("tr",null,[t("td",{style:{"text-align":"left"}},"IN (<值列表>,...)"),t("td",{style:{"text-align":"left"}},[l("判断是在"),t("code",null,"IN"),l("列表中的任意一个值")]),t("td",{style:{"text-align":"left"}},"IN(1, 2, 3)")],-1)),e[9]||(e[9]=t("tr",null,[t("td",{style:{"text-align":"left"}},"NOT IN (<值列表>,...)"),t("td",{style:{"text-align":"left"}},"判断不是在列表中的任意一个值"),t("td",{style:{"text-align":"left"}})],-1)),e[10]||(e[10]=t("tr",null,[t("td",{style:{"text-align":"left"}},"LIKE <模糊匹配表达式>"),t("td",{style:{"text-align":"left"}},"模糊匹配（通配符）"),t("td",{style:{"text-align":"left"}},'LIKE "%智能体%"')],-1)),t("tr",null,[e[1]||(e[1]=t("td",{style:{"text-align":"left"}},"REGEXP",-1)),t("td",f,[s(n,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"},{default:r(()=>e[0]||(e[0]=[l("正则表达式匹配")])),_:1,__:[0]})]),e[2]||(e[2]=t("td",{style:{"text-align":"left"}},null,-1))])])]),e[13]||(e[13]=a('<div class="hint-container note"><p class="hint-container-title">注释</p><p>SQL的通配符</p><ul><li><code>_</code>：匹配单个字符</li><li><code>%</code>：匹配任意个字符</li><li><code>[a-z]</code>：匹配在方括号内的任意一个字符。</li><li><code>[^a-z]</code>：匹配不在方括号内的任意一个字符。</li></ul></div><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h2><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:left;">AND 或 &amp;&amp;</td><td style="text-align:left;">逻辑与（多个条件同时成立）</td><td style="text-align:left;">0&amp;&amp;0=0, 1&amp;&amp;1=1, 0&amp;&amp;1=0</td></tr><tr><td style="text-align:left;">OR 或 ||</td><td style="text-align:left;">逻辑或（多个条件任意一个成立）</td><td style="text-align:left;">0||0=0, 1||1=1, 0||1=1</td></tr><tr><td style="text-align:left;">NOT 或 !</td><td style="text-align:left;">逻辑非（取反）</td><td style="text-align:left;">!0=1, !1=0</td></tr><tr><td style="text-align:left;">XOR</td><td style="text-align:left;">逻辑异或（两个结果相同时为真）</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="位运算符" tabindex="-1"><a class="header-anchor" href="#位运算符"><span>位运算符</span></a></h2><div class="hint-container note"><p class="hint-container-title">注释</p><ul><li>位运算符是在二进制数上进行计算的运算符。</li><li>位运算符会先将操作数变成二进制数，进行位运算，再将计算结果从二进制转换位十进制数。</li></ul></div><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">例子</th></tr></thead><tbody><tr><td style="text-align:left;">&amp;</td><td style="text-align:left;">按位与</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">|</td><td style="text-align:left;">按位或</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">^</td><td style="text-align:left;">按位异或</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">&lt;&lt;</td><td style="text-align:left;">按位左移</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">&gt;&gt;</td><td style="text-align:left;">按位右移</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">~</td><td style="text-align:left;">按位取反</td><td style="text-align:left;"></td></tr></tbody></table>',6))])}const h=d(y,[["render",x]]),u=JSON.parse('{"path":"/software/Language-SQL-%E8%BF%90%E7%AE%97%E7%AC%A6.html","title":"Language - SQL - 运算符","lang":"zh-CN","frontmatter":{"title":"Language - SQL - 运算符","author":"魔术桌","cover":"","category":["软件程序/语言"],"date":"2024-11-18T00:00:00.000Z","tag":["进度-已完成","查询手册"],"description":"文章摘要： 摘要内容。 算术运算符 比较运算符 判断运算符 注释 SQL的通配符 _：匹配单个字符 %：匹配任意个字符 [a-z]：匹配在方括号内的任意一个字符。 [^a-z]：匹配不在方括号内的任意一个字符。 逻辑运算符 位运算符 注释 位运算符是在二进制数上进行计算的运算符。 位运算符会先将操作数变成二进制数，进行位运算，再将计算结果从二进制转换位...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Language - SQL - 运算符\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Language-SQL-%E8%BF%90%E7%AE%97%E7%AC%A6.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Language - SQL - 运算符"}],["meta",{"property":"og:description","content":"文章摘要： 摘要内容。 算术运算符 比较运算符 判断运算符 注释 SQL的通配符 _：匹配单个字符 %：匹配任意个字符 [a-z]：匹配在方括号内的任意一个字符。 [^a-z]：匹配不在方括号内的任意一个字符。 逻辑运算符 位运算符 注释 位运算符是在二进制数上进行计算的运算符。 位运算符会先将操作数变成二进制数，进行位运算，再将计算结果从二进制转换位..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"查询手册"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2024-11-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Language-SQL-运算符.md","excerpt":"<p><strong>文章摘要：</strong> 摘要内容。</p>\\n"}');export{h as comp,u as data};
