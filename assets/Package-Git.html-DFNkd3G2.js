import{_ as r,c as s,a as n,b as i,d as e,e as o,w as l,r as g,o as d}from"./app-D67BBu3k.js";const p="/assets/Package-Git-%E6%B5%81%E7%A8%8B%E5%9B%BE.excalidraw-D5GwTGPq.svg",c={};function m(E,t){const a=g("RouteLink");return d(),s("div",null,[t[14]||(t[14]=n('<p><strong>文章摘要：</strong> Git是一个免费开源的分布式版本控制系统工具。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><ul><li>版本库又称仓库（Repository），可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能追踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</li><li><code>派生</code>可以理解为从一个目录完整复制再复制出来一份。</li><li>该文章参考了BiliBili上GeekHour的教学视频，视频连接：<a href="https://www.bilibili.com/video/BV1HM411377j?p=1" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1HM411377j?p=1</a></li></ul></div><blockquote><p><img src="'+p+'" alt="Git工作流程"></p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>Git是一个分布式版本控制系统。</li><li>允许用户跟踪文件的更改历史，协作开发，并管理多人同时对代码库的修改。</li></ul><p>主要功能</p><ul><li><strong>版本控制</strong>：记录文件的修改历史，支持回滚到任意版本。</li><li><strong>分支管理</strong>：允许创建多个分支，可以在不同的分支上并行开发。</li><li><strong>合并与冲突解决</strong>：支持将不同分支的更改合并在一起，并帮助解决合并过程中出现的冲突。</li><li><strong>远程协作</strong>：支持多人协作，通过远程仓库共享代码。</li><li><strong>安全性</strong>：所有提交都会通过SHA1哈希算法加密，确保数据完整性。</li><li><strong>轻量级操作</strong>：大多数操作都是在本地执行，速度快。</li></ul><p>注意事项</p><ul><li><strong>学习曲线</strong>：Git是一个强大的工具，但也可能有一定的学习难度。</li><li><strong>数据完整性</strong>：虽然Git很安全，但用户仍需定期执行数据完整性检查。</li><li><strong>合并冲突</strong>：在合并分支时可能会遇到冲突，需要手动解决。</li><li><strong>权限管理</strong>：在团队协作中，需要合理设置用户权限，以保护代码安全。</li><li><strong>大文件处理</strong>：Git不适合存储大文件，应使用Git LFS（Large File Storage）等工具处理。</li></ul><p>适用场景</p><ul><li><strong>软件开发</strong>：适用于各种规模的软件开发项目，特别是开源项目和大型企业级项目。</li><li><strong>文档管理/多端多设备同步</strong>：除了代码，Git也适用于文档的版本控制。</li><li><strong>个人项目</strong>：即使是个人项目，Git也能提供良好的版本管理和备份功能。</li><li><strong>团队协作</strong>：在团队协作中，Git能够有效地管理多人同时对代码的修改。</li><li><strong>持续集成/持续部署（CI/CD）</strong>：Git可以与CI/CD工具结合，实现自动化测试和部署。</li><li><strong>远程工作</strong>：支持远程工作环境，团队成员可以在任何地点协作。</li></ul><h2 id="安装与卸载" tabindex="-1"><a class="header-anchor" href="#安装与卸载"><span>安装与卸载</span></a></h2>',13)),i("p",null,[t[1]||(t[1]=e("详细总结：")),o(a,{to:"/software/Package-Git-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD.html"},{default:l(()=>t[0]||(t[0]=[e("Package-Git-安装与卸载")])),_:1,__:[0]})]),t[15]||(t[15]=i("h2",{id:"终端命令",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#终端命令"},[i("span",null,"终端命令")])],-1)),i("p",null,[t[3]||(t[3]=e("详细总结：")),o(a,{to:"/software/Package-Git-%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4-git.html"},{default:l(()=>t[2]||(t[2]=[e("Package-Git-终端命令-git")])),_:1,__:[2]})]),t[16]||(t[16]=n('<h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p>详细总结：<a href=""></a></p><h2 id="热门推荐" tabindex="-1"><a class="header-anchor" href="#热门推荐"><span>热门推荐</span></a></h2><p>详细总结：<a href=""></a></p><h2 id="问题总结" tabindex="-1"><a class="header-anchor" href="#问题总结"><span>问题总结</span></a></h2>',5)),i("p",null,[t[5]||(t[5]=e("详细总结：")),o(a,{to:"/software/Package-Git-%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.html"},{default:l(()=>t[4]||(t[4]=[e("Package-Git-问题总结")])),_:1,__:[4]})]),t[17]||(t[17]=n('<h2 id="git的四个区域-工作模式" tabindex="-1"><a class="header-anchor" href="#git的四个区域-工作模式"><span>Git的四个区域/工作模式</span></a></h2><ul><li><strong>工作区（Working Directory）</strong>：简单理解为自己创建的本地项目目录。<code>.git</code>所在的目录。实际操作的目录。</li><li><strong>暂存区（Stage/Index）</strong>：临时存储区域，用于保存即将提交到远程仓库的修改内容，存放在<code>.git/index</code>目录下，因此我们将缓存区称作索引，Git的版本库中存了很多东西，其中最重要的就是称为stage（或者叫index）的缓存区，还有Git自动创建的第一个分支master，以及指向master的一个指针叫HEAD。</li><li><strong>本地仓库（Local Repository）</strong>：文件在<code>.git/objects</code>目录下，包含了完整的项目历史记录和元数据，是Git存储代码和版本信息的主要位置。</li><li><strong>远程仓库（Remote）</strong>：托管在远程服务器上的仓库。</li></ul><h2 id="git项目文件的五种状态" tabindex="-1"><a class="header-anchor" href="#git项目文件的五种状态"><span>Git项目文件的五种状态</span></a></h2><ul><li><strong>未跟踪()</strong></li><li><strong>未修改()</strong></li><li><strong>已修改(modified)</strong>：修改了文件，但没有保存到“暂存区”。</li><li><strong>已暂存(staged)</strong>：把修改后的文件放到“暂存区”。</li><li><strong>已提交(committed)</strong>：把暂存区的文件提交到“本地仓库”。</li></ul><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><ul><li><code>main</code>：默认主分支（可修改）。</li><li><code>origin</code>：默认远程仓库的名称（可修改）。</li><li><code>HEAD</code>：指向当前分支的指针。</li><li><code>HEAD^</code>：上一个版本。</li><li><code>HEAD~4</code>：上4个版本。</li></ul><h2 id="特殊文件" tabindex="-1"><a class="header-anchor" href="#特殊文件"><span>特殊文件</span></a></h2><ul><li><code>.git</code>：Git仓库的元数据和对象数据库。</li><li><code>.gitignore</code>：忽略文件，不需要提交到仓库的文件。</li><li><code>.gitattributes</code>：指定文件的属性，比如换行符。</li><li><code>.gitkeep</code>：使空目录被提交到仓库。</li><li><code>.gitmodules</code>：记录子模块的信息。</li><li><code>.gitconfig</code>：记录仓库的配置信息。</li></ul><h2 id="git分支工作流程" tabindex="-1"><a class="header-anchor" href="#git分支工作流程"><span>Git分支工作流程</span></a></h2><p>Git Flow是一种流程模型，用于在Git上管理软件开发项目。</p>',10)),i("ul",null,[i("li",null,[t[7]||(t[7]=e("推荐分支工作流程模型方案：")),o(a,{to:"/software/Package-Git-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E5%88%86%E6%94%AF%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B.html"},{default:l(()=>t[6]||(t[6]=[e("Package-Git-热门推荐-分支工作流程模型")])),_:1,__:[6]})]),i("li",null,[t[9]||(t[9]=e("个人独立开发流程：")),o(a,{to:"/software/Package-Git-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B.html"},{default:l(()=>t[8]||(t[8]=[e("Package-Git-热门推荐-个人独立开发流程")])),_:1,__:[8]})]),i("li",null,[t[11]||(t[11]=e("跨多团队协作流程：")),o(a,{to:"/software/Package-Git-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E8%B7%A8%E5%A4%9A%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C%E6%B5%81%E7%A8%8B.html"},{default:l(()=>t[10]||(t[10]=[e("Package-Git-热门推荐-跨多团队协作流程")])),_:1,__:[10]})]),i("li",null,[t[13]||(t[13]=e("团队内部协作流程：")),o(a,{to:"/software/Package-Git-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E5%9B%A2%E9%98%9F%E5%86%85%E9%83%A8%E5%8D%8F%E4%BD%9C%E6%B5%81%E7%A8%8B.html"},{default:l(()=>t[12]||(t[12]=[e("Package-Git-热门推荐-团队内部协作流程")])),_:1,__:[12]})])]),t[18]||(t[18]=i("h2",{id:"分离头指针状态-匿名分支",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#分离头指针状态-匿名分支"},[i("span",null,"分离头指针状态/匿名分支")])],-1)),t[19]||(t[19]=i("ul",null,[i("li",null,"分离头指针状态（detached HEAD state）是 Git 版本控制系统中的一种特殊状态，它发生在当你直接检出（checkout）一个特定的提交（commit）而不是一个分支名时。"),i("li",null,"在早期版本的 Git 中，这种状态有时被称为“匿名分支”或“匿名头指针”，因为它与分支类似，但没有名字。"),i("li",null,"分离头指针状态的设计初衷是为了允许开发者在不影响任何现有分支的情况下查看和测试历史提交。"),i("li",null,"这种状态在处理紧急修复或回溯到旧版本进行调试时非常有用。")],-1))])}const h=r(c,[["render",m]]),f=JSON.parse('{"path":"/software/Package-Git.html","title":"Package - Git","lang":"zh-CN","frontmatter":{"title":"Package - Git","author":"魔术桌","cover":"","category":["软件程序/软件包"],"date":"2023-08-12T00:00:00.000Z","tag":["进度-已完成","知识总结"],"description":"文章摘要： Git是一个免费开源的分布式版本控制系统工具。 相关信息 版本库又称仓库（Repository），可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能追踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。 派生可以理解为从一个目录完整复制再复制出来一份。 该文章参考了BiliBi...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Package - Git\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-12T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-14T11:54:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Package-Git.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Package - Git"}],["meta",{"property":"og:description","content":"文章摘要： Git是一个免费开源的分布式版本控制系统工具。 相关信息 版本库又称仓库（Repository），可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能追踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。 派生可以理解为从一个目录完整复制再复制出来一份。 该文章参考了BiliBi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-14T11:54:16.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2023-08-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-14T11:54:16.000Z"}]]},"git":{"updatedTime":1760442856000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":2},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"1aa6eb6fa007a2b74f09db2fa9f6339a3957cc77","time":1760442856000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"移动端更新笔记"},{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Package-Git.md","excerpt":"<p><strong>文章摘要：</strong> Git是一个免费开源的分布式版本控制系统工具。</p>\\n"}');export{h as comp,f as data};
