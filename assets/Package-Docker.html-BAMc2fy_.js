import{_ as n,c as s,b as a,a as i,d as r,e as t,w as l,r as c,o as p}from"./app-D67BBu3k.js";const d={},g={class:"hint-container info"};function h(u,e){const o=c("RouteLink");return p(),s("div",null,[e[10]||(e[10]=a("p",null,[a("strong",null,"文章摘要："),r(" Docker 是开源的容器化工具，通过提供一种标准化的、轻量级的运行时环境，极大地简化了应用程序的部署和管理。")],-1)),a("div",g,[e[2]||(e[2]=a("p",{class:"hint-container-title"},"相关信息",-1)),e[3]||(e[3]=a("p",null,"外部相关文章",-1)),e[4]||(e[4]=a("ul",null,[a("li",null,[r("本文章将使用华为镜像站提供的软件包："),a("a",{href:"https://mirrors.huaweicloud.com/mirrorDetail/5ea14d84b58d16ef329c5c13?mirrorName=docker-ce&catalog=docker",target:"_blank",rel:"noopener noreferrer"},"华为镜像站提供的Docker-CE")]),a("li",null,[r("推荐第三方教程："),a("a",{href:"https://www.bilibili.com/video/BV1MR4y1Q738/?spm_id_from=333.337.search-card.all.click&vd_source=262edcbbd8e80915a7dff074a0e165a1",target:"_blank",rel:"noopener noreferrer"},"B站up主教程")])],-1)),e[5]||(e[5]=a("p",null,"内部相关文章",-1)),a("ul",null,[a("li",null,[e[1]||(e[1]=r("Kubernetes容器编排：")),t(o,{to:"/software/Package-Kubectl-Kubernetes(k8s)%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"},{default:l(()=>e[0]||(e[0]=[r("Package-Kubectl-Kubernetes(k8s)基础知识")])),_:1,__:[0]})])])]),e[11]||(e[11]=i('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>Docker是一个开源的应用容器引擎。</li><li>允许开发者打包他们的应用以及应用的依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器或Windows服务器上。</li><li>容器是完全使用沙箱机制，相互之间不会有任何接口（类似iPhone的app）而且更轻量级。</li></ul><p>主要功能</p><ul><li><strong>容器化</strong>：可以将应用程序及其环境封装在一个容器中，实现环境的一致性。</li><li><strong>可移植性</strong>：容器可以在任何支持Docker的环境中运行，不受底层操作系统限制。</li><li><strong>隔离性</strong>：容器之间相互隔离，不会影响宿主机或其他容器的运行。</li><li><strong>可扩展性</strong>：可以很容易地增加或减少容器的数量来应对不同的负载情况。</li><li><strong>版本控制</strong>：通过Docker镜像的版本控制，可以跟踪和管理应用程序的变化。</li><li><strong>持续集成和持续部署（CI/CD）</strong>：Docker可以集成到CI/CD流程中，实现自动化测试和部署。</li></ul><p>注意事项</p><ul><li><strong>安全性</strong>：容器化技术虽然提供了一定程度的隔离，但并非完全安全，需要合理配置和管理。</li><li><strong>数据持久化</strong>：容器在停止后其状态会丢失，因此需要使用卷（Volumes）或其他机制来持久化数据。</li><li><strong>资源管理</strong>：需要监控和管理容器的资源使用情况，避免资源泄露或过度使用。</li><li><strong>兼容性</strong>：并非所有的应用程序都适合容器化，需要评估应用是否适合在容器中运行。</li><li><strong>网络配置</strong>：容器网络配置较为复杂，需要合理规划网络以保障容器间通信。</li></ul><p>适用场景</p><ul><li><strong>微服务架构</strong>：Docker非常适合微服务架构，可以独立部署和管理服务。</li><li><strong>开发与测试环境</strong>：提供一致的开发和测试环境，减少“在我的机器上可以运行”的问题。</li><li><strong>快速部署和扩展</strong>：适用于需要快速部署和横向扩展的应用，如Web应用、移动后端等。</li><li><strong>持续集成和持续部署</strong>：作为CI/CD流程的一部分，实现自动化测试和部署。</li><li><strong>云服务迁移</strong>：帮助应用无缝迁移到云平台，实现云原生应用的开发。</li><li><strong>资源隔离</strong>：在共享主机环境中隔离不同用户或团队的应用。</li></ul><h2 id="安装与卸载" tabindex="-1"><a class="header-anchor" href="#安装与卸载"><span>安装与卸载</span></a></h2>',10)),a("p",null,[e[7]||(e[7]=r("详细总结：")),t(o,{to:"/software/Package-Docker-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD.html"},{default:l(()=>e[6]||(e[6]=[r("Package-Docker-安装与卸载")])),_:1,__:[6]})]),e[12]||(e[12]=a("h2",{id:"终端命令",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#终端命令"},[a("span",null,"终端命令")])],-1)),a("p",null,[e[9]||(e[9]=r("详细总结：")),t(o,{to:"/software/Package-Docker-%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4-docker.html"},{default:l(()=>e[8]||(e[8]=[r("Package-Docker-终端命令-docker")])),_:1,__:[8]})]),e[13]||(e[13]=i('<h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p>详细总结：<a href=""></a></p><h2 id="热门推荐" tabindex="-1"><a class="header-anchor" href="#热门推荐"><span>热门推荐</span></a></h2><p>详细总结：<a href=""></a></p><h2 id="问题总结" tabindex="-1"><a class="header-anchor" href="#问题总结"><span>问题总结</span></a></h2><p>详细总结：<a href=""></a></p><h2 id="docker镜像" tabindex="-1"><a class="header-anchor" href="#docker镜像"><span>Docker镜像</span></a></h2><ul><li>Docker镜像就是一个只读的模板（配置文件）。</li><li>镜像（Image）可以用来创建Docker容器。</li><li>Docker提供了一个简单的机制来创建镜像或者更新现有的镜像。</li><li>用户可以直接从其他人那里下载一个已经做好的镜像来直接使用。</li></ul><h2 id="docker容器" tabindex="-1"><a class="header-anchor" href="#docker容器"><span>Docker容器</span></a></h2><ul><li>Docker利用容器来运行应用（正在运行的软件进程）。</li><li>容器（Container）是从镜像创建的运行实例。</li><li>可以被“运行、开始、停止、删除”。</li><li>每个容器都是相互隔离的、保证安全的平台。</li></ul><h2 id="docker仓库" tabindex="-1"><a class="header-anchor" href="#docker仓库"><span>Docker仓库</span></a></h2><ul><li>仓库（Repository）是集中存放镜像文件的场所。</li><li>仓库主持服务器（Registry）上存放这很多仓库，每个仓库中包含来很多镜像，每个镜像有不同的标签（Tag）。</li></ul><h2 id="容器的状态" tabindex="-1"><a class="header-anchor" href="#容器的状态"><span>容器的状态</span></a></h2><ul><li>运行：进程正常运行。</li><li>暂停：进程暂停，CPU不再运行，不释放内容。</li><li>停止：进程停止，回收进程暂用的内存、CPU等资源。</li></ul><h2 id="制作dockerfile镜像文件" tabindex="-1"><a class="header-anchor" href="#制作dockerfile镜像文件"><span>制作Dockerfile镜像文件</span></a></h2><ol><li>创建一个名为<code>Dockerfile</code>的文件，且没有后缀。</li></ol><p>==待完善==</p><h2 id="扩展知识" tabindex="-1"><a class="header-anchor" href="#扩展知识"><span>扩展知识</span></a></h2><blockquote><ul><li>Debian Linux系统环境下，镜像文件的下载保存位置：<code>/var/lib/docker</code></li><li>提示：Docker容器软件比较特殊，必须使用<strong>管理员权限</strong>来进行操作。</li></ul></blockquote><h2 id="镜像文件推荐" tabindex="-1"><a class="header-anchor" href="#镜像文件推荐"><span>镜像文件推荐</span></a></h2><p>==待完善==</p>',21))])}const k=n(d,[["render",h]]),f=JSON.parse('{"path":"/software/Package-Docker.html","title":"Package - Docker","lang":"zh-CN","frontmatter":{"title":"Package - Docker","author":"魔术桌","cover":"","category":["软件程序/软件包"],"date":"2024-06-16T00:00:00.000Z","tag":["进度-已停滞","知识总结"],"description":"文章摘要： Docker 是开源的容器化工具，通过提供一种标准化的、轻量级的运行时环境，极大地简化了应用程序的部署和管理。 相关信息 外部相关文章 本文章将使用华为镜像站提供的软件包：华为镜像站提供的Docker-CE 推荐第三方教程：B站up主教程 内部相关文章 Kubernetes容器编排： 简介 简要说明 Docker是一个开源的应用容器引擎。 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Package - Docker\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Package-Docker.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Package - Docker"}],["meta",{"property":"og:description","content":"文章摘要： Docker 是开源的容器化工具，通过提供一种标准化的、轻量级的运行时环境，极大地简化了应用程序的部署和管理。 相关信息 外部相关文章 本文章将使用华为镜像站提供的软件包：华为镜像站提供的Docker-CE 推荐第三方教程：B站up主教程 内部相关文章 Kubernetes容器编排： 简介 简要说明 Docker是一个开源的应用容器引擎。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已停滞"}],["meta",{"property":"article:published_time","content":"2024-06-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Package-Docker.md","excerpt":"<p><strong>文章摘要：</strong> Docker 是开源的容器化工具，通过提供一种标准化的、轻量级的运行时环境，极大地简化了应用程序的部署和管理。</p>\\n"}');export{k as comp,f as data};
