import{_ as t,c as a,a as n,o as r}from"./app-D67BBu3k.js";const o={};function i(p,e){return r(),a("div",null,e[0]||(e[0]=[n("<p><strong>文章摘要：</strong> 摘要内容。</p><blockquote><ul><li><strong>实例化（Instantiation）</strong>: Spring容器通过反射或者工厂方法创建Bean的实例。</li><li><strong>属性赋值（Populate Properties）</strong>: 为Bean的属性设置值和对其他Bean的引用。</li><li><strong>初始化（Initialization）</strong>: 如果Bean实现了BeanNameAware, BeanFactoryAware, ApplicationContextAware等接口，会调用对应的方法。然后，如果BeanPostProcessor被注册，相应的postProcessBeforeInitialization()方法会被调用。最后，如果Bean实现了InitializingBean接口，其afterPropertiesSet()方法会被调用；或者，如果Bean使用init-method属性声明了初始化方法，这个方法也会被调用。</li><li><strong>使用（In use by application）</strong>: Bean现在可以被应用程序使用了。</li><li><strong>销毁（Destruction）</strong>: 当容器关闭时，如果Bean实现了DisposableBean接口，其destroy()方法会被调用；或者，如果Bean使用destroy-method属性声明了销毁方法，这个方法也会被调用。</li></ul></blockquote>",2)]))}const c=t(o,[["render",i]]),m=JSON.parse('{"path":"/software/Library-Maven-SpringFramework6-Bean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html","title":"Library - Maven - SpringFramework 6 - Bean的生命周期","lang":"zh-CN","frontmatter":{"title":"Library - Maven - SpringFramework 6 - Bean的生命周期","author":"魔术桌","cover":"","category":["软件程序/类库"],"date":"2024-12-04T00:00:00.000Z","tag":["进度-待完善","查询手册"],"description":"文章摘要： 摘要内容。 实例化（Instantiation）: Spring容器通过反射或者工厂方法创建Bean的实例。 属性赋值（Populate Properties）: 为Bean的属性设置值和对其他Bean的引用。 初始化（Initialization）: 如果Bean实现了BeanNameAware, BeanFactoryAware, Ap...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Library - Maven - SpringFramework 6 - Bean的生命周期\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-04T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Library-Maven-SpringFramework6-Bean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Library - Maven - SpringFramework 6 - Bean的生命周期"}],["meta",{"property":"og:description","content":"文章摘要： 摘要内容。 实例化（Instantiation）: Spring容器通过反射或者工厂方法创建Bean的实例。 属性赋值（Populate Properties）: 为Bean的属性设置值和对其他Bean的引用。 初始化（Initialization）: 如果Bean实现了BeanNameAware, BeanFactoryAware, Ap..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"查询手册"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-12-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Library-Maven-SpringFramework6-Bean的生命周期.md","excerpt":"<p><strong>文章摘要：</strong> 摘要内容。</p>\\n"}');export{c as comp,m as data};
