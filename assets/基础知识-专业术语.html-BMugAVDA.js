import{_ as t,c as a,a as o,o as r}from"./app-D67BBu3k.js";const n={};function i(s,e){return r(),a("div",null,e[0]||(e[0]=[o('<h2 id="软件开发相关" tabindex="-1"><a class="header-anchor" href="#软件开发相关"><span>软件开发相关</span></a></h2><h3 id="类库-library" tabindex="-1"><a class="header-anchor" href="#类库-library"><span>类库 (Library)</span></a></h3><ul><li><strong>定义</strong>：类库是一组预先编写好的、可重用的代码，通常包含一组相关的类和接口。</li><li><strong>用途</strong>：开发者可以在自己的项目中引用类库，以避免重复编写常用功能，如数据结构、算法、文件处理等。</li><li><strong>例子</strong>：Apache Commons、JUnit、Log4j。</li></ul><h3 id="模块-module" tabindex="-1"><a class="header-anchor" href="#模块-module"><span>模块 (Module)</span></a></h3><ul><li><strong>定义</strong>：模块是软件设计中的一部分，通常是一组相关功能的集合，它们可以被独立开发、测试和部署。</li><li><strong>用途</strong>：模块化可以提高代码的可维护性和可重用性，允许不同的团队并行工作。</li><li><strong>例子</strong>：在 Java 9 及以上版本中，模块是语言一级的概念，如 <code>java.base</code> 模块。</li></ul><h3 id="项目-project" tabindex="-1"><a class="header-anchor" href="#项目-project"><span>项目 (Project)</span></a></h3><ul><li><strong>定义</strong>：项目是一个完整的软件产品或服务，通常由多个模块、类库和其他资源组成。</li><li><strong>用途</strong>：项目是软件开发工作的基本单位，通常有明确的目标、范围和期限。</li><li><strong>例子</strong>：一个在线购物平台、一个企业资源规划（ERP）系统。</li></ul><h3 id="软件包-package" tabindex="-1"><a class="header-anchor" href="#软件包-package"><span>软件包 (Package)</span></a></h3><ul><li><strong>定义</strong>：软件包是一种组织代码的方式，通常是一组相关的类和接口的集合，它们在文件系统中通常位于同一个目录下。</li><li><strong>用途</strong>：软件包用于管理命名空间，避免类名冲突，并允许更高级别的代码组织。</li><li><strong>例子</strong>：在 Java 中，<code>java.util</code> 是一个包含实用工具类和接口的包。</li></ul><h3 id="软件包仓库-package-repository" tabindex="-1"><a class="header-anchor" href="#软件包仓库-package-repository"><span>软件包仓库 (Package Repository)</span></a></h3><ul><li><strong>定义</strong>：软件包仓库是一个集中存储软件包的地方，这些软件包可以是操作系统软件包、库、框架或应用程序。</li><li><strong>用途</strong>：软件包仓库提供了一个中心化的位置，供开发者和用户查找、下载和安装软件包。它通常提供版本控制和依赖解析功能。</li><li><strong>例子</strong>：npm Registry (用于 Node.js 包), PyPI (Python 包索引), Maven Central (用于 Java 包)。</li></ul><h3 id="镜像站点-mirror-site" tabindex="-1"><a class="header-anchor" href="#镜像站点-mirror-site"><span>镜像站点 (Mirror Site)</span></a></h3><ul><li><strong>定义</strong>：镜像站点是原始软件包仓库的复制，它包含了原始仓库中所有或大部分的数据。</li><li><strong>用途</strong>：镜像站点用于减轻原始服务器的负载，提供更快的下载速度，尤其是在地理位置较远的地方。它们也作为备份，以防原始站点不可用。</li><li><strong>例子</strong>：清华大学、阿里云等提供的各种软件包仓库的镜像。</li></ul><h3 id="软件源-software-source" tabindex="-1"><a class="header-anchor" href="#软件源-software-source"><span>软件源 (Software Source)</span></a></h3><ul><li><strong>定义</strong>：软件源通常指的是操作系统用于获取和更新软件包的特定仓库或集合。</li><li><strong>用途</strong>：在 Linux 发行版中，软件源定义了可以从哪里下载和安装软件包。用户可以添加或修改软件源以获取不同的软件包或版本。</li><li><strong>例子</strong>：Ubuntu 的 <code>sources.list</code> 文件定义了软件源。</li></ul><h3 id="存储库-repository" tabindex="-1"><a class="header-anchor" href="#存储库-repository"><span>存储库 (Repository)</span></a></h3><ul><li><strong>定义</strong>：存储库是一个用于存储和共享代码、文档或其他数据的地方，通常与版本控制系统结合使用。</li><li><strong>用途</strong>：存储库是软件开发过程中的核心组成部分，用于代码共享、协作和版本管理。</li><li><strong>例子</strong>：Git 存储库 (如 GitHub、GitLab、Bitbucket 上的项目)。</li></ul>',17)]))}const c=t(n,[["render",i]]),p=JSON.parse('{"path":"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html","title":"基础知识 - 专业术语","lang":"zh-CN","frontmatter":{"title":"基础知识 - 专业术语","author":"魔术桌","cover":null,"category":["软件程序/语言"],"date":"2024-12-12T00:00:00.000Z","tag":["进度-待完善","查询手册"],"description":"软件开发相关 类库 (Library) 定义：类库是一组预先编写好的、可重用的代码，通常包含一组相关的类和接口。 用途：开发者可以在自己的项目中引用类库，以避免重复编写常用功能，如数据结构、算法、文件处理等。 例子：Apache Commons、JUnit、Log4j。 模块 (Module) 定义：模块是软件设计中的一部分，通常是一组相关功能的集合，...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础知识 - 专业术语\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-12T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"基础知识 - 专业术语"}],["meta",{"property":"og:description","content":"软件开发相关 类库 (Library) 定义：类库是一组预先编写好的、可重用的代码，通常包含一组相关的类和接口。 用途：开发者可以在自己的项目中引用类库，以避免重复编写常用功能，如数据结构、算法、文件处理等。 例子：Apache Commons、JUnit、Log4j。 模块 (Module) 定义：模块是软件设计中的一部分，通常是一组相关功能的集合，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"查询手册"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-12-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/基础知识-专业术语.md","excerpt":""}');export{c as comp,p as data};
