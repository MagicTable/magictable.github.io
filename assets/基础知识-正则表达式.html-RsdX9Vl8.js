import{_ as a,c as l,a as i,b as c,d as o,e as n,w as r,r as d,o as s}from"./app-D67BBu3k.js";const p={};function u(g,e){const t=d("RouteLink");return s(),l("div",null,[e[2]||(e[2]=i('<p><strong>文章摘要：</strong> 正则表达式（Regular Expression）是一种文本模式。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><blockquote><ul><li>正则表达式（Regular Expression）是一种文本模式。</li><li>由普通字符（例如，a 到 z 之间的字母）和特殊字符（称为&quot;元字符&quot;）组成。</li><li>正则表达式用于对字符串进行复杂的模式匹配和查找操作。</li></ul></blockquote><p>主要功能</p><blockquote><ul><li><strong>搜索</strong>：在大量文本中查找特定的字符串或模式。</li><li><strong>替换</strong>：找到匹配的字符串后，用新的字符串替换它们。</li><li><strong>分割</strong>：根据特定的模式将字符串分割成多个子字符串。</li><li><strong>验证</strong>：检查字符串是否符合特定的格式，如电子邮件地址、电话号码等。</li></ul></blockquote><p>注意事项</p><blockquote><ul><li><strong>转义字符</strong>：在正则表达式中，某些字符具有特殊含义，如果需要匹配这些字符本身，需要使用反斜杠 <code>\\</code> 进行转义。</li><li><strong>匹配多个可能性</strong>：使用方括号 <code>[]</code> 来指定一个字符集合，匹配集合中的任意一个字符。</li><li><strong>贪婪与懒惰</strong>：默认情况下，量词（如 <code>*</code>、<code>+</code>）是贪婪的，会匹配尽可能多的字符。使用 <code>?</code> 可以使其变为懒惰模式，匹配尽可能少的字符。</li><li><strong>性能问题</strong>：复杂的正则表达式可能导致性能问题，尤其是在处理大量数据时。应尽量优化表达式，避免回溯。</li><li><strong>兼容性</strong>：不同的编程语言和平台可能支持不同的正则表达式特性，需要注意兼容性问题。</li></ul></blockquote><p>适用场景</p><blockquote><ul><li><strong>数据验证</strong>：在用户输入数据时，确保数据格式正确，如表单验证。</li><li><strong>文本处理</strong>：在文本编辑器中查找和替换文本，或者在日志文件中搜索特定模式。</li><li><strong>数据分析</strong>：从大量文本数据中提取有用信息，如日志分析、自然语言处理。</li><li><strong>字符串操作</strong>：编程中处理字符串时，进行搜索、替换、分割等操作。</li><li><strong>网络爬虫</strong>：从网页中提取链接、数据等信息。</li></ul></blockquote><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><h3 id="基本匹配" tabindex="-1"><a class="header-anchor" href="#基本匹配"><span>基本匹配</span></a></h3><blockquote><ul><li><code>.</code>：匹配除换行符之外的任意单个字符。</li><li><code>[abc]</code>：匹配方括号内的任意一个字符（a、b 或 c）。</li><li><code>[^abc]</code>：匹配不在方括号内的任意一个字符。</li><li><code>\\d</code>：匹配任意一个数字字符（等价于 <code>[0-9]</code>）。</li><li><code>\\D</code>：匹配一个非数字字符。等价于 <code>[^0-9]</code>。</li><li><code>\\w</code>：匹配任意一个字母数字或下划线字符（等价于 <code>[a-zA-Z0-9_]</code>）。</li><li><code>\\W</code>：匹配任何非单词字符。等价于 <code>[^A-Za-z0-9_]</code>。</li><li><code>\\s</code>：匹配任意一个空白字符（空格、制表符、换行符等）。</li><li><code>\\S</code>：匹配任何非空白字符。</li></ul></blockquote><h3 id="量词" tabindex="-1"><a class="header-anchor" href="#量词"><span>量词</span></a></h3><blockquote><ul><li><code>*</code>：匹配前面的子表达式零次或多次。</li><li><code>+</code>：匹配前面的子表达式一次或多次。</li><li><code>?</code>：匹配前面的子表达式零次或一次。</li><li><code>{n}</code>：匹配前面的子表达式恰好 n 次。</li><li><code>{n,}</code>：匹配前面的子表达式至少 n 次。</li><li><code>{n,m}</code>：匹配前面的子表达式至少 n 次，但不超过 m 次。</li></ul></blockquote><h3 id="定位符" tabindex="-1"><a class="header-anchor" href="#定位符"><span>定位符</span></a></h3><blockquote><ul><li><code>^</code>：匹配输入字符串的开始位置。</li><li><code>$</code>：匹配输入字符串的结束位置。</li><li><code>\\b</code>：匹配一个单词边界。</li><li><code>\\B</code>：非单词边界匹配。</li></ul></blockquote><h3 id="分组和引用" tabindex="-1"><a class="header-anchor" href="#分组和引用"><span>分组和引用</span></a></h3><blockquote><ul><li><code>(exp)</code>：匹配 exp 并捕获文本到自动命名的组里。</li><li><code>(?:exp)</code>：匹配 exp 但不捕获匹配的文本。</li><li><code>\\n</code>：引用编号为 n 的捕获组匹配的文本。</li></ul></blockquote><h3 id="选择符" tabindex="-1"><a class="header-anchor" href="#选择符"><span>选择符</span></a></h3><blockquote><ul><li><code>|</code>：匹配两个或多个分支选择的任意一个。</li></ul></blockquote><h2 id="常见推荐规则" tabindex="-1"><a class="header-anchor" href="#常见推荐规则"><span>常见推荐规则</span></a></h2>',22)),c("p",null,[e[1]||(e[1]=o("详细总结：")),n(t,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E7%83%AD%E9%97%A8%E6%8E%A8%E8%8D%90-%E5%B8%B8%E8%A7%81%E8%A7%84%E5%88%99.html"},{default:r(()=>e[0]||(e[0]=[o("基础知识-正则表达式-热门推荐-常见规则")])),_:1,__:[0]})])])}const m=a(p,[["render",u]]),E=JSON.parse('{"path":"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html","title":"基础知识 - 正则表达式","lang":"zh-CN","frontmatter":{"title":"基础知识 - 正则表达式","author":"魔术桌","cover":null,"category":["软件程序/语言"],"date":"2024-08-10T00:00:00.000Z","tag":["进度-已完成","查询手册"],"description":"文章摘要： 正则表达式（Regular Expression）是一种文本模式。 简介 简要说明 正则表达式（Regular Expression）是一种文本模式。 由普通字符（例如，a 到 z 之间的字母）和特殊字符（称为\\"元字符\\"）组成。 正则表达式用于对字符串进行复杂的模式匹配和查找操作。 主要功能 搜索：在大量文本中查找特定的字符串或模式。 替换...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础知识 - 正则表达式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"基础知识 - 正则表达式"}],["meta",{"property":"og:description","content":"文章摘要： 正则表达式（Regular Expression）是一种文本模式。 简介 简要说明 正则表达式（Regular Expression）是一种文本模式。 由普通字符（例如，a 到 z 之间的字母）和特殊字符（称为\\"元字符\\"）组成。 正则表达式用于对字符串进行复杂的模式匹配和查找操作。 主要功能 搜索：在大量文本中查找特定的字符串或模式。 替换..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"查询手册"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2024-08-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/基础知识-正则表达式.md","excerpt":"<p><strong>文章摘要：</strong> 正则表达式（Regular Expression）是一种文本模式。</p>\\n"}');export{m as comp,E as data};
