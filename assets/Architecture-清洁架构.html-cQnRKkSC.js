import{_ as e,c as r,a,o as i}from"./app-D67BBu3k.js";const o={};function n(s,t){return i(),r("div",null,t[0]||(t[0]=[a('<p><strong>文章摘要：</strong> 清洁（Clean Architecture）软件架构，将软件系统的关注点分离成多个层次，每个层次都有其明确的职责。。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><ul><li>清洁（Clean Architecture）软件架构。</li><li>将软件系统的关注点分离成多个层次，每个层次都有其明确的职责。</li></ul><p>层次按照依赖关系从内到外依次为：</p><ul><li>实体（Entities）、用例（Use Cases）、接口适配器（Interface Adapters）、框架和驱动（Frameworks and Drivers）。</li></ul><p>内层不依赖外层，外层依赖内层，形成一个倒置的依赖关系三角形。</p><p>主要功能</p><ul><li><strong>实体层（Entities）</strong>：包含应用程序的业务逻辑和业务规则，是与应用程序的核心功能直接相关的部分。</li><li><strong>用例层（Use Cases）</strong>：包含应用程序的用例，即应用程序的业务逻辑和流程。</li><li><strong>接口适配器层（Interface Adapters）</strong>：负责将用例层的输出适配到外部系统，如数据库、UI、外部服务等。</li><li><strong>框架和驱动层（Frameworks and Drivers）</strong>：包含所有外部元素，如UI、数据库、框架等。</li></ul><p>注意事项</p><ul><li><strong>依赖原则</strong>：内层不能依赖外层，必须确保依赖关系始终指向架构的核心。</li><li><strong>分离关注点</strong>：每个层次应该只关注自己的职责，不应该与其他层次的细节混合。</li><li><strong>接口抽象</strong>：使用接口和抽象类来解耦不同层次，使得各层可以独立变化。</li><li><strong>测试友好</strong>：清洁架构有助于编写可测试的代码，因为业务逻辑与外部依赖分离。</li><li><strong>学习曲线</strong>：清洁架构可能需要开发团队理解和适应新的设计模式，有一定的学习成本。</li></ul><p>适用场景</p><ul><li><strong>大型和复杂的项目</strong>：对于需要长期维护和频繁迭代的大型项目，清洁架构有助于保持代码的可读性和可维护性。</li><li><strong>需要高度模块化的系统</strong>：当系统需要高度模块化，以便不同模块可以独立开发和测试时。</li><li><strong>多种客户端的应用</strong>：例如，同时支持Web、移动端和桌面端的应用，清洁架构可以帮助统一业务逻辑。</li><li><strong>需要快速响应业务变化</strong>：清洁架构使得业务规则的变化不会影响到其他层次的代码，从而可以快速适应业务变化。</li><li><strong>微服务架构</strong>：在微服务架构中，每个服务都可以采用清洁架构原则，以确保服务的独立性和可替换性。</li></ul><h2 id="技术架构图" tabindex="-1"><a class="header-anchor" href="#技术架构图"><span>技术架构图</span></a></h2><blockquote><p><img src="" alt=""></p></blockquote>',15)]))}const l=e(o,[["render",n]]),p=JSON.parse('{"path":"/software/Architecture-%E6%B8%85%E6%B4%81%E6%9E%B6%E6%9E%84.html","title":"Architecture - 清洁架构","lang":"zh-CN","frontmatter":{"title":"Architecture - 清洁架构","author":"魔术桌","cover":"","category":["软件程序/软件架构"],"date":"2024-12-02T00:00:00.000Z","tag":["进度-已完成","知识总结"],"description":"文章摘要： 清洁（Clean Architecture）软件架构，将软件系统的关注点分离成多个层次，每个层次都有其明确的职责。。 简介 简要说明 清洁（Clean Architecture）软件架构。 将软件系统的关注点分离成多个层次，每个层次都有其明确的职责。 层次按照依赖关系从内到外依次为： 实体（Entities）、用例（Use Cases）、接...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Architecture - 清洁架构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-02T13:54:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Architecture-%E6%B8%85%E6%B4%81%E6%9E%B6%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Architecture - 清洁架构"}],["meta",{"property":"og:description","content":"文章摘要： 清洁（Clean Architecture）软件架构，将软件系统的关注点分离成多个层次，每个层次都有其明确的职责。。 简介 简要说明 清洁（Clean Architecture）软件架构。 将软件系统的关注点分离成多个层次，每个层次都有其明确的职责。 层次按照依赖关系从内到外依次为： 实体（Entities）、用例（Use Cases）、接..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-02T13:54:50.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2024-12-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-02T13:54:50.000Z"}]]},"git":{"updatedTime":1759413290000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Architecture-清洁架构.md","excerpt":"<p><strong>文章摘要：</strong> 清洁（Clean Architecture）软件架构，将软件系统的关注点分离成多个层次，每个层次都有其明确的职责。。</p>\\n"}');export{l as comp,p as data};
