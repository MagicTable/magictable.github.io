import{_ as l,c as p,b as n,a as i,d as s,e as t,w as o,r,o as c}from"./app-D67BBu3k.js";const g={},u={class:"hint-container info"};function d(m,a){const e=r("RouteLink");return c(),p("div",null,[a[8]||(a[8]=n("p",null,[n("strong",null,"文章摘要："),s(" 负责扫描代码提取信息生成API文档。")],-1)),n("div",u,[a[4]||(a[4]=n("p",{class:"hint-container-title"},"相关信息",-1)),a[5]||(a[5]=n("p",null,"外部相关文章",-1)),a[6]||(a[6]=n("ul",null,[n("li")],-1)),a[7]||(a[7]=n("p",null,"内部相关文章",-1)),n("ul",null,[n("li",null,[a[1]||(a[1]=s("RESTful API详细总结：")),t(e,{to:"/note/Technology-%E9%80%9A%E4%BF%A1-%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C-API-REST.html"},{default:o(()=>a[0]||(a[0]=[s("Technology-通信-查询手册-API-REST")])),_:1,__:[0]})]),n("li",null,[a[3]||(a[3]=s("OpenAPI描述规范详细总结：")),t(e,{to:"/software/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E8%A7%84%E8%8C%83-swagger%E5%92%8COpenAPI%E6%8F%8F%E8%BF%B0%E8%A7%84%E8%8C%83.html"},{default:o(()=>a[2]||(a[2]=[s("基础知识-规范-swagger和OpenAPI描述规范")])),_:1,__:[2]})])])]),a[9]||(a[9]=i(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简要说明</p><blockquote><ul><li>Swagger（现在称为OpenAPI）是一个规范和完整的框架，用于描述、生产、消费和使用RESTful风格的Web服务。</li><li>它允许用户设计、构建、记录和使用RESTful API。</li><li>Swagger提供了一个强大的平台，通过一系列工具和库，使得API的文档编写、测试和部署变得更加简单和快捷。</li></ul></blockquote><p>主要功能</p><blockquote><ul><li><strong>API文档生成</strong>：自动生成可读性强的API文档，减少手动编写文档的工作量。</li><li><strong>API测试</strong>：提供交互式UI，允许开发者在文档中直接测试API。</li><li><strong>代码生成</strong>：基于API定义，可以生成服务端和客户端的代码。</li><li><strong>规范遵循</strong>：遵循OpenAPI规范，确保API的描述是标准化的。</li><li><strong>集成支持</strong>：与多种编程语言和框架集成，如Java、Spring、Node.js等。</li><li><strong>版本控制</strong>：支持API的版本控制，便于管理API变更。</li></ul></blockquote><p>注意事项</p><blockquote><ul><li><strong>安全性</strong>：确保敏感信息不被暴露在API文档中，如使用令牌或密钥。</li><li><strong>维护性</strong>：随着API的更新，Swagger文件也需要同步更新，以保持文档的准确性。</li><li><strong>性能影响</strong>：集成Swagger可能会对应用性能产生一定影响，尤其是在生产环境中。</li><li><strong>规范遵循</strong>：必须遵循OpenAPI规范，否则生成的文档可能不准确或无法使用。</li><li><strong>版本兼容性</strong>：不同的Swagger版本之间可能存在不兼容的问题，需要特别注意。</li></ul></blockquote><p>适用场景</p><blockquote><ul><li><strong>API开发</strong>：在开发RESTful API时，使用Swagger可以加速文档编写和测试过程。</li><li><strong>团队协作</strong>：帮助团队成员理解API功能和用法，提高协作效率。</li><li><strong>前后端分离</strong>：在前后端分离的开发模式中，Swagger可以作为沟通的桥梁。</li><li><strong>API文档化</strong>：对于需要对外提供API文档的项目，Swagger是一个很好的选择。</li><li><strong>API测试</strong>：在开发过程中，使用Swagger进行API的快速测试。</li><li><strong>微服务架构</strong>：在微服务架构中，Swagger可以帮助管理和文档化多个服务之间的API。</li></ul></blockquote><h2 id="maven坐标" tabindex="-1"><a class="header-anchor" href="#maven坐标"><span>Maven坐标</span></a></h2><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!--  --&gt;</span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.7.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 请自行查找合适版本 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!--  --&gt;</span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.7.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 请自行查找合适版本 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spring使用springfox-swagger集成swagger" tabindex="-1"><a class="header-anchor" href="#spring使用springfox-swagger集成swagger"><span>Spring使用SPringfox-swagger集成Swagger</span></a></h2><h2 id="springfox通过扫描注解生成api文档" tabindex="-1"><a class="header-anchor" href="#springfox通过扫描注解生成api文档"><span>Springfox通过扫描注解生成API文档</span></a></h2><h2 id="springfox包含方法参数对象注解" tabindex="-1"><a class="header-anchor" href="#springfox包含方法参数对象注解"><span>Springfox包含方法参数对象注解</span></a></h2><h2 id="swagger2整体注解" tabindex="-1"><a class="header-anchor" href="#swagger2整体注解"><span>Swagger2整体注解</span></a></h2><h3 id="请求类注解" tabindex="-1"><a class="header-anchor" href="#请求类注解"><span>请求类注解</span></a></h3><h4 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span><code>@Api</code></span></a></h4><p>说明</p><blockquote><ul><li>放在<code>@Controller</code>注解标识的类上。</li><li>对请求类的说明。</li></ul></blockquote><p>参数</p><blockquote><ul><li><code>tags</code>：说明该类的作用，参数是一个数组，可以填多个。</li><li><code>value</code>：该参数没有什么意义，在UI界面上不显示，所以不用配置。</li><li><code>description</code>：用户基本信息操作。</li></ul></blockquote><p>案例</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="请求方法注解" tabindex="-1"><a class="header-anchor" href="#请求方法注解"><span>请求方法注解</span></a></h3><h4 id="apioperation" tabindex="-1"><a class="header-anchor" href="#apioperation"><span><code>@ApiOperation</code></span></a></h4><p>说明</p><blockquote><ul><li>用在<code>@Controller</code>注解标识的类的方法上。</li><li>对该方法的说明。</li></ul></blockquote><p>参数</p><blockquote><ul><li></li></ul></blockquote><h4 id="apiimplicitparam" tabindex="-1"><a class="header-anchor" href="#apiimplicitparam"><span><code>@ApiImplicitParam</code></span></a></h4><p>说明</p><blockquote><ul><li>用在<code>@Controller</code>注解标识的类的方法上。</li><li>对该方法的请求数据（传入数据）的说明。</li></ul></blockquote><h4 id="apiresponse" tabindex="-1"><a class="header-anchor" href="#apiresponse"><span><code>@ApiResponse</code></span></a></h4><p>说明</p><blockquote><ul><li>用在<code>@Controller</code>注解标识的类的方法上。</li><li>对该方法的响应数据（返回值）的说明。</li></ul></blockquote><h3 id="bean对象类注解" tabindex="-1"><a class="header-anchor" href="#bean对象类注解"><span>Bean对象类注解</span></a></h3><h4 id="apimodel" tabindex="-1"><a class="header-anchor" href="#apimodel"><span><code>@ApiModel</code></span></a></h4><p>说明</p><blockquote><ul><li>用在Bean类上。</li><li>对该类的说明。</li></ul></blockquote><h4 id="apimodelproperty" tabindex="-1"><a class="header-anchor" href="#apimodelproperty"><span><code>@ApiModelProperty</code></span></a></h4><p>说明</p><blockquote><ul><li>用在Bean类的属性上。</li><li>对该属性的含义说明。</li></ul></blockquote>`,42))])}const k=l(g,[["render",d]]),b=JSON.parse('{"path":"/software/Library-Maven-SwaggerFox.html","title":"Library - Maven - SwaggerFox","lang":"zh-CN","frontmatter":{"title":"Library - Maven - SwaggerFox","author":"魔术桌","cover":"","category":["软件程序/类库"],"date":"2024-12-01T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： 负责扫描代码提取信息生成API文档。 相关信息 外部相关文章 内部相关文章 RESTful API详细总结： OpenAPI描述规范详细总结： 简介 简要说明 Swagger（现在称为OpenAPI）是一个规范和完整的框架，用于描述、生产、消费和使用RESTful风格的Web服务。 它允许用户设计、构建、记录和使用RESTful API。 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Library - Maven - SwaggerFox\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Library-Maven-SwaggerFox.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Library - Maven - SwaggerFox"}],["meta",{"property":"og:description","content":"文章摘要： 负责扫描代码提取信息生成API文档。 相关信息 外部相关文章 内部相关文章 RESTful API详细总结： OpenAPI描述规范详细总结： 简介 简要说明 Swagger（现在称为OpenAPI）是一个规范和完整的框架，用于描述、生产、消费和使用RESTful风格的Web服务。 它允许用户设计、构建、记录和使用RESTful API。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-12-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Library-Maven-SwaggerFox.md","excerpt":"<p><strong>文章摘要：</strong> 负责扫描代码提取信息生成API文档。</p>\\n"}');export{k as comp,b as data};
