import{_ as a,c as n,a as s,o as i}from"./app-D67BBu3k.js";const t={};function l(c,e){return i(),n("div",null,e[0]||(e[0]=[s(`<p><strong>文章摘要：</strong> Vite是一种新型前端构建工具，能够显著提升前端开发体验。</p><ul><li>前置依赖：NodeJS和npm</li></ul><div class="hint-container note"><p class="hint-container-title">注释</p><p>构建工具的作用是：</p><ul><li>模块化开发：支持直接从node_modules里引入代码。</li><li>处理代码兼容性：语法降级、语法转换</li><li>提高项目性能：压缩文件、代码分割。</li><li>热更新：监听文件的变化，自动调用对应的集成工具进行重新打包，再让浏览器重新运行。</li><li>开发服务器：跨域问题。</li><li>Vite 内置dotenv依赖，能够读取<code>.env</code>环境变量文件。</li></ul><p>打包</p><ul><li>将代码交给构建工具进行编译处理的过程叫做打包，打包完成以后会得到一个浏览器可以认识的文件。</li></ul></div><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><blockquote><p>Vite是一种新型前端构建工具，能够显著提升前端开发体验。</p><ul><li>一个开发服务器，它基于 原生 ES 模块 提供了 丰富的内建功能，如速度快到惊人的 模块热更新（HMR）。</li><li>一套构建指令，它使用 Rollup 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。</li></ul></blockquote><p>作用</p><blockquote><ul><li>不同的第三方包会有不同的导出格式（这个是vite没法约束别人的事情）。</li><li>对路径的处理上可以直接使用<code>.vite/deps</code>，方便路径重写。</li><li>网络多包传输的性能问题。</li></ul></blockquote><h2 id="下载vite-cli" tabindex="-1"><a class="header-anchor" href="#下载vite-cli"><span>下载vite-cli</span></a></h2><blockquote><ul><li>此处下载项目预设，实现快速搭建项目。</li></ul></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> init vite@latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="使用插件" tabindex="-1"><a class="header-anchor" href="#使用插件"><span>使用插件</span></a></h2><blockquote><p>Vite 可以使用插件进行扩展，这得益于 Rollup 优秀的插件接口设计和一部分 Vite 独有的额外选项。这意味着 Vite 用户可以利用 Rollup 插件的强大生态系统，同时根据需要也能够扩展开发服务器和 SSR 功能。</p></blockquote><h3 id="添加插件" tabindex="-1"><a class="header-anchor" href="#添加插件"><span>添加插件</span></a></h3><p>若要使用一个插件，需要将插件添加到npm的<code>package.json</code>的<code>devDependencies</code>属性中，</p><h2 id="依赖预构建" tabindex="-1"><a class="header-anchor" href="#依赖预构建"><span>依赖预构建</span></a></h2><h2 id="静态资源处理" tabindex="-1"><a class="header-anchor" href="#静态资源处理"><span>静态资源处理</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> imgUrl <span class="token keyword">from</span> <span class="token string">&#39;./img.png&#39;</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;hero-img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> imgUrl</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">project/</span>
<span class="line">|-- dist            # 构建，编译文件</span>
<span class="line">|-- node_modules/   # 当前项目的npm仓库</span>
<span class="line">|-- public/         # </span>
<span class="line">|-- src/            # 代码文件</span>
<span class="line"> |-- assets/</span>
<span class="line"> |-- components/</span>
<span class="line"> App.vue     # 主vue组件</span>
<span class="line"> main.js     # 主js代码</span>
<span class="line"> style.css   # 主css样式</span>
<span class="line">index.html      # 启动入口</span>
<span class="line">package-lock.json   # npm依赖版本记录</span>
<span class="line">package.json        # npm配置文件</span>
<span class="line">vite.config.js      # vite配置文件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h2><p>可以通过配置<code>npm</code>的<code>package.json</code>配置来使用<code>vite</code>的可执行文件。</p><blockquote><ul><li><code>vite</code>：启动开发服务器</li><li><code>vite build</code>：为生产环境构建（编译）产物。</li><li><code>vite preview</code>：本地预览生产构建（编译）产物。</li></ul></blockquote><h3 id="指定配置文件" tabindex="-1"><a class="header-anchor" href="#指定配置文件"><span>指定配置文件</span></a></h3><blockquote><ul><li>可以显式(手动指定)地通过 <code>--config</code> 命令行选项指定一个配置文件。</li></ul></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">vite <span class="token parameter variable">--config</span> config.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><p>环境变量文件分类：</p><blockquote><ul><li><code>.env</code>：公共环境变量</li><li><code>.env.development</code>：开发环境变量</li><li><code>.env.production</code>：生产环境变量</li></ul></blockquote><div class="hint-container note"><p class="hint-container-title">注释</p><ul><li>vite框架中的dotenv依赖会读取<code>.env</code>环境变量文件到程序中。</li><li>可以通过<code>import.meta.env</code>方法来获取<code>.env</code>文件中的变量。</li><li>例子：<code>import.meta.env.MODE</code>来获取应用的运行模式。</li></ul></div><p>Vite 在一个特殊的 <code>import.meta.env</code> 对象上暴露环境变量。</p><ul><li><strong><code>import.meta.env.MODE</code></strong>: {string} 应用运行的<a href="https://www.vitejs.net/guide/env-and-mode.html#modes" target="_blank" rel="noopener noreferrer">模式</a>。</li><li><strong><code>import.meta.env.BASE_URL</code></strong>: {string} 部署应用时的基本 URL。他由<a href="https://www.vitejs.net/config/#base" target="_blank" rel="noopener noreferrer"><code>base</code> 配置项</a>决定。</li><li><strong><code>import.meta.env.PROD</code></strong>: {boolean} 应用是否运行在生产环境。</li><li><strong><code>import.meta.env.DEV</code></strong>: {boolean} 应用是否运行在开发环境 (永远与 <code>import.meta.env.PROD</code>相反)。</li></ul><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><h3 id="配置文件解析" tabindex="-1"><a class="header-anchor" href="#配置文件解析"><span>配置文件解析</span></a></h3><p>当以命令行方式运行 <code>vite</code> 时，Vite 会自动解析项目根目录下名为 <code>vite.config.js</code> 的文件。</p><p>基本配置文件基本内容如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// vite.config.js</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 配置选项</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置智能提示" tabindex="-1"><a class="header-anchor" href="#配置智能提示"><span>配置智能提示</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 提供语法提示</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>  <span class="token comment">// 提供语法提示的函数</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line"> <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语法提示的处理</p><blockquote><ul><li>导入<code>import { defineConfig } from &#39;vite</code>就能够提供语法提示。</li></ul></blockquote><p>环境变量的处理</p><blockquote><ul><li>创建<code>vite.base.config.js</code>、<code>vite.dev.config.js</code>、<code>vite.prod.config.js</code></li></ul></blockquote><h3 id="环境变量-1" tabindex="-1"><a class="header-anchor" href="#环境变量-1"><span>环境变量</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>cache</span></a></h2><p>es modul的规范 vite是什么东西 vite的基本安装和使用 vite的编译结果 vite编译结果的分析 vite的配置文件 vite处理css、静态资源 vite的插件和插件的使用 vite与ts的结合 vite的构建原理</p>`,46)]))}const p=a(t,[["render",l]]),d=JSON.parse('{"path":"/software/Library-Npm-Vite.html","title":"Library - Npm - Vite","lang":"zh-CN","frontmatter":{"title":"Library - Npm - Vite","author":"魔术桌","cover":"","category":["软件程序/类库"],"date":"2024-09-24T00:00:00.000Z","tag":["进度-待完善","知识总结"],"description":"文章摘要： Vite是一种新型前端构建工具，能够显著提升前端开发体验。 前置依赖：NodeJS和npm 注释 构建工具的作用是： 模块化开发：支持直接从node_modules里引入代码。 处理代码兼容性：语法降级、语法转换 提高项目性能：压缩文件、代码分割。 热更新：监听文件的变化，自动调用对应的集成工具进行重新打包，再让浏览器重新运行。 开发服务器...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Library - Npm - Vite\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-03T09:56:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/software/Library-Npm-Vite.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Library - Npm - Vite"}],["meta",{"property":"og:description","content":"文章摘要： Vite是一种新型前端构建工具，能够显著提升前端开发体验。 前置依赖：NodeJS和npm 注释 构建工具的作用是： 模块化开发：支持直接从node_modules里引入代码。 处理代码兼容性：语法降级、语法转换 提高项目性能：压缩文件、代码分割。 热更新：监听文件的变化，自动调用对应的集成工具进行重新打包，再让浏览器重新运行。 开发服务器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-03T09:56:57.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-待完善"}],["meta",{"property":"article:published_time","content":"2024-09-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-03T09:56:57.000Z"}]]},"git":{"updatedTime":1759485417000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":1},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":2}],"changelog":[{"hash":"2f64e32c6bfa04fdb137fc5247de26e5603a0eb3","time":1759485417000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"vault backup: 2025-10-03 17:56:57"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"software/Library-Npm-Vite.md","excerpt":"<p><strong>文章摘要：</strong> Vite是一种新型前端构建工具，能够显著提升前端开发体验。</p>\\n<ul>\\n<li>前置依赖：NodeJS和npm</li>\\n</ul>\\n"}');export{p as comp,d as data};
