import{_ as t,c as l,a as o,o as n}from"./app-D67BBu3k.js";const a={};function i(r,e){return n(),l("div",null,e[0]||(e[0]=[o('<p><strong>文章摘要：</strong> XAgent是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>外部相关文章</p><ul><li>x-agent官网：<a href="https://blog.x-agent.net/blog/xagent/" target="_blank" rel="noopener noreferrer">博客文章</a></li></ul><p>内部相关文章</p><ul><li></li></ul></div><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><blockquote><ul><li>XAgent是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。</li><li>它被设计为一个通用的智能体，可以应用于各种任务。</li><li>官方给出的定义是“一个可以解决任何给定任务的超级智能智能体”</li><li>项目地址：<a href="https://github.com/OpenBMB/XAgent" target="_blank" rel="noopener noreferrer">https://github.com/OpenBMB/XAgent</a></li></ul></blockquote><h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h2><blockquote><ul><li>**自主性：**XAgent可以在没有人类参与的情况下自动解决各种任务。</li><li>**安全性：**XAgent被设计为安全运行。所有的行为都被限制在一个docker容器内。不用担心你的主机环境受到影响</li><li>**可扩展性：**XAgent被设计为可扩展的。您可以轻松地添加新的工具来增强智能体的能力，甚至是新的智能体！</li><li>**GUI：**XAgent为用户提供了友好的GUI来与智能体交互。您也可以使用命令行界面与智能体交互。</li><li>**与人类的合作：**XAgent可以与您合作解决任务。它不仅有能力在行进中遵循您的指导来解决复杂的任务，而且在遇到挑战时还可以寻求您的帮助。</li></ul></blockquote><h3 id="组成部分" tabindex="-1"><a class="header-anchor" href="#组成部分"><span>组成部分</span></a></h3><blockquote><ul><li>**调度器：**负责动态实例化和分派任务给不同的智能体。它允许我们添加新的智能体和改进智能体的能力。</li><li>**规划器：**负责为任务生成和校正计划。它将任务分解为子任务，并为它们生成里程碑，使智能体能够逐步解决任务。</li><li>**行动者：**负责采取行动实现目标和完成子任务。行动者利用各种工具来解决子任务，它也可以与人类合作来解决任务。</li></ul></blockquote><h3 id="工具服务器" tabindex="-1"><a class="header-anchor" href="#工具服务器"><span>工具服务器</span></a></h3><p>工具服务器是为XAgent提供强大和安全的工具来解决任务的服务器。它是一个docker容器，为XAgent提供一个安全的运行环境。 目前，工具服务器提供以下工具：</p><ul><li><strong>文件编辑器</strong> 提供一个文本编辑工具，可以写入、读取和修改文件。</li><li><strong>Python笔记本</strong> 提供一个交互式的Python笔记本，可以运行Python代码来验证想法、绘制图形等。</li><li><strong>网页浏览器</strong> 提供一个网页浏览器，可以搜索和访问网页。</li><li><strong>Shell</strong> 提供一个bash shell工具，可以执行任何shell命令，甚至安装程序和托管服务。</li><li><strong>Rapid API</strong> 提供一个从Rapid API检索API并调用它们的工具，为XAgent提供了广泛的API。有关Rapid API集合的更多信息，请参见<a href="https://github.com/OpenBMB/ToolBench" target="_blank" rel="noopener noreferrer">ToolBench</a>。 您也可以轻松地向工具服务器添加新的工具，以增强XAgent的能力。</li></ul><h2 id="核心概念" tabindex="-1"><a class="header-anchor" href="#核心概念"><span>核心概念</span></a></h2><h3 id="计划与执行的双循环机制" tabindex="-1"><a class="header-anchor" href="#计划与执行的双循环机制"><span>计划与执行的双循环机制</span></a></h3><blockquote><ul><li>现有的人工智能代理（例如MetaGPT）在很大程度上被规定为人类精心设计的管道，这使得它们不再是自己意志的代理，而更像是人类设计师的延伸。这样的系统虽然在某些特定任务中有效，但通过将智能体限制在预先存在的人类知识和偏见的范围内，限制了智能体的潜力。为了为真正的自主性铺平道路，XAgent 刻意避免将人类的先验知识注入系统设计中。相反，我们赋予代理商执行自己的规划和决策过程的能力。</li><li>处理多方面的任务需要从整体上考虑问题及其各个组成部分。以前的代理通常缺乏全局计划的能力，更专注于根据预定义的策略执行任务。XAgent 采用双循环机制：用于高级任务管理的外循环进程和用于低级任务执行的内循环进程。外循环过程使代理能够识别总体任务并将其分割成更小、更可操作的组件。这种等级划分反映了人类在应对复杂挑战时所采用的自然认知过程。相比之下，内循环过程充当详细的执行器，专注于分段任务的细粒度方面。内循环体现了我们为解决问题的特定部分而采取的细致步骤。通过将高级计划与低级任务执行分开，XAgent 反映了人类采用的自然认知层次结构，并可以根据执行结果迭代优化计划。</li></ul></blockquote><blockquote><ul><li>在 XAgent 中，决策和任务执行过程通过双循环机制进行编排：外循环和内循环。从本质上讲，外循环处理的是任务的高级管理和分配，而内循环则侧重于每个子任务的低级执行和优化。</li></ul><p><code>Outer-Loop</code>外循环</p><ul><li>外循环充当高级计划者和任务的主要编排者，充当整个问题解决序列的主管。</li><li>**初始计划生成（Initial Plan Generation）：**PlanAgent 首先生成一个初始计划，该计划为任务执行制定了基本策略。这涉及将给定的复杂任务 T 分解为更小、更易于管理的子任务。此细分可以表现为任务队列。这些子任务的意图很明确，可以更直接地执行，而不会使系统不堪重负。给定一个复杂的任务，使用 PlanAgent 将其分解为一系列子任务。</li><li>**迭代计划优化（Iterative Plan Refinements）：**在初始计划之后，PlanAgent 通过从任务队列中弹出第一个子任务来进行。然后，将此子任务传递到内循环。PlanAgent 持续监控任务的进度和状态。执行每个子任务后，内部循环会从 ToolAgent 报告 Feedback。根据反馈，PlanAgent 会触发适当的处理机制，例如优化计划或继续执行后续子任务。外循环完成，直到队列中没有剩余子任务。</li></ul><p><code>Inner-Loop</code>内循环</p><ul><li>内循环对于执行外循环分配的各个子任务至关重要。</li><li>**代理调度和工具检索（Agent Dispatch and Tool Retrieval）：**根据子任务的性质，派遣具有完成任务所需能力的适当工具代理。</li><li>**工具执行（Tool Execution）：**ToolAgent 首先从外部系统检索工具以帮助完成任务。然后，代理使用 ReACT 进行子任务求解。此方法搜索完成子任务的最佳操作系列（工具调用）。</li><li>**反馈和反思（Feedback and Reflection）：**在一系列操作之后，ToolAgent 可以发出一个名为“subtask_submit”的特定操作来完成当前子任务的处理，并将反馈和反射传递给 PlanAgent。此反馈可以指示子任务是否成功完成，或突出显示潜在的改进。</li></ul></blockquote><h3 id="planagent动态规划和迭代优化" tabindex="-1"><a class="header-anchor" href="#planagent动态规划和迭代优化"><span><code>PlanAgent</code>动态规划和迭代优化</span></a></h3><blockquote><ul><li>复杂的代理系统需要善于不断制定和修改计划，以适应可变的环境和紧急需求。这些能力对于确保灵活性、弹性和效率以应对不可预见的挑战至关重要。为了使外循环具有这种适应性，我们引入了 PlanAgent。PlanAgent 经过定制，通过生成初始计划并不断修改计划来支持外循环。</li></ul></blockquote><blockquote><p>PlanAgent 定义了四个函数来优化现有计划：</p><ul><li>**子任务拆分（Subtask Split）：**使系统能够将特定子任务分解为更精细、更易于管理的单元。只有当前正在执行或未启动的子任务才有资格执行此操作。</li><li>**子任务删除（Subtask Deletion）：**删除尚未启动的子任务。已进行或已完成的子任务不符合删除条件。这确保了一定程度的敏捷性，可以修剪冗余或不相关的任务以优化整体执行。</li><li>**子任务修改（Subtask Modification）：**更改子任务的内容。要修改的子任务不应已经开始或已完成，从而保持整体计划的完整性。</li><li>**子任务添加（Subtask Addition）：**在特定子任务之后插入新的子任务作为同级任务。子任务只能在当前处理的子任务或其后续任务之后添加。它保证了新任务按顺序编排，简化了执行流程并保持了连贯性。</li></ul></blockquote><h3 id="toolagent在函数调用中协同推理和行动" tabindex="-1"><a class="header-anchor" href="#toolagent在函数调用中协同推理和行动"><span><code>ToolAgent</code>在函数调用中协同推理和行动</span></a></h3><blockquote><ul><li>对于每个动作，将智能体推理和在同一个函数调用中的行为协同起来，即推理跟踪（“思想”）和要采取的动作都被视为特定函数的参数。具体来说，每个函数调用都具有以下组件：</li><li>**思想（Thought）：**简明扼要地表示代理人对情况的主要见解。</li><li>**推理（Reasoning）：**追踪智能体为达到其想法而遍历的逻辑轨迹。</li><li>**批评（Criticism）：**捕捉智能体对其行为的自我反思，充当反馈循环。它突出了潜在的疏忽或需要改进的领域。</li><li>**命令（Command）：**指示代理根据其推理决定执行的下一个操作。</li><li>**参数（Parameters）：**枚举要执行的操作的特定参数或详细信息。</li></ul></blockquote><h3 id="toolserver支持多种工具" tabindex="-1"><a class="header-anchor" href="#toolserver支持多种工具"><span><code>ToolServer</code>支持多种工具</span></a></h3><blockquote><p>ToolServer 由三个关键组件组成：</p><ol><li>ToolServerManager 管理 docker 容器（即节点）的生命周期，处理它们的创建、监控和关闭。每当新会话启动时，管理器都可以创建一个新节点。定期检查这些节点的状态，以确保它们正常运行;</li><li>ToolServerMonitor检查节点的状态，更新节点的状态，确保节点的高效执行。如果节点长时间处于空闲状态，监视器可以停止它以节省资源;</li><li>ToolServerNode 是执行操作（例如 API 调用、文件上传、工具检索等）的单个执行单元。</li></ol></blockquote><blockquote><p>目前Xagent支持以下工具：</p><ul><li>FileSystemEnv 提供了一个用于管理文件系统操作的复杂接口。该工具提供了多种功能，从基本的文件读取和写入到内容修改和分层表示等复杂操作。</li><li>PythonNotebook 利用 Jupyter Notebook 的功能，提供了一个接口来促进 Python 代码的无缝执行。XAgent 可以动态创建或修改笔记本单元，并在受控和隔离的环境中执行它们。</li><li>WebEnv 专为 Web 交互和内容提取而设计。它提供了使用 Bing 搜索 Web 并随后浏览检索到的网页的双重功能。WebEnv 还可以识别和整理源页面中的超链接，从而更全面地了解查询内容。</li><li>ExecuteShell 旨在以编程方式执行 shell 命令。它返回已执行命令的输出和任何潜在错误。为了确保操作的稳健性，它采用了处理超时的机制，从而降低了与命令相关的风险，否则这些命令可能会无限期地停止。</li><li>RapidAPIEnv 促进了与领先的 API 市场 RapidAPI 的无缝交互。借助 RapidAPIEnv，XAgent 能够连接 160000+ 个真实世界的 API。</li><li>当 XAgent 发现当前子任务无法自行完成时，可以调用 AskHumanforHelp。在这种情况下，XAgent 将发布人类参与任务解决的特定要求。</li></ul></blockquote><h3 id="工具执行-docker" tabindex="-1"><a class="header-anchor" href="#工具执行-docker"><span>工具执行 Docker</span></a></h3><blockquote><ul><li>实现弹性、效率和可扩展性对于代理系统至关重要。与传统系统不同，XAgent 使用 ToolServer（作为执行引擎）来支持这些属性。它在 Docker 环境中运行，为工具执行提供隔离且安全的空间。这种隔离可确保工具执行的操作不会危及主系统的稳定性或安全性。</li></ul><p>这种设计带来了许多好处：</p><ol><li>**安全性：**在Docker容器中运行工具可以保护主系统免受潜在伤害;</li><li>**模块化：**将座席规划和工具执行的角色分开，可以使代码更易于管理，更容易调试，并具有可扩展性;</li><li>**效率：**系统可以根据需求和使用模式启动、停止和重启节点，从而实现最优的资源利用。借助 ToolServer，XAgent 将决策过程的复杂性LLM与工具执行分开。</li></ol></blockquote><h3 id="函数调用-xagent-的通用语言" tabindex="-1"><a class="header-anchor" href="#函数调用-xagent-的通用语言"><span>函数调用：XAgent 的通用语言</span></a></h3><blockquote><ul><li>结构化的通信模式对于代理系统的稳健性至关重要。因此，使用 OpenAI 的函数调用作为 XAgent 的通用语言。</li></ul><p>这带来了几个关键属性：</p><ol><li>结构化通信：函数调用的固有格式明确说明要求和期望的内容。这种结构最大限度地减少了误解和潜在的错误;</li><li>统一框架：在传统的人工智能系统中，不同的任务，无论是总结、规划还是API调用，都可能需要不同的方法。通过将所有任务转换为特定的函数调用，我们确保以一致的方式处理每个任务。这种统一简化了系统设计;</li><li>与外部工具无缝集成：代理经常需要与外部系统、数据库或工具进行通信。函数调用允许这种通信标准化，提供代理和外部工具都可以理解的通用语言。</li></ol></blockquote><h3 id="协同人机协作" tabindex="-1"><a class="header-anchor" href="#协同人机协作"><span>协同人机协作</span></a></h3><blockquote><ul><li>XAgent 采用为增强人机交互量身定制的交互机制。</li><li>XAgent 允许用户积极干预和指导其决策过程。</li></ul></blockquote><blockquote><ul><li>提供了一个直观的界面，用户可以在其中覆盖或修改 XAgent 建议的操作，从而将机器效率与人类的直觉和专业知识相结合。</li><li>当 XAgent 面临不熟悉的挑战时，它配备了“AskHumanforHelp”工具。</li><li>该工具征求用户的实时反馈、建议或指导，确保代理即使在不确定的地形中也能发挥最佳作用。</li><li>这种交互式范式将机器自主性与人类智慧相结合，促进了人类与 XAgent 之间的共生关系。</li></ul></blockquote><h2 id="源码拆解" tabindex="-1"><a class="header-anchor" href="#源码拆解"><span>源码拆解</span></a></h2>',31)]))}const s=t(a,[["render",i]]),g=JSON.parse('{"path":"/note/Technology-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-%E6%8A%80%E6%9C%AF-%E6%99%BA%E8%83%BD%E4%BD%93-XAgent.html","title":"Technology - 人工智能 - 技术 - 智能体 - XAgent","lang":"zh-CN","frontmatter":{"title":"Technology - 人工智能 - 技术 - 智能体 - XAgent","author":"魔术桌","cover":"","category":["学习笔记/技术"],"date":"2024-10-01T00:00:00.000Z","tag":["进度-已完成","知识总结"],"description":"文章摘要： XAgent是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。 相关信息 外部相关文章 x-agent官网：博客文章 内部相关文章 简介 XAgent是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。 它被设计为一个通用的智能体，可以应用于各种任务。 官方给出的定义是“一个可以解决任何给定任务...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Technology - 人工智能 - 技术 - 智能体 - XAgent\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-06T02:37:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔术桌\\"}]}"],["meta",{"property":"og:url","content":"https://blog.magictable.ha.cn/note/Technology-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-%E6%8A%80%E6%9C%AF-%E6%99%BA%E8%83%BD%E4%BD%93-XAgent.html"}],["meta",{"property":"og:site_name","content":"魔术桌"}],["meta",{"property":"og:title","content":"Technology - 人工智能 - 技术 - 智能体 - XAgent"}],["meta",{"property":"og:description","content":"文章摘要： XAgent是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。 相关信息 外部相关文章 x-agent官网：博客文章 内部相关文章 简介 XAgent是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。 它被设计为一个通用的智能体，可以应用于各种任务。 官方给出的定义是“一个可以解决任何给定任务..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-06T02:37:54.000Z"}],["meta",{"property":"article:author","content":"魔术桌"}],["meta",{"property":"article:tag","content":"知识总结"}],["meta",{"property":"article:tag","content":"进度-已完成"}],["meta",{"property":"article:published_time","content":"2024-10-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-06T02:37:54.000Z"}]]},"git":{"updatedTime":1759718274000,"contributors":[{"name":"MagicTable-RedmiNote12TPro-Android","username":"","email":"13459588094@163.com","commits":2},{"name":"MagicTable-HappinessHome-DebianLinux","username":"","email":"13459588094@163.com","commits":1}],"changelog":[{"hash":"2fee46a18beafc4284ad1e19b3f2684c7954037e","time":1759718274000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"手机端同步笔记"},{"hash":"ea490d819f6b9c38b6faf647221faa9808862172","time":1759413290000,"email":"13459588094@163.com","author":"MagicTable-HappinessHome-DebianLinux","message":"更新博客文章数据"},{"hash":"bd68b5c596d6a0543e6461d26edd64a5440f6020","time":1758421995000,"email":"13459588094@163.com","author":"MagicTable-RedmiNote12TPro-Android","message":"初始化仓库版本"}]},"autoDesc":true,"filePathRelative":"note/Technology-人工智能-技术-智能体-XAgent.md","excerpt":"<p><strong>文章摘要：</strong> XAgent是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。</p>\\n"}');export{s as comp,g as data};
